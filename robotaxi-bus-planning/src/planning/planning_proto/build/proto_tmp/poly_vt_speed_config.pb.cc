// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: poly_vt_speed_config.proto

#include "poly_vt_speed_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace acu {
namespace planning {
class PolyVTSpeedConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PolyVTSpeedConfig>
      _instance;
} _PolyVTSpeedConfig_default_instance_;
}  // namespace planning
}  // namespace acu
namespace protobuf_poly_5fvt_5fspeed_5fconfig_2eproto {
void InitDefaultsPolyVTSpeedConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_st_5fboundary_5fconfig_2eproto::InitDefaultsStBoundaryConfig();
  {
    void* ptr = &::acu::planning::_PolyVTSpeedConfig_default_instance_;
    new (ptr) ::acu::planning::PolyVTSpeedConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning::PolyVTSpeedConfig::InitAsDefaultInstance();
}

void InitDefaultsPolyVTSpeedConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolyVTSpeedConfigImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, total_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, total_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, num_t_layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, online_num_v_layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, matrix_dim_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, online_max_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, online_max_dec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, online_max_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, offline_num_v_layers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, offline_max_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, offline_max_dec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, offline_max_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, num_evaluated_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, sampling_unit_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, max_sampling_unit_v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning::PolyVTSpeedConfig, st_boundary_config_),
  1,
  2,
  3,
  4,
  7,
  5,
  6,
  9,
  8,
  10,
  11,
  12,
  15,
  13,
  14,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 21, sizeof(::acu::planning::PolyVTSpeedConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning::_PolyVTSpeedConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "poly_vt_speed_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032poly_vt_speed_config.proto\022\014acu.planni"
      "ng\032\030st_boundary_config.proto\"\314\003\n\021PolyVTS"
      "peedConfig\022\025\n\ntotal_time\030\001 \001(\001:\0010\022\022\n\007tot"
      "al_s\030\002 \001(\001:\0010\022\024\n\014num_t_layers\030\003 \001(\005\022\033\n\023o"
      "nline_num_v_layers\030\004 \001(\005\022\024\n\014matrix_dim_s"
      "\030\005 \001(\005\022\026\n\016online_max_acc\030\006 \001(\001\022\026\n\016online"
      "_max_dec\030\007 \001(\001\022\030\n\020online_max_speed\030\010 \001(\001"
      "\022\034\n\024offline_num_v_layers\030\t \001(\005\022\027\n\017offlin"
      "e_max_acc\030\n \001(\001\022\027\n\017offline_max_dec\030\013 \001(\001"
      "\022\031\n\021offline_max_speed\030\014 \001(\001\022\034\n\024num_evalu"
      "ated_points\030\r \001(\005\022\027\n\017sampling_unit_v\030\016 \001"
      "(\001\022\033\n\023max_sampling_unit_v\030\017 \001(\001\022:\n\022st_bo"
      "undary_config\030\020 \001(\0132\036.acu.planning.StBou"
      "ndaryConfig"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 531);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "poly_vt_speed_config.proto", &protobuf_RegisterTypes);
  ::protobuf_st_5fboundary_5fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_poly_5fvt_5fspeed_5fconfig_2eproto
namespace acu {
namespace planning {

// ===================================================================

void PolyVTSpeedConfig::InitAsDefaultInstance() {
  ::acu::planning::_PolyVTSpeedConfig_default_instance_._instance.get_mutable()->st_boundary_config_ = const_cast< ::acu::planning::StBoundaryConfig*>(
      ::acu::planning::StBoundaryConfig::internal_default_instance());
}
void PolyVTSpeedConfig::clear_st_boundary_config() {
  if (st_boundary_config_ != NULL) st_boundary_config_->Clear();
  clear_has_st_boundary_config();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PolyVTSpeedConfig::kTotalTimeFieldNumber;
const int PolyVTSpeedConfig::kTotalSFieldNumber;
const int PolyVTSpeedConfig::kNumTLayersFieldNumber;
const int PolyVTSpeedConfig::kOnlineNumVLayersFieldNumber;
const int PolyVTSpeedConfig::kMatrixDimSFieldNumber;
const int PolyVTSpeedConfig::kOnlineMaxAccFieldNumber;
const int PolyVTSpeedConfig::kOnlineMaxDecFieldNumber;
const int PolyVTSpeedConfig::kOnlineMaxSpeedFieldNumber;
const int PolyVTSpeedConfig::kOfflineNumVLayersFieldNumber;
const int PolyVTSpeedConfig::kOfflineMaxAccFieldNumber;
const int PolyVTSpeedConfig::kOfflineMaxDecFieldNumber;
const int PolyVTSpeedConfig::kOfflineMaxSpeedFieldNumber;
const int PolyVTSpeedConfig::kNumEvaluatedPointsFieldNumber;
const int PolyVTSpeedConfig::kSamplingUnitVFieldNumber;
const int PolyVTSpeedConfig::kMaxSamplingUnitVFieldNumber;
const int PolyVTSpeedConfig::kStBoundaryConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PolyVTSpeedConfig::PolyVTSpeedConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::InitDefaultsPolyVTSpeedConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning.PolyVTSpeedConfig)
}
PolyVTSpeedConfig::PolyVTSpeedConfig(const PolyVTSpeedConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_st_boundary_config()) {
    st_boundary_config_ = new ::acu::planning::StBoundaryConfig(*from.st_boundary_config_);
  } else {
    st_boundary_config_ = NULL;
  }
  ::memcpy(&total_time_, &from.total_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_evaluated_points_) -
    reinterpret_cast<char*>(&total_time_)) + sizeof(num_evaluated_points_));
  // @@protoc_insertion_point(copy_constructor:acu.planning.PolyVTSpeedConfig)
}

void PolyVTSpeedConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&st_boundary_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_evaluated_points_) -
      reinterpret_cast<char*>(&st_boundary_config_)) + sizeof(num_evaluated_points_));
}

PolyVTSpeedConfig::~PolyVTSpeedConfig() {
  // @@protoc_insertion_point(destructor:acu.planning.PolyVTSpeedConfig)
  SharedDtor();
}

void PolyVTSpeedConfig::SharedDtor() {
  if (this != internal_default_instance()) delete st_boundary_config_;
}

void PolyVTSpeedConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PolyVTSpeedConfig::descriptor() {
  ::protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PolyVTSpeedConfig& PolyVTSpeedConfig::default_instance() {
  ::protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::InitDefaultsPolyVTSpeedConfig();
  return *internal_default_instance();
}

PolyVTSpeedConfig* PolyVTSpeedConfig::New(::google::protobuf::Arena* arena) const {
  PolyVTSpeedConfig* n = new PolyVTSpeedConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PolyVTSpeedConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning.PolyVTSpeedConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(st_boundary_config_ != NULL);
    st_boundary_config_->Clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&total_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&matrix_dim_s_) -
        reinterpret_cast<char*>(&total_time_)) + sizeof(matrix_dim_s_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&offline_num_v_layers_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_evaluated_points_) -
        reinterpret_cast<char*>(&offline_num_v_layers_)) + sizeof(num_evaluated_points_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PolyVTSpeedConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning.PolyVTSpeedConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double total_time = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_total_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double total_s = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_total_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_t_layers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_num_t_layers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_t_layers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 online_num_v_layers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_online_num_v_layers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_num_v_layers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 matrix_dim_s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_matrix_dim_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &matrix_dim_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double online_max_acc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_online_max_acc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &online_max_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double online_max_dec = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_online_max_dec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &online_max_dec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double online_max_speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_online_max_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &online_max_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 offline_num_v_layers = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_offline_num_v_layers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offline_num_v_layers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double offline_max_acc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_offline_max_acc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offline_max_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double offline_max_dec = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_offline_max_dec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offline_max_dec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double offline_max_speed = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_offline_max_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offline_max_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 num_evaluated_points = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_num_evaluated_points();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_evaluated_points_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double sampling_unit_v = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_sampling_unit_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sampling_unit_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double max_sampling_unit_v = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_max_sampling_unit_v();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_sampling_unit_v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning.StBoundaryConfig st_boundary_config = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_st_boundary_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning.PolyVTSpeedConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning.PolyVTSpeedConfig)
  return false;
#undef DO_
}

void PolyVTSpeedConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning.PolyVTSpeedConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double total_time = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->total_time(), output);
  }

  // optional double total_s = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->total_s(), output);
  }

  // optional int32 num_t_layers = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_t_layers(), output);
  }

  // optional int32 online_num_v_layers = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->online_num_v_layers(), output);
  }

  // optional int32 matrix_dim_s = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->matrix_dim_s(), output);
  }

  // optional double online_max_acc = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->online_max_acc(), output);
  }

  // optional double online_max_dec = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->online_max_dec(), output);
  }

  // optional double online_max_speed = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->online_max_speed(), output);
  }

  // optional int32 offline_num_v_layers = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->offline_num_v_layers(), output);
  }

  // optional double offline_max_acc = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->offline_max_acc(), output);
  }

  // optional double offline_max_dec = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->offline_max_dec(), output);
  }

  // optional double offline_max_speed = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->offline_max_speed(), output);
  }

  // optional int32 num_evaluated_points = 13;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->num_evaluated_points(), output);
  }

  // optional double sampling_unit_v = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->sampling_unit_v(), output);
  }

  // optional double max_sampling_unit_v = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->max_sampling_unit_v(), output);
  }

  // optional .acu.planning.StBoundaryConfig st_boundary_config = 16;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->st_boundary_config_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning.PolyVTSpeedConfig)
}

::google::protobuf::uint8* PolyVTSpeedConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning.PolyVTSpeedConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double total_time = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->total_time(), target);
  }

  // optional double total_s = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->total_s(), target);
  }

  // optional int32 num_t_layers = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_t_layers(), target);
  }

  // optional int32 online_num_v_layers = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->online_num_v_layers(), target);
  }

  // optional int32 matrix_dim_s = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->matrix_dim_s(), target);
  }

  // optional double online_max_acc = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->online_max_acc(), target);
  }

  // optional double online_max_dec = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->online_max_dec(), target);
  }

  // optional double online_max_speed = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->online_max_speed(), target);
  }

  // optional int32 offline_num_v_layers = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->offline_num_v_layers(), target);
  }

  // optional double offline_max_acc = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->offline_max_acc(), target);
  }

  // optional double offline_max_dec = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->offline_max_dec(), target);
  }

  // optional double offline_max_speed = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->offline_max_speed(), target);
  }

  // optional int32 num_evaluated_points = 13;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->num_evaluated_points(), target);
  }

  // optional double sampling_unit_v = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->sampling_unit_v(), target);
  }

  // optional double max_sampling_unit_v = 15;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->max_sampling_unit_v(), target);
  }

  // optional .acu.planning.StBoundaryConfig st_boundary_config = 16;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->st_boundary_config_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning.PolyVTSpeedConfig)
  return target;
}

size_t PolyVTSpeedConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning.PolyVTSpeedConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .acu.planning.StBoundaryConfig st_boundary_config = 16;
    if (has_st_boundary_config()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->st_boundary_config_);
    }

    // optional double total_time = 1 [default = 0];
    if (has_total_time()) {
      total_size += 1 + 8;
    }

    // optional double total_s = 2 [default = 0];
    if (has_total_s()) {
      total_size += 1 + 8;
    }

    // optional int32 num_t_layers = 3;
    if (has_num_t_layers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_t_layers());
    }

    // optional int32 online_num_v_layers = 4;
    if (has_online_num_v_layers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_num_v_layers());
    }

    // optional double online_max_acc = 6;
    if (has_online_max_acc()) {
      total_size += 1 + 8;
    }

    // optional double online_max_dec = 7;
    if (has_online_max_dec()) {
      total_size += 1 + 8;
    }

    // optional int32 matrix_dim_s = 5;
    if (has_matrix_dim_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->matrix_dim_s());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 offline_num_v_layers = 9;
    if (has_offline_num_v_layers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offline_num_v_layers());
    }

    // optional double online_max_speed = 8;
    if (has_online_max_speed()) {
      total_size += 1 + 8;
    }

    // optional double offline_max_acc = 10;
    if (has_offline_max_acc()) {
      total_size += 1 + 8;
    }

    // optional double offline_max_dec = 11;
    if (has_offline_max_dec()) {
      total_size += 1 + 8;
    }

    // optional double offline_max_speed = 12;
    if (has_offline_max_speed()) {
      total_size += 1 + 8;
    }

    // optional double sampling_unit_v = 14;
    if (has_sampling_unit_v()) {
      total_size += 1 + 8;
    }

    // optional double max_sampling_unit_v = 15;
    if (has_max_sampling_unit_v()) {
      total_size += 1 + 8;
    }

    // optional int32 num_evaluated_points = 13;
    if (has_num_evaluated_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_evaluated_points());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PolyVTSpeedConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning.PolyVTSpeedConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PolyVTSpeedConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PolyVTSpeedConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning.PolyVTSpeedConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning.PolyVTSpeedConfig)
    MergeFrom(*source);
  }
}

void PolyVTSpeedConfig::MergeFrom(const PolyVTSpeedConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning.PolyVTSpeedConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_st_boundary_config()->::acu::planning::StBoundaryConfig::MergeFrom(from.st_boundary_config());
    }
    if (cached_has_bits & 0x00000002u) {
      total_time_ = from.total_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      total_s_ = from.total_s_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_t_layers_ = from.num_t_layers_;
    }
    if (cached_has_bits & 0x00000010u) {
      online_num_v_layers_ = from.online_num_v_layers_;
    }
    if (cached_has_bits & 0x00000020u) {
      online_max_acc_ = from.online_max_acc_;
    }
    if (cached_has_bits & 0x00000040u) {
      online_max_dec_ = from.online_max_dec_;
    }
    if (cached_has_bits & 0x00000080u) {
      matrix_dim_s_ = from.matrix_dim_s_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      offline_num_v_layers_ = from.offline_num_v_layers_;
    }
    if (cached_has_bits & 0x00000200u) {
      online_max_speed_ = from.online_max_speed_;
    }
    if (cached_has_bits & 0x00000400u) {
      offline_max_acc_ = from.offline_max_acc_;
    }
    if (cached_has_bits & 0x00000800u) {
      offline_max_dec_ = from.offline_max_dec_;
    }
    if (cached_has_bits & 0x00001000u) {
      offline_max_speed_ = from.offline_max_speed_;
    }
    if (cached_has_bits & 0x00002000u) {
      sampling_unit_v_ = from.sampling_unit_v_;
    }
    if (cached_has_bits & 0x00004000u) {
      max_sampling_unit_v_ = from.max_sampling_unit_v_;
    }
    if (cached_has_bits & 0x00008000u) {
      num_evaluated_points_ = from.num_evaluated_points_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PolyVTSpeedConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning.PolyVTSpeedConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolyVTSpeedConfig::CopyFrom(const PolyVTSpeedConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning.PolyVTSpeedConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolyVTSpeedConfig::IsInitialized() const {
  return true;
}

void PolyVTSpeedConfig::Swap(PolyVTSpeedConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolyVTSpeedConfig::InternalSwap(PolyVTSpeedConfig* other) {
  using std::swap;
  swap(st_boundary_config_, other->st_boundary_config_);
  swap(total_time_, other->total_time_);
  swap(total_s_, other->total_s_);
  swap(num_t_layers_, other->num_t_layers_);
  swap(online_num_v_layers_, other->online_num_v_layers_);
  swap(online_max_acc_, other->online_max_acc_);
  swap(online_max_dec_, other->online_max_dec_);
  swap(matrix_dim_s_, other->matrix_dim_s_);
  swap(offline_num_v_layers_, other->offline_num_v_layers_);
  swap(online_max_speed_, other->online_max_speed_);
  swap(offline_max_acc_, other->offline_max_acc_);
  swap(offline_max_dec_, other->offline_max_dec_);
  swap(offline_max_speed_, other->offline_max_speed_);
  swap(sampling_unit_v_, other->sampling_unit_v_);
  swap(max_sampling_unit_v_, other->max_sampling_unit_v_);
  swap(num_evaluated_points_, other->num_evaluated_points_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PolyVTSpeedConfig::GetMetadata() const {
  protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_poly_5fvt_5fspeed_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning
}  // namespace acu

// @@protoc_insertion_point(global_scope)
