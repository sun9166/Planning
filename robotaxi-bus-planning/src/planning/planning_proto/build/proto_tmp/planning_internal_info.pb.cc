// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: planning_internal_info.proto

#include "planning_internal_info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace acu {
namespace planning_internal {
class TrajectoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trajectory>
      _instance;
} _Trajectory_default_instance_;
class DebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Debug>
      _instance;
} _Debug_default_instance_;
class SpeedPlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpeedPlan>
      _instance;
} _SpeedPlan_default_instance_;
class StGraphBoundaryDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StGraphBoundaryDebug>
      _instance;
} _StGraphBoundaryDebug_default_instance_;
class SLFrameDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLFrameDebug>
      _instance;
} _SLFrameDebug_default_instance_;
class STGraphDebug_STGraphSpeedConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphSpeedConstraint>
      _instance;
} _STGraphDebug_STGraphSpeedConstraint_default_instance_;
class STGraphDebug_STGraphKernelCuiseRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphKernelCuiseRef>
      _instance;
} _STGraphDebug_STGraphKernelCuiseRef_default_instance_;
class STGraphDebug_STGraphKernelFollowRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphKernelFollowRef>
      _instance;
} _STGraphDebug_STGraphKernelFollowRef_default_instance_;
class STGraphDebug_STGraphSConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphSConstraint>
      _instance;
} _STGraphDebug_STGraphSConstraint_default_instance_;
class STGraphDebug_STGraphAccelerationConstraintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug_STGraphAccelerationConstraint>
      _instance;
} _STGraphDebug_STGraphAccelerationConstraint_default_instance_;
class STGraphDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<STGraphDebug>
      _instance;
} _STGraphDebug_default_instance_;
class DecisionTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecisionTag>
      _instance;
} _DecisionTag_default_instance_;
class ObstacleDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObstacleDebug>
      _instance;
} _ObstacleDebug_default_instance_;
class ReferenceLineDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferenceLineDebug>
      _instance;
} _ReferenceLineDebug_default_instance_;
class SampleLayerDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SampleLayerDebug>
      _instance;
} _SampleLayerDebug_default_instance_;
class DpPolyGraphDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DpPolyGraphDebug>
      _instance;
} _DpPolyGraphDebug_default_instance_;
class TrajectoriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Trajectories>
      _instance;
} _Trajectories_default_instance_;
class SmootherDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SmootherDebug>
      _instance;
} _SmootherDebug_default_instance_;
class PlanningDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanningData>
      _instance;
} _PlanningData_default_instance_;
class LatticeStPixelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatticeStPixel>
      _instance;
} _LatticeStPixel_default_instance_;
class LatticeStTrainingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatticeStTraining>
      _instance;
} _LatticeStTraining_default_instance_;
class CostComponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CostComponents>
      _instance;
} _CostComponents_default_instance_;
class AutoTuningTrainingDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AutoTuningTrainingData>
      _instance;
} _AutoTuningTrainingData_default_instance_;
}  // namespace planning_internal
}  // namespace acu
namespace protobuf_planning_5finternal_5finfo_2eproto {
void InitDefaultsTrajectoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsTrajectoryPoint();
  {
    void* ptr = &::acu::planning_internal::_Trajectory_default_instance_;
    new (ptr) ::acu::planning_internal::Trajectory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::Trajectory::InitAsDefaultInstance();
}

void InitDefaultsTrajectory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrajectoryImpl);
}

void InitDefaultsDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsPlanningData();
  {
    void* ptr = &::acu::planning_internal::_Debug_default_instance_;
    new (ptr) ::acu::planning_internal::Debug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::Debug::InitAsDefaultInstance();
}

void InitDefaultsDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDebugImpl);
}

void InitDefaultsSpeedPlanImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSpeedPoint();
  {
    void* ptr = &::acu::planning_internal::_SpeedPlan_default_instance_;
    new (ptr) ::acu::planning_internal::SpeedPlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::SpeedPlan::InitAsDefaultInstance();
}

void InitDefaultsSpeedPlan() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSpeedPlanImpl);
}

void InitDefaultsStGraphBoundaryDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSpeedPoint();
  {
    void* ptr = &::acu::planning_internal::_StGraphBoundaryDebug_default_instance_;
    new (ptr) ::acu::planning_internal::StGraphBoundaryDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::StGraphBoundaryDebug::InitAsDefaultInstance();
}

void InitDefaultsStGraphBoundaryDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStGraphBoundaryDebugImpl);
}

void InitDefaultsSLFrameDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSLPoint();
  {
    void* ptr = &::acu::planning_internal::_SLFrameDebug_default_instance_;
    new (ptr) ::acu::planning_internal::SLFrameDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::SLFrameDebug::InitAsDefaultInstance();
}

void InitDefaultsSLFrameDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLFrameDebugImpl);
}

void InitDefaultsSTGraphDebug_STGraphSpeedConstraintImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_STGraphSpeedConstraint_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug_STGraphSpeedConstraint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebug_STGraphSpeedConstraintImpl);
}

void InitDefaultsSTGraphDebug_STGraphKernelCuiseRefImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_STGraphKernelCuiseRef_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug_STGraphKernelCuiseRef() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebug_STGraphKernelCuiseRefImpl);
}

void InitDefaultsSTGraphDebug_STGraphKernelFollowRefImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_STGraphKernelFollowRef_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug_STGraphKernelFollowRef() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebug_STGraphKernelFollowRefImpl);
}

void InitDefaultsSTGraphDebug_STGraphSConstraintImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_STGraphSConstraint_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug_STGraphSConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug_STGraphSConstraint::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug_STGraphSConstraint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebug_STGraphSConstraintImpl);
}

void InitDefaultsSTGraphDebug_STGraphAccelerationConstraintImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_STGraphAccelerationConstraint_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug_STGraphAccelerationConstraint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebug_STGraphAccelerationConstraintImpl);
}

void InitDefaultsSTGraphDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsStGraphBoundaryDebug();
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSpeedPoint();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSpeedConstraint();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelCuiseRef();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelFollowRef();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSConstraint();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphAccelerationConstraint();
  {
    void* ptr = &::acu::planning_internal::_STGraphDebug_default_instance_;
    new (ptr) ::acu::planning_internal::STGraphDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::STGraphDebug::InitAsDefaultInstance();
}

void InitDefaultsSTGraphDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSTGraphDebugImpl);
}

void InitDefaultsDecisionTagImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_decision_2eproto::InitDefaultsObjectDecisionType();
  {
    void* ptr = &::acu::planning_internal::_DecisionTag_default_instance_;
    new (ptr) ::acu::planning_internal::DecisionTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::DecisionTag::InitAsDefaultInstance();
}

void InitDefaultsDecisionTag() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDecisionTagImpl);
}

void InitDefaultsObstacleDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fboundary_2eproto::InitDefaultsSLBoundary();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDecisionTag();
  {
    void* ptr = &::acu::planning_internal::_ObstacleDebug_default_instance_;
    new (ptr) ::acu::planning_internal::ObstacleDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::ObstacleDebug::InitAsDefaultInstance();
}

void InitDefaultsObstacleDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObstacleDebugImpl);
}

void InitDefaultsReferenceLineDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_ReferenceLineDebug_default_instance_;
    new (ptr) ::acu::planning_internal::ReferenceLineDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::ReferenceLineDebug::InitAsDefaultInstance();
}

void InitDefaultsReferenceLineDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReferenceLineDebugImpl);
}

void InitDefaultsSampleLayerDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSLPoint();
  {
    void* ptr = &::acu::planning_internal::_SampleLayerDebug_default_instance_;
    new (ptr) ::acu::planning_internal::SampleLayerDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::SampleLayerDebug::InitAsDefaultInstance();
}

void InitDefaultsSampleLayerDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSampleLayerDebugImpl);
}

void InitDefaultsDpPolyGraphDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSampleLayerDebug();
  protobuf_pnc_5fpoint_2eproto::InitDefaultsSLPoint();
  {
    void* ptr = &::acu::planning_internal::_DpPolyGraphDebug_default_instance_;
    new (ptr) ::acu::planning_internal::DpPolyGraphDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::DpPolyGraphDebug::InitAsDefaultInstance();
}

void InitDefaultsDpPolyGraphDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDpPolyGraphDebugImpl);
}

void InitDefaultsTrajectoriesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsTrajectory();
  {
    void* ptr = &::acu::planning_internal::_Trajectories_default_instance_;
    new (ptr) ::acu::planning_internal::Trajectories();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::Trajectories::InitAsDefaultInstance();
}

void InitDefaultsTrajectories() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrajectoriesImpl);
}

void InitDefaultsSmootherDebugImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_SmootherDebug_default_instance_;
    new (ptr) ::acu::planning_internal::SmootherDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::SmootherDebug::InitAsDefaultInstance();
}

void InitDefaultsSmootherDebug() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSmootherDebugImpl);
}

void InitDefaultsPlanningDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pnc_5fpoint_2eproto::InitDefaultsTrajectoryPoint();
  protobuf_pnc_5fpoint_2eproto::InitDefaultsPath();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSpeedPlan();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSLFrameDebug();
  protobuf_header_2eproto::InitDefaultsHeader();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsObstacleDebug();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsReferenceLineDebug();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDpPolyGraphDebug();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStTraining();
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSmootherDebug();
  {
    void* ptr = &::acu::planning_internal::_PlanningData_default_instance_;
    new (ptr) ::acu::planning_internal::PlanningData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::PlanningData::InitAsDefaultInstance();
}

void InitDefaultsPlanningData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlanningDataImpl);
}

void InitDefaultsLatticeStPixelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_LatticeStPixel_default_instance_;
    new (ptr) ::acu::planning_internal::LatticeStPixel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::LatticeStPixel::InitAsDefaultInstance();
}

void InitDefaultsLatticeStPixel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLatticeStPixelImpl);
}

void InitDefaultsLatticeStTrainingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStPixel();
  {
    void* ptr = &::acu::planning_internal::_LatticeStTraining_default_instance_;
    new (ptr) ::acu::planning_internal::LatticeStTraining();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::LatticeStTraining::InitAsDefaultInstance();
}

void InitDefaultsLatticeStTraining() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLatticeStTrainingImpl);
}

void InitDefaultsCostComponentsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::planning_internal::_CostComponents_default_instance_;
    new (ptr) ::acu::planning_internal::CostComponents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::CostComponents::InitAsDefaultInstance();
}

void InitDefaultsCostComponents() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCostComponentsImpl);
}

void InitDefaultsAutoTuningTrainingDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsCostComponents();
  {
    void* ptr = &::acu::planning_internal::_AutoTuningTrainingData_default_instance_;
    new (ptr) ::acu::planning_internal::AutoTuningTrainingData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::planning_internal::AutoTuningTrainingData::InitAsDefaultInstance();
}

void InitDefaultsAutoTuningTrainingData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAutoTuningTrainingDataImpl);
}

::google::protobuf::Metadata file_level_metadata[23];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectory, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectory, trajectory_point_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Debug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Debug, planning_data_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SpeedPlan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SpeedPlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SpeedPlan, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SpeedPlan, speed_point_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::StGraphBoundaryDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::StGraphBoundaryDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::StGraphBoundaryDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::StGraphBoundaryDebug, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::StGraphBoundaryDebug, type_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, sampled_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, static_obstacle_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, dynamic_obstacle_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, static_obstacle_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, dynamic_obstacle_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, map_lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, map_upper_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, sl_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, aggregated_boundary_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, aggregated_boundary_low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SLFrameDebug, aggregated_boundary_high_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint, upper_bound_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef, cruise_line_s_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef, follow_line_s_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSConstraint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSConstraint, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSConstraint, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphSConstraint, upper_bound_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint, lower_bound_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint, upper_bound_),
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, speed_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, speed_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, speed_constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, kernel_cruise_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, kernel_follow_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, s_constraint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::STGraphDebug, a_constraint_),
  0,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DecisionTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DecisionTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DecisionTag, decider_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DecisionTag, decision_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, sl_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, decision_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, vertices_x_coords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ObstacleDebug, vertices_y_coords_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, is_change_lane_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, is_drivable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::ReferenceLineDebug, is_protected_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SampleLayerDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SampleLayerDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SampleLayerDebug, sl_point_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DpPolyGraphDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DpPolyGraphDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DpPolyGraphDebug, sample_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::DpPolyGraphDebug, min_cost_point_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectories, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectories, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::Trajectories, trajectory_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SmootherDebug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SmootherDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SmootherDebug, is_smoothed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SmootherDebug, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::SmootherDebug, reason_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, init_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, speed_plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, st_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, sl_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, prediction_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, reference_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, dp_poly_graph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, lattice_st_image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, front_clear_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::PlanningData, smoother_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  ~0u,
  ~0u,
  2,
  3,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStPixel, b_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, pixel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, annotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, num_s_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, num_t_grids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, s_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::LatticeStTraining, t_resolution_),
  ~0u,
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::CostComponents, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::CostComponents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::CostComponents, cost_component_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::AutoTuningTrainingData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::AutoTuningTrainingData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::AutoTuningTrainingData, teacher_component_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::planning_internal::AutoTuningTrainingData, student_component_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::acu::planning_internal::Trajectory)},
  { 9, 15, sizeof(::acu::planning_internal::Debug)},
  { 16, 23, sizeof(::acu::planning_internal::SpeedPlan)},
  { 25, 33, sizeof(::acu::planning_internal::StGraphBoundaryDebug)},
  { 36, 53, sizeof(::acu::planning_internal::SLFrameDebug)},
  { 65, 73, sizeof(::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint)},
  { 76, 83, sizeof(::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef)},
  { 85, 92, sizeof(::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef)},
  { 94, 102, sizeof(::acu::planning_internal::STGraphDebug_STGraphSConstraint)},
  { 105, 113, sizeof(::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint)},
  { 116, 130, sizeof(::acu::planning_internal::STGraphDebug)},
  { 139, 146, sizeof(::acu::planning_internal::DecisionTag)},
  { 148, 158, sizeof(::acu::planning_internal::ObstacleDebug)},
  { 163, 174, sizeof(::acu::planning_internal::ReferenceLineDebug)},
  { 180, 186, sizeof(::acu::planning_internal::SampleLayerDebug)},
  { 187, 194, sizeof(::acu::planning_internal::DpPolyGraphDebug)},
  { 196, 202, sizeof(::acu::planning_internal::Trajectories)},
  { 203, 211, sizeof(::acu::planning_internal::SmootherDebug)},
  { 214, 231, sizeof(::acu::planning_internal::PlanningData)},
  { 243, 253, sizeof(::acu::planning_internal::LatticeStPixel)},
  { 258, 270, sizeof(::acu::planning_internal::LatticeStTraining)},
  { 277, 283, sizeof(::acu::planning_internal::CostComponents)},
  { 284, 291, sizeof(::acu::planning_internal::AutoTuningTrainingData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_Trajectory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_Debug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_SpeedPlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_StGraphBoundaryDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_SLFrameDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_STGraphSpeedConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_STGraphKernelCuiseRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_STGraphKernelFollowRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_STGraphSConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_STGraphAccelerationConstraint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_STGraphDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_DecisionTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_ObstacleDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_ReferenceLineDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_SampleLayerDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_DpPolyGraphDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_Trajectories_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_SmootherDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_PlanningData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_LatticeStPixel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_LatticeStTraining_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_CostComponents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::planning_internal::_AutoTuningTrainingData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "planning_internal_info.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034planning_internal_info.proto\022\025acu.plan"
      "ning_internal\032\014header.proto\032\017pnc_point.p"
      "roto\032\021sl_boundary.proto\032\016decision.proto\032"
      "\025planning_config.proto\"Q\n\nTrajectory\022\014\n\004"
      "name\030\001 \001(\t\0225\n\020trajectory_point\030\002 \003(\0132\033.a"
      "cu.common.TrajectoryPoint\"C\n\005Debug\022:\n\rpl"
      "anning_data\030\002 \001(\0132#.acu.planning_interna"
      "l.PlanningData\"F\n\tSpeedPlan\022\014\n\004name\030\001 \001("
      "\t\022+\n\013speed_point\030\002 \003(\0132\026.acu.common.Spee"
      "dPoint\"\332\002\n\024StGraphBoundaryDebug\022\014\n\004name\030"
      "\001 \001(\t\022%\n\005point\030\002 \003(\0132\026.acu.common.SpeedP"
      "oint\022H\n\004type\030\003 \001(\0162:.acu.planning_intern"
      "al.StGraphBoundaryDebug.StBoundaryType\"\302"
      "\001\n\016StBoundaryType\022\034\n\030ST_BOUNDARY_TYPE_UN"
      "KNOWN\020\001\022\031\n\025ST_BOUNDARY_TYPE_STOP\020\002\022\033\n\027ST"
      "_BOUNDARY_TYPE_FOLLOW\020\003\022\032\n\026ST_BOUNDARY_T"
      "YPE_YIELD\020\004\022\035\n\031ST_BOUNDARY_TYPE_OVERTAKE"
      "\020\005\022\037\n\033ST_BOUNDARY_TYPE_KEEP_CLEAR\020\006\"\377\002\n\014"
      "SLFrameDebug\022\014\n\004name\030\001 \001(\t\022\021\n\tsampled_s\030"
      "\002 \003(\001\022#\n\033static_obstacle_lower_bound\030\003 \003"
      "(\001\022$\n\034dynamic_obstacle_lower_bound\030\004 \003(\001"
      "\022#\n\033static_obstacle_upper_bound\030\005 \003(\001\022$\n"
      "\034dynamic_obstacle_upper_bound\030\006 \003(\001\022\027\n\017m"
      "ap_lower_bound\030\007 \003(\001\022\027\n\017map_upper_bound\030"
      "\010 \003(\001\022$\n\007sl_path\030\t \003(\0132\023.acu.common.SLPo"
      "int\022\035\n\025aggregated_boundary_s\030\n \003(\001\022\037\n\027ag"
      "gregated_boundary_low\030\013 \003(\001\022 \n\030aggregate"
      "d_boundary_high\030\014 \003(\001\"\310\007\n\014STGraphDebug\022\014"
      "\n\004name\030\001 \001(\t\022=\n\010boundary\030\002 \003(\0132+.acu.pla"
      "nning_internal.StGraphBoundaryDebug\022+\n\013s"
      "peed_limit\030\003 \003(\0132\026.acu.common.SpeedPoint"
      "\022-\n\rspeed_profile\030\004 \003(\0132\026.acu.common.Spe"
      "edPoint\022T\n\020speed_constraint\030\005 \001(\0132:.acu."
      "planning_internal.STGraphDebug.STGraphSp"
      "eedConstraint\022T\n\021kernel_cruise_ref\030\006 \001(\013"
      "29.acu.planning_internal.STGraphDebug.ST"
      "GraphKernelCuiseRef\022U\n\021kernel_follow_ref"
      "\030\007 \001(\0132:.acu.planning_internal.STGraphDe"
      "bug.STGraphKernelFollowRef\022L\n\014s_constrai"
      "nt\030\010 \001(\01326.acu.planning_internal.STGraph"
      "Debug.STGraphSConstraint\022W\n\014a_constraint"
      "\030\t \001(\0132A.acu.planning_internal.STGraphDe"
      "bug.STGraphAccelerationConstraint\032M\n\026STG"
      "raphSpeedConstraint\022\t\n\001t\030\001 \003(\001\022\023\n\013lower_"
      "bound\030\002 \003(\001\022\023\n\013upper_bound\030\003 \003(\001\0329\n\025STGr"
      "aphKernelCuiseRef\022\t\n\001t\030\001 \003(\001\022\025\n\rcruise_l"
      "ine_s\030\002 \003(\001\032:\n\026STGraphKernelFollowRef\022\t\n"
      "\001t\030\001 \003(\001\022\025\n\rfollow_line_s\030\002 \003(\001\032I\n\022STGra"
      "phSConstraint\022\t\n\001t\030\001 \003(\001\022\023\n\013lower_bound\030"
      "\002 \003(\001\022\023\n\013upper_bound\030\003 \003(\001\032T\n\035STGraphAcc"
      "elerationConstraint\022\t\n\001t\030\001 \003(\001\022\023\n\013lower_"
      "bound\030\002 \003(\001\022\023\n\013upper_bound\030\003 \003(\001\"V\n\013Deci"
      "sionTag\022\023\n\013decider_tag\030\001 \001(\t\0222\n\010decision"
      "\030\002 \001(\0132 .acu.planning.ObjectDecisionType"
      "\"\272\001\n\rObstacleDebug\022\n\n\002id\030\001 \001(\t\022-\n\013sl_bou"
      "ndary\030\002 \001(\0132\030.acu.planning.SLBoundary\0228\n"
      "\014decision_tag\030\003 \003(\0132\".acu.planning_inter"
      "nal.DecisionTag\022\031\n\021vertices_x_coords\030\004 \003"
      "(\001\022\031\n\021vertices_y_coords\030\005 \003(\001\"\206\001\n\022Refere"
      "nceLineDebug\022\n\n\002id\030\001 \001(\t\022\016\n\006length\030\002 \001(\001"
      "\022\014\n\004cost\030\003 \001(\001\022\033\n\023is_change_lane_path\030\004 "
      "\001(\010\022\023\n\013is_drivable\030\005 \001(\010\022\024\n\014is_protected"
      "\030\006 \001(\010\"9\n\020SampleLayerDebug\022%\n\010sl_point\030\001"
      " \003(\0132\023.acu.common.SLPoint\"~\n\020DpPolyGraph"
      "Debug\022=\n\014sample_layer\030\001 \003(\0132\'.acu.planni"
      "ng_internal.SampleLayerDebug\022+\n\016min_cost"
      "_point\030\002 \003(\0132\023.acu.common.SLPoint\"E\n\014Tra"
      "jectories\0225\n\ntrajectory\030\001 \003(\0132!.acu.plan"
      "ning_internal.Trajectory\"\300\001\n\rSmootherDeb"
      "ug\022\023\n\013is_smoothed\030\001 \001(\010\022N\n\004type\030\002 \001(\01621."
      "acu.planning_internal.SmootherDebug.Smoo"
      "therType:\rSMOOTHER_NONE\022\016\n\006reason\030\003 \001(\t\""
      ":\n\014SmootherType\022\021\n\rSMOOTHER_NONE\020\001\022\027\n\023SM"
      "OOTHER_CLOSE_STOP\020\002\"\207\005\n\014PlanningData\022/\n\n"
      "init_point\030\n \001(\0132\033.acu.common.Trajectory"
      "Point\022\036\n\004path\030\006 \003(\0132\020.acu.common.Path\0224\n"
      "\nspeed_plan\030\r \003(\0132 .acu.planning_interna"
      "l.SpeedPlan\0225\n\010st_graph\030\016 \003(\0132#.acu.plan"
      "ning_internal.STGraphDebug\0225\n\010sl_frame\030\017"
      " \003(\0132#.acu.planning_internal.SLFrameDebu"
      "g\022-\n\021prediction_header\030\020 \001(\0132\022.acu.commo"
      "n.Header\0226\n\010obstacle\030\022 \003(\0132$.acu.plannin"
      "g_internal.ObstacleDebug\022A\n\016reference_li"
      "ne\030\023 \003(\0132).acu.planning_internal.Referen"
      "ceLineDebug\022>\n\rdp_poly_graph\030\024 \001(\0132\'.acu"
      ".planning_internal.DpPolyGraphDebug\022B\n\020l"
      "attice_st_image\030\025 \001(\0132(.acu.planning_int"
      "ernal.LatticeStTraining\022\034\n\024front_clear_d"
      "istance\030\030 \001(\001\0226\n\010smoother\030\034 \001(\0132$.acu.pl"
      "anning_internal.SmootherDebug\"G\n\016Lattice"
      "StPixel\022\t\n\001s\030\001 \001(\005\022\t\n\001t\030\002 \001(\005\022\t\n\001r\030\003 \001(\r"
      "\022\t\n\001g\030\004 \001(\r\022\t\n\001b\030\005 \001(\r\"\306\001\n\021LatticeStTrai"
      "ning\0224\n\005pixel\030\001 \003(\0132%.acu.planning_inter"
      "nal.LatticeStPixel\022\021\n\ttimestamp\030\002 \001(\001\022\022\n"
      "\nannotation\030\003 \001(\t\022\023\n\013num_s_grids\030\004 \001(\r\022\023"
      "\n\013num_t_grids\030\005 \001(\r\022\024\n\014s_resolution\030\006 \001("
      "\001\022\024\n\014t_resolution\030\007 \001(\001\"(\n\016CostComponent"
      "s\022\026\n\016cost_component\030\001 \003(\001\"\234\001\n\026AutoTuning"
      "TrainingData\022@\n\021teacher_component\030\001 \001(\0132"
      "%.acu.planning_internal.CostComponents\022@"
      "\n\021student_component\030\002 \001(\0132%.acu.planning"
      "_internal.CostComponents"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4064);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "planning_internal_info.proto", &protobuf_RegisterTypes);
  ::protobuf_header_2eproto::AddDescriptors();
  ::protobuf_pnc_5fpoint_2eproto::AddDescriptors();
  ::protobuf_sl_5fboundary_2eproto::AddDescriptors();
  ::protobuf_decision_2eproto::AddDescriptors();
  ::protobuf_planning_5fconfig_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_planning_5finternal_5finfo_2eproto
namespace acu {
namespace planning_internal {
const ::google::protobuf::EnumDescriptor* StGraphBoundaryDebug_StBoundaryType_descriptor() {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_planning_5finternal_5finfo_2eproto::file_level_enum_descriptors[0];
}
bool StGraphBoundaryDebug_StBoundaryType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_UNKNOWN;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_STOP;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_FOLLOW;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_YIELD;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_OVERTAKE;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::ST_BOUNDARY_TYPE_KEEP_CLEAR;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MIN;
const StGraphBoundaryDebug_StBoundaryType StGraphBoundaryDebug::StBoundaryType_MAX;
const int StGraphBoundaryDebug::StBoundaryType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SmootherDebug_SmootherType_descriptor() {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_planning_5finternal_5finfo_2eproto::file_level_enum_descriptors[1];
}
bool SmootherDebug_SmootherType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SmootherDebug_SmootherType SmootherDebug::SMOOTHER_NONE;
const SmootherDebug_SmootherType SmootherDebug::SMOOTHER_CLOSE_STOP;
const SmootherDebug_SmootherType SmootherDebug::SmootherType_MIN;
const SmootherDebug_SmootherType SmootherDebug::SmootherType_MAX;
const int SmootherDebug::SmootherType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Trajectory::InitAsDefaultInstance() {
}
void Trajectory::clear_trajectory_point() {
  trajectory_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trajectory::kNameFieldNumber;
const int Trajectory::kTrajectoryPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trajectory::Trajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsTrajectory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.Trajectory)
}
Trajectory::Trajectory(const Trajectory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      trajectory_point_(from.trajectory_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.Trajectory)
}

void Trajectory::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Trajectory::~Trajectory() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.Trajectory)
  SharedDtor();
}

void Trajectory::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Trajectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trajectory::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trajectory& Trajectory::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsTrajectory();
  return *internal_default_instance();
}

Trajectory* Trajectory::New(::google::protobuf::Arena* arena) const {
  Trajectory* n = new Trajectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trajectory_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.Trajectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.Trajectory.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.TrajectoryPoint trajectory_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_trajectory_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.Trajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.Trajectory)
  return false;
#undef DO_
}

void Trajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.Trajectory.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .acu.common.TrajectoryPoint trajectory_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->trajectory_point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.Trajectory)
}

::google::protobuf::uint8* Trajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.Trajectory.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .acu.common.TrajectoryPoint trajectory_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->trajectory_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.Trajectory)
  return target;
}

size_t Trajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.Trajectory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.TrajectoryPoint trajectory_point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectory_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectory_point(static_cast<int>(i)));
    }
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.Trajectory)
  GOOGLE_DCHECK_NE(&from, this);
  const Trajectory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.Trajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.Trajectory)
    MergeFrom(*source);
  }
}

void Trajectory::MergeFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.Trajectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trajectory_point_.MergeFrom(from.trajectory_point_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Trajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trajectory::CopyFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trajectory::IsInitialized() const {
  return true;
}

void Trajectory::Swap(Trajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trajectory::InternalSwap(Trajectory* other) {
  using std::swap;
  trajectory_point_.InternalSwap(&other->trajectory_point_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Trajectory::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Debug::InitAsDefaultInstance() {
  ::acu::planning_internal::_Debug_default_instance_._instance.get_mutable()->planning_data_ = const_cast< ::acu::planning_internal::PlanningData*>(
      ::acu::planning_internal::PlanningData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debug::kPlanningDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debug::Debug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.Debug)
}
Debug::Debug(const Debug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_planning_data()) {
    planning_data_ = new ::acu::planning_internal::PlanningData(*from.planning_data_);
  } else {
    planning_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.Debug)
}

void Debug::SharedCtor() {
  _cached_size_ = 0;
  planning_data_ = NULL;
}

Debug::~Debug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.Debug)
  SharedDtor();
}

void Debug::SharedDtor() {
  if (this != internal_default_instance()) delete planning_data_;
}

void Debug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Debug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Debug& Debug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDebug();
  return *internal_default_instance();
}

Debug* Debug::New(::google::protobuf::Arena* arena) const {
  Debug* n = new Debug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(planning_data_ != NULL);
    planning_data_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Debug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.Debug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .acu.planning_internal.PlanningData planning_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_planning_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.Debug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.Debug)
  return false;
#undef DO_
}

void Debug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.planning_internal.PlanningData planning_data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->planning_data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.Debug)
}

::google::protobuf::uint8* Debug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.planning_internal.PlanningData planning_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->planning_data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.Debug)
  return target;
}

size_t Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.Debug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .acu.planning_internal.PlanningData planning_data = 2;
  if (has_planning_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->planning_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Debug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  const Debug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.Debug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.Debug)
    MergeFrom(*source);
  }
}

void Debug::MergeFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_planning_data()) {
    mutable_planning_data()->::acu::planning_internal::PlanningData::MergeFrom(from.planning_data());
  }
}

void Debug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug::IsInitialized() const {
  return true;
}

void Debug::Swap(Debug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debug::InternalSwap(Debug* other) {
  using std::swap;
  swap(planning_data_, other->planning_data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Debug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpeedPlan::InitAsDefaultInstance() {
}
void SpeedPlan::clear_speed_point() {
  speed_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeedPlan::kNameFieldNumber;
const int SpeedPlan::kSpeedPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeedPlan::SpeedPlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSpeedPlan();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.SpeedPlan)
}
SpeedPlan::SpeedPlan(const SpeedPlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      speed_point_(from.speed_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.SpeedPlan)
}

void SpeedPlan::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SpeedPlan::~SpeedPlan() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.SpeedPlan)
  SharedDtor();
}

void SpeedPlan::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SpeedPlan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpeedPlan::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpeedPlan& SpeedPlan::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSpeedPlan();
  return *internal_default_instance();
}

SpeedPlan* SpeedPlan::New(::google::protobuf::Arena* arena) const {
  SpeedPlan* n = new SpeedPlan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpeedPlan::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speed_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SpeedPlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.SpeedPlan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.SpeedPlan.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SpeedPoint speed_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_speed_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.SpeedPlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.SpeedPlan)
  return false;
#undef DO_
}

void SpeedPlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SpeedPlan.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .acu.common.SpeedPoint speed_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->speed_point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.SpeedPlan)
}

::google::protobuf::uint8* SpeedPlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.SpeedPlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SpeedPlan.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .acu.common.SpeedPoint speed_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->speed_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.SpeedPlan)
  return target;
}

size_t SpeedPlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.SpeedPlan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.SpeedPoint speed_point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_point(static_cast<int>(i)));
    }
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpeedPlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.SpeedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeedPlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpeedPlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.SpeedPlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.SpeedPlan)
    MergeFrom(*source);
  }
}

void SpeedPlan::MergeFrom(const SpeedPlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.SpeedPlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  speed_point_.MergeFrom(from.speed_point_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SpeedPlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.SpeedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedPlan::CopyFrom(const SpeedPlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.SpeedPlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedPlan::IsInitialized() const {
  return true;
}

void SpeedPlan::Swap(SpeedPlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedPlan::InternalSwap(SpeedPlan* other) {
  using std::swap;
  speed_point_.InternalSwap(&other->speed_point_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpeedPlan::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StGraphBoundaryDebug::InitAsDefaultInstance() {
}
void StGraphBoundaryDebug::clear_point() {
  point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StGraphBoundaryDebug::kNameFieldNumber;
const int StGraphBoundaryDebug::kPointFieldNumber;
const int StGraphBoundaryDebug::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StGraphBoundaryDebug::StGraphBoundaryDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsStGraphBoundaryDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.StGraphBoundaryDebug)
}
StGraphBoundaryDebug::StGraphBoundaryDebug(const StGraphBoundaryDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.StGraphBoundaryDebug)
}

void StGraphBoundaryDebug::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 1;
}

StGraphBoundaryDebug::~StGraphBoundaryDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.StGraphBoundaryDebug)
  SharedDtor();
}

void StGraphBoundaryDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StGraphBoundaryDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StGraphBoundaryDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StGraphBoundaryDebug& StGraphBoundaryDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsStGraphBoundaryDebug();
  return *internal_default_instance();
}

StGraphBoundaryDebug* StGraphBoundaryDebug::New(::google::protobuf::Arena* arena) const {
  StGraphBoundaryDebug* n = new StGraphBoundaryDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StGraphBoundaryDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StGraphBoundaryDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.StGraphBoundaryDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.StGraphBoundaryDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SpeedPoint point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::acu::planning_internal::StGraphBoundaryDebug_StBoundaryType_IsValid(value)) {
            set_type(static_cast< ::acu::planning_internal::StGraphBoundaryDebug_StBoundaryType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.StGraphBoundaryDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.StGraphBoundaryDebug)
  return false;
#undef DO_
}

void StGraphBoundaryDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.StGraphBoundaryDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .acu.common.SpeedPoint point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->point(static_cast<int>(i)), output);
  }

  // optional .acu.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.StGraphBoundaryDebug)
}

::google::protobuf::uint8* StGraphBoundaryDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.StGraphBoundaryDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.StGraphBoundaryDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .acu.common.SpeedPoint point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->point(static_cast<int>(i)), deterministic, target);
  }

  // optional .acu.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.StGraphBoundaryDebug)
  return target;
}

size_t StGraphBoundaryDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.StGraphBoundaryDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.SpeedPoint point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .acu.planning_internal.StGraphBoundaryDebug.StBoundaryType type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StGraphBoundaryDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.StGraphBoundaryDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const StGraphBoundaryDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StGraphBoundaryDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.StGraphBoundaryDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.StGraphBoundaryDebug)
    MergeFrom(*source);
  }
}

void StGraphBoundaryDebug::MergeFrom(const StGraphBoundaryDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.StGraphBoundaryDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StGraphBoundaryDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.StGraphBoundaryDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StGraphBoundaryDebug::CopyFrom(const StGraphBoundaryDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.StGraphBoundaryDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StGraphBoundaryDebug::IsInitialized() const {
  return true;
}

void StGraphBoundaryDebug::Swap(StGraphBoundaryDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StGraphBoundaryDebug::InternalSwap(StGraphBoundaryDebug* other) {
  using std::swap;
  point_.InternalSwap(&other->point_);
  name_.Swap(&other->name_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StGraphBoundaryDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLFrameDebug::InitAsDefaultInstance() {
}
void SLFrameDebug::clear_sl_path() {
  sl_path_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLFrameDebug::kNameFieldNumber;
const int SLFrameDebug::kSampledSFieldNumber;
const int SLFrameDebug::kStaticObstacleLowerBoundFieldNumber;
const int SLFrameDebug::kDynamicObstacleLowerBoundFieldNumber;
const int SLFrameDebug::kStaticObstacleUpperBoundFieldNumber;
const int SLFrameDebug::kDynamicObstacleUpperBoundFieldNumber;
const int SLFrameDebug::kMapLowerBoundFieldNumber;
const int SLFrameDebug::kMapUpperBoundFieldNumber;
const int SLFrameDebug::kSlPathFieldNumber;
const int SLFrameDebug::kAggregatedBoundarySFieldNumber;
const int SLFrameDebug::kAggregatedBoundaryLowFieldNumber;
const int SLFrameDebug::kAggregatedBoundaryHighFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLFrameDebug::SLFrameDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSLFrameDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.SLFrameDebug)
}
SLFrameDebug::SLFrameDebug(const SLFrameDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sampled_s_(from.sampled_s_),
      static_obstacle_lower_bound_(from.static_obstacle_lower_bound_),
      dynamic_obstacle_lower_bound_(from.dynamic_obstacle_lower_bound_),
      static_obstacle_upper_bound_(from.static_obstacle_upper_bound_),
      dynamic_obstacle_upper_bound_(from.dynamic_obstacle_upper_bound_),
      map_lower_bound_(from.map_lower_bound_),
      map_upper_bound_(from.map_upper_bound_),
      sl_path_(from.sl_path_),
      aggregated_boundary_s_(from.aggregated_boundary_s_),
      aggregated_boundary_low_(from.aggregated_boundary_low_),
      aggregated_boundary_high_(from.aggregated_boundary_high_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.SLFrameDebug)
}

void SLFrameDebug::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLFrameDebug::~SLFrameDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.SLFrameDebug)
  SharedDtor();
}

void SLFrameDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLFrameDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLFrameDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLFrameDebug& SLFrameDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSLFrameDebug();
  return *internal_default_instance();
}

SLFrameDebug* SLFrameDebug::New(::google::protobuf::Arena* arena) const {
  SLFrameDebug* n = new SLFrameDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLFrameDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sampled_s_.Clear();
  static_obstacle_lower_bound_.Clear();
  dynamic_obstacle_lower_bound_.Clear();
  static_obstacle_upper_bound_.Clear();
  dynamic_obstacle_upper_bound_.Clear();
  map_lower_bound_.Clear();
  map_upper_bound_.Clear();
  sl_path_.Clear();
  aggregated_boundary_s_.Clear();
  aggregated_boundary_low_.Clear();
  aggregated_boundary_high_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SLFrameDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.SLFrameDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.SLFrameDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double sampled_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_sampled_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_sampled_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double static_obstacle_lower_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_static_obstacle_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_static_obstacle_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double dynamic_obstacle_lower_bound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_dynamic_obstacle_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dynamic_obstacle_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double static_obstacle_upper_bound = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_static_obstacle_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_static_obstacle_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double dynamic_obstacle_upper_bound = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 49u, input, this->mutable_dynamic_obstacle_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_dynamic_obstacle_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double map_lower_bound = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 57u, input, this->mutable_map_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_map_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double map_upper_bound = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 65u, input, this->mutable_map_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_map_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SLPoint sl_path = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sl_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_s = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 81u, input, this->mutable_aggregated_boundary_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_low = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 89u, input, this->mutable_aggregated_boundary_low())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_low())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double aggregated_boundary_high = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 97u, input, this->mutable_aggregated_boundary_high())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_aggregated_boundary_high())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.SLFrameDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.SLFrameDebug)
  return false;
#undef DO_
}

void SLFrameDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SLFrameDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated double sampled_s = 2;
  for (int i = 0, n = this->sampled_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->sampled_s(i), output);
  }

  // repeated double static_obstacle_lower_bound = 3;
  for (int i = 0, n = this->static_obstacle_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->static_obstacle_lower_bound(i), output);
  }

  // repeated double dynamic_obstacle_lower_bound = 4;
  for (int i = 0, n = this->dynamic_obstacle_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->dynamic_obstacle_lower_bound(i), output);
  }

  // repeated double static_obstacle_upper_bound = 5;
  for (int i = 0, n = this->static_obstacle_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->static_obstacle_upper_bound(i), output);
  }

  // repeated double dynamic_obstacle_upper_bound = 6;
  for (int i = 0, n = this->dynamic_obstacle_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      6, this->dynamic_obstacle_upper_bound(i), output);
  }

  // repeated double map_lower_bound = 7;
  for (int i = 0, n = this->map_lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      7, this->map_lower_bound(i), output);
  }

  // repeated double map_upper_bound = 8;
  for (int i = 0, n = this->map_upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      8, this->map_upper_bound(i), output);
  }

  // repeated .acu.common.SLPoint sl_path = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sl_path(static_cast<int>(i)), output);
  }

  // repeated double aggregated_boundary_s = 10;
  for (int i = 0, n = this->aggregated_boundary_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      10, this->aggregated_boundary_s(i), output);
  }

  // repeated double aggregated_boundary_low = 11;
  for (int i = 0, n = this->aggregated_boundary_low_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      11, this->aggregated_boundary_low(i), output);
  }

  // repeated double aggregated_boundary_high = 12;
  for (int i = 0, n = this->aggregated_boundary_high_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      12, this->aggregated_boundary_high(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.SLFrameDebug)
}

::google::protobuf::uint8* SLFrameDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.SLFrameDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SLFrameDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated double sampled_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->sampled_s_, target);

  // repeated double static_obstacle_lower_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->static_obstacle_lower_bound_, target);

  // repeated double dynamic_obstacle_lower_bound = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(4, this->dynamic_obstacle_lower_bound_, target);

  // repeated double static_obstacle_upper_bound = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->static_obstacle_upper_bound_, target);

  // repeated double dynamic_obstacle_upper_bound = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(6, this->dynamic_obstacle_upper_bound_, target);

  // repeated double map_lower_bound = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(7, this->map_lower_bound_, target);

  // repeated double map_upper_bound = 8;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(8, this->map_upper_bound_, target);

  // repeated .acu.common.SLPoint sl_path = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->sl_path(static_cast<int>(i)), deterministic, target);
  }

  // repeated double aggregated_boundary_s = 10;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(10, this->aggregated_boundary_s_, target);

  // repeated double aggregated_boundary_low = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(11, this->aggregated_boundary_low_, target);

  // repeated double aggregated_boundary_high = 12;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(12, this->aggregated_boundary_high_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.SLFrameDebug)
  return target;
}

size_t SLFrameDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.SLFrameDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double sampled_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sampled_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->sampled_s_size());
    total_size += data_size;
  }

  // repeated double static_obstacle_lower_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->static_obstacle_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->static_obstacle_lower_bound_size());
    total_size += data_size;
  }

  // repeated double dynamic_obstacle_lower_bound = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_obstacle_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dynamic_obstacle_lower_bound_size());
    total_size += data_size;
  }

  // repeated double static_obstacle_upper_bound = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->static_obstacle_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->static_obstacle_upper_bound_size());
    total_size += data_size;
  }

  // repeated double dynamic_obstacle_upper_bound = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_obstacle_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dynamic_obstacle_upper_bound_size());
    total_size += data_size;
  }

  // repeated double map_lower_bound = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->map_lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->map_lower_bound_size());
    total_size += data_size;
  }

  // repeated double map_upper_bound = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->map_upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->map_upper_bound_size());
    total_size += data_size;
  }

  // repeated .acu.common.SLPoint sl_path = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_path(static_cast<int>(i)));
    }
  }

  // repeated double aggregated_boundary_s = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_s_size());
    total_size += data_size;
  }

  // repeated double aggregated_boundary_low = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_low_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_low_size());
    total_size += data_size;
  }

  // repeated double aggregated_boundary_high = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->aggregated_boundary_high_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->aggregated_boundary_high_size());
    total_size += data_size;
  }

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLFrameDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.SLFrameDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SLFrameDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLFrameDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.SLFrameDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.SLFrameDebug)
    MergeFrom(*source);
  }
}

void SLFrameDebug::MergeFrom(const SLFrameDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.SLFrameDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sampled_s_.MergeFrom(from.sampled_s_);
  static_obstacle_lower_bound_.MergeFrom(from.static_obstacle_lower_bound_);
  dynamic_obstacle_lower_bound_.MergeFrom(from.dynamic_obstacle_lower_bound_);
  static_obstacle_upper_bound_.MergeFrom(from.static_obstacle_upper_bound_);
  dynamic_obstacle_upper_bound_.MergeFrom(from.dynamic_obstacle_upper_bound_);
  map_lower_bound_.MergeFrom(from.map_lower_bound_);
  map_upper_bound_.MergeFrom(from.map_upper_bound_);
  sl_path_.MergeFrom(from.sl_path_);
  aggregated_boundary_s_.MergeFrom(from.aggregated_boundary_s_);
  aggregated_boundary_low_.MergeFrom(from.aggregated_boundary_low_);
  aggregated_boundary_high_.MergeFrom(from.aggregated_boundary_high_);
  if (from.has_name()) {
    set_has_name();
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SLFrameDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.SLFrameDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLFrameDebug::CopyFrom(const SLFrameDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.SLFrameDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLFrameDebug::IsInitialized() const {
  return true;
}

void SLFrameDebug::Swap(SLFrameDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLFrameDebug::InternalSwap(SLFrameDebug* other) {
  using std::swap;
  sampled_s_.InternalSwap(&other->sampled_s_);
  static_obstacle_lower_bound_.InternalSwap(&other->static_obstacle_lower_bound_);
  dynamic_obstacle_lower_bound_.InternalSwap(&other->dynamic_obstacle_lower_bound_);
  static_obstacle_upper_bound_.InternalSwap(&other->static_obstacle_upper_bound_);
  dynamic_obstacle_upper_bound_.InternalSwap(&other->dynamic_obstacle_upper_bound_);
  map_lower_bound_.InternalSwap(&other->map_lower_bound_);
  map_upper_bound_.InternalSwap(&other->map_upper_bound_);
  sl_path_.InternalSwap(&other->sl_path_);
  aggregated_boundary_s_.InternalSwap(&other->aggregated_boundary_s_);
  aggregated_boundary_low_.InternalSwap(&other->aggregated_boundary_low_);
  aggregated_boundary_high_.InternalSwap(&other->aggregated_boundary_high_);
  name_.Swap(&other->name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLFrameDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphSpeedConstraint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphSpeedConstraint::kTFieldNumber;
const int STGraphDebug_STGraphSpeedConstraint::kLowerBoundFieldNumber;
const int STGraphDebug_STGraphSpeedConstraint::kUpperBoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSpeedConstraint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}
STGraphDebug_STGraphSpeedConstraint::STGraphDebug_STGraphSpeedConstraint(const STGraphDebug_STGraphSpeedConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_(from.t_),
      lower_bound_(from.lower_bound_),
      upper_bound_(from.upper_bound_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}

void STGraphDebug_STGraphSpeedConstraint::SharedCtor() {
  _cached_size_ = 0;
}

STGraphDebug_STGraphSpeedConstraint::~STGraphDebug_STGraphSpeedConstraint() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  SharedDtor();
}

void STGraphDebug_STGraphSpeedConstraint::SharedDtor() {
}

void STGraphDebug_STGraphSpeedConstraint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphSpeedConstraint::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphSpeedConstraint& STGraphDebug_STGraphSpeedConstraint::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSpeedConstraint();
  return *internal_default_instance();
}

STGraphDebug_STGraphSpeedConstraint* STGraphDebug_STGraphSpeedConstraint::New(::google::protobuf::Arena* arena) const {
  STGraphDebug_STGraphSpeedConstraint* n = new STGraphDebug_STGraphSpeedConstraint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug_STGraphSpeedConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  lower_bound_.Clear();
  upper_bound_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphSpeedConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double lower_bound = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double upper_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return false;
#undef DO_
}

void STGraphDebug_STGraphSpeedConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double lower_bound = 2;
  for (int i = 0, n = this->lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->lower_bound(i), output);
  }

  // repeated double upper_bound = 3;
  for (int i = 0, n = this->upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->upper_bound(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
}

::google::protobuf::uint8* STGraphDebug_STGraphSpeedConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double lower_bound = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->lower_bound_, target);

  // repeated double upper_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->upper_bound_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  return target;
}

size_t STGraphDebug_STGraphSpeedConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double lower_bound = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lower_bound_size());
    total_size += data_size;
  }

  // repeated double upper_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->upper_bound_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug_STGraphSpeedConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphSpeedConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphSpeedConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphSpeedConstraint::MergeFrom(const STGraphDebug_STGraphSpeedConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  lower_bound_.MergeFrom(from.lower_bound_);
  upper_bound_.MergeFrom(from.upper_bound_);
}

void STGraphDebug_STGraphSpeedConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphSpeedConstraint::CopyFrom(const STGraphDebug_STGraphSpeedConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug.STGraphSpeedConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphSpeedConstraint::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphSpeedConstraint::Swap(STGraphDebug_STGraphSpeedConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphSpeedConstraint::InternalSwap(STGraphDebug_STGraphSpeedConstraint* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  lower_bound_.InternalSwap(&other->lower_bound_);
  upper_bound_.InternalSwap(&other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug_STGraphSpeedConstraint::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphKernelCuiseRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphKernelCuiseRef::kTFieldNumber;
const int STGraphDebug_STGraphKernelCuiseRef::kCruiseLineSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelCuiseRef();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}
STGraphDebug_STGraphKernelCuiseRef::STGraphDebug_STGraphKernelCuiseRef(const STGraphDebug_STGraphKernelCuiseRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_(from.t_),
      cruise_line_s_(from.cruise_line_s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}

void STGraphDebug_STGraphKernelCuiseRef::SharedCtor() {
  _cached_size_ = 0;
}

STGraphDebug_STGraphKernelCuiseRef::~STGraphDebug_STGraphKernelCuiseRef() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  SharedDtor();
}

void STGraphDebug_STGraphKernelCuiseRef::SharedDtor() {
}

void STGraphDebug_STGraphKernelCuiseRef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphKernelCuiseRef::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphKernelCuiseRef& STGraphDebug_STGraphKernelCuiseRef::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelCuiseRef();
  return *internal_default_instance();
}

STGraphDebug_STGraphKernelCuiseRef* STGraphDebug_STGraphKernelCuiseRef::New(::google::protobuf::Arena* arena) const {
  STGraphDebug_STGraphKernelCuiseRef* n = new STGraphDebug_STGraphKernelCuiseRef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug_STGraphKernelCuiseRef::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  cruise_line_s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphKernelCuiseRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double cruise_line_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_cruise_line_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_cruise_line_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return false;
#undef DO_
}

void STGraphDebug_STGraphKernelCuiseRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double cruise_line_s = 2;
  for (int i = 0, n = this->cruise_line_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->cruise_line_s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
}

::google::protobuf::uint8* STGraphDebug_STGraphKernelCuiseRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double cruise_line_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->cruise_line_s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  return target;
}

size_t STGraphDebug_STGraphKernelCuiseRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double cruise_line_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cruise_line_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cruise_line_s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug_STGraphKernelCuiseRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphKernelCuiseRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphKernelCuiseRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphKernelCuiseRef::MergeFrom(const STGraphDebug_STGraphKernelCuiseRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  cruise_line_s_.MergeFrom(from.cruise_line_s_);
}

void STGraphDebug_STGraphKernelCuiseRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphKernelCuiseRef::CopyFrom(const STGraphDebug_STGraphKernelCuiseRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphKernelCuiseRef::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphKernelCuiseRef::Swap(STGraphDebug_STGraphKernelCuiseRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphKernelCuiseRef::InternalSwap(STGraphDebug_STGraphKernelCuiseRef* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  cruise_line_s_.InternalSwap(&other->cruise_line_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelCuiseRef::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphKernelFollowRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphKernelFollowRef::kTFieldNumber;
const int STGraphDebug_STGraphKernelFollowRef::kFollowLineSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelFollowRef();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}
STGraphDebug_STGraphKernelFollowRef::STGraphDebug_STGraphKernelFollowRef(const STGraphDebug_STGraphKernelFollowRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_(from.t_),
      follow_line_s_(from.follow_line_s_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}

void STGraphDebug_STGraphKernelFollowRef::SharedCtor() {
  _cached_size_ = 0;
}

STGraphDebug_STGraphKernelFollowRef::~STGraphDebug_STGraphKernelFollowRef() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  SharedDtor();
}

void STGraphDebug_STGraphKernelFollowRef::SharedDtor() {
}

void STGraphDebug_STGraphKernelFollowRef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphKernelFollowRef::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphKernelFollowRef& STGraphDebug_STGraphKernelFollowRef::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphKernelFollowRef();
  return *internal_default_instance();
}

STGraphDebug_STGraphKernelFollowRef* STGraphDebug_STGraphKernelFollowRef::New(::google::protobuf::Arena* arena) const {
  STGraphDebug_STGraphKernelFollowRef* n = new STGraphDebug_STGraphKernelFollowRef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug_STGraphKernelFollowRef::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  follow_line_s_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphKernelFollowRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double follow_line_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_follow_line_s())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_follow_line_s())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return false;
#undef DO_
}

void STGraphDebug_STGraphKernelFollowRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double follow_line_s = 2;
  for (int i = 0, n = this->follow_line_s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->follow_line_s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
}

::google::protobuf::uint8* STGraphDebug_STGraphKernelFollowRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double follow_line_s = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->follow_line_s_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  return target;
}

size_t STGraphDebug_STGraphKernelFollowRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double follow_line_s = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->follow_line_s_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->follow_line_s_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug_STGraphKernelFollowRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphKernelFollowRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphKernelFollowRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphKernelFollowRef::MergeFrom(const STGraphDebug_STGraphKernelFollowRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  follow_line_s_.MergeFrom(from.follow_line_s_);
}

void STGraphDebug_STGraphKernelFollowRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphKernelFollowRef::CopyFrom(const STGraphDebug_STGraphKernelFollowRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug.STGraphKernelFollowRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphKernelFollowRef::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphKernelFollowRef::Swap(STGraphDebug_STGraphKernelFollowRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphKernelFollowRef::InternalSwap(STGraphDebug_STGraphKernelFollowRef* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  follow_line_s_.InternalSwap(&other->follow_line_s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug_STGraphKernelFollowRef::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphSConstraint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphSConstraint::kTFieldNumber;
const int STGraphDebug_STGraphSConstraint::kLowerBoundFieldNumber;
const int STGraphDebug_STGraphSConstraint::kUpperBoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphSConstraint::STGraphDebug_STGraphSConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSConstraint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug.STGraphSConstraint)
}
STGraphDebug_STGraphSConstraint::STGraphDebug_STGraphSConstraint(const STGraphDebug_STGraphSConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_(from.t_),
      lower_bound_(from.lower_bound_),
      upper_bound_(from.upper_bound_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug.STGraphSConstraint)
}

void STGraphDebug_STGraphSConstraint::SharedCtor() {
  _cached_size_ = 0;
}

STGraphDebug_STGraphSConstraint::~STGraphDebug_STGraphSConstraint() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  SharedDtor();
}

void STGraphDebug_STGraphSConstraint::SharedDtor() {
}

void STGraphDebug_STGraphSConstraint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphSConstraint::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphSConstraint& STGraphDebug_STGraphSConstraint::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphSConstraint();
  return *internal_default_instance();
}

STGraphDebug_STGraphSConstraint* STGraphDebug_STGraphSConstraint::New(::google::protobuf::Arena* arena) const {
  STGraphDebug_STGraphSConstraint* n = new STGraphDebug_STGraphSConstraint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug_STGraphSConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  lower_bound_.Clear();
  upper_bound_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphSConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double lower_bound = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double upper_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  return false;
#undef DO_
}

void STGraphDebug_STGraphSConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double lower_bound = 2;
  for (int i = 0, n = this->lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->lower_bound(i), output);
  }

  // repeated double upper_bound = 3;
  for (int i = 0, n = this->upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->upper_bound(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug.STGraphSConstraint)
}

::google::protobuf::uint8* STGraphDebug_STGraphSConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double lower_bound = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->lower_bound_, target);

  // repeated double upper_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->upper_bound_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  return target;
}

size_t STGraphDebug_STGraphSConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double lower_bound = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lower_bound_size());
    total_size += data_size;
  }

  // repeated double upper_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->upper_bound_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug_STGraphSConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphSConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphSConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug.STGraphSConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug.STGraphSConstraint)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphSConstraint::MergeFrom(const STGraphDebug_STGraphSConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  lower_bound_.MergeFrom(from.lower_bound_);
  upper_bound_.MergeFrom(from.upper_bound_);
}

void STGraphDebug_STGraphSConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphSConstraint::CopyFrom(const STGraphDebug_STGraphSConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug.STGraphSConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphSConstraint::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphSConstraint::Swap(STGraphDebug_STGraphSConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphSConstraint::InternalSwap(STGraphDebug_STGraphSConstraint* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  lower_bound_.InternalSwap(&other->lower_bound_);
  upper_bound_.InternalSwap(&other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug_STGraphSConstraint::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug_STGraphAccelerationConstraint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug_STGraphAccelerationConstraint::kTFieldNumber;
const int STGraphDebug_STGraphAccelerationConstraint::kLowerBoundFieldNumber;
const int STGraphDebug_STGraphAccelerationConstraint::kUpperBoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug_STGraphAccelerationConstraint::STGraphDebug_STGraphAccelerationConstraint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphAccelerationConstraint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
}
STGraphDebug_STGraphAccelerationConstraint::STGraphDebug_STGraphAccelerationConstraint(const STGraphDebug_STGraphAccelerationConstraint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      t_(from.t_),
      lower_bound_(from.lower_bound_),
      upper_bound_(from.upper_bound_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
}

void STGraphDebug_STGraphAccelerationConstraint::SharedCtor() {
  _cached_size_ = 0;
}

STGraphDebug_STGraphAccelerationConstraint::~STGraphDebug_STGraphAccelerationConstraint() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  SharedDtor();
}

void STGraphDebug_STGraphAccelerationConstraint::SharedDtor() {
}

void STGraphDebug_STGraphAccelerationConstraint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug_STGraphAccelerationConstraint::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug_STGraphAccelerationConstraint& STGraphDebug_STGraphAccelerationConstraint::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug_STGraphAccelerationConstraint();
  return *internal_default_instance();
}

STGraphDebug_STGraphAccelerationConstraint* STGraphDebug_STGraphAccelerationConstraint::New(::google::protobuf::Arena* arena) const {
  STGraphDebug_STGraphAccelerationConstraint* n = new STGraphDebug_STGraphAccelerationConstraint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug_STGraphAccelerationConstraint::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  t_.Clear();
  lower_bound_.Clear();
  upper_bound_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug_STGraphAccelerationConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_t())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_t())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double lower_bound = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_lower_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_lower_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double upper_bound = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25u, input, this->mutable_upper_bound())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_upper_bound())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  return false;
#undef DO_
}

void STGraphDebug_STGraphAccelerationConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  for (int i = 0, n = this->t_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->t(i), output);
  }

  // repeated double lower_bound = 2;
  for (int i = 0, n = this->lower_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->lower_bound(i), output);
  }

  // repeated double upper_bound = 3;
  for (int i = 0, n = this->upper_bound_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->upper_bound(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
}

::google::protobuf::uint8* STGraphDebug_STGraphAccelerationConstraint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double t = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->t_, target);

  // repeated double lower_bound = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->lower_bound_, target);

  // repeated double upper_bound = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(3, this->upper_bound_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  return target;
}

size_t STGraphDebug_STGraphAccelerationConstraint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double t = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->t_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->t_size());
    total_size += data_size;
  }

  // repeated double lower_bound = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->lower_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->lower_bound_size());
    total_size += data_size;
  }

  // repeated double upper_bound = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->upper_bound_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->upper_bound_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug_STGraphAccelerationConstraint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug_STGraphAccelerationConstraint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug_STGraphAccelerationConstraint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
    MergeFrom(*source);
  }
}

void STGraphDebug_STGraphAccelerationConstraint::MergeFrom(const STGraphDebug_STGraphAccelerationConstraint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  t_.MergeFrom(from.t_);
  lower_bound_.MergeFrom(from.lower_bound_);
  upper_bound_.MergeFrom(from.upper_bound_);
}

void STGraphDebug_STGraphAccelerationConstraint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug_STGraphAccelerationConstraint::CopyFrom(const STGraphDebug_STGraphAccelerationConstraint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug_STGraphAccelerationConstraint::IsInitialized() const {
  return true;
}

void STGraphDebug_STGraphAccelerationConstraint::Swap(STGraphDebug_STGraphAccelerationConstraint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug_STGraphAccelerationConstraint::InternalSwap(STGraphDebug_STGraphAccelerationConstraint* other) {
  using std::swap;
  t_.InternalSwap(&other->t_);
  lower_bound_.InternalSwap(&other->lower_bound_);
  upper_bound_.InternalSwap(&other->upper_bound_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug_STGraphAccelerationConstraint::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void STGraphDebug::InitAsDefaultInstance() {
  ::acu::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->speed_constraint_ = const_cast< ::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint*>(
      ::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint::internal_default_instance());
  ::acu::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->kernel_cruise_ref_ = const_cast< ::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef*>(
      ::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef::internal_default_instance());
  ::acu::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->kernel_follow_ref_ = const_cast< ::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef*>(
      ::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef::internal_default_instance());
  ::acu::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->s_constraint_ = const_cast< ::acu::planning_internal::STGraphDebug_STGraphSConstraint*>(
      ::acu::planning_internal::STGraphDebug_STGraphSConstraint::internal_default_instance());
  ::acu::planning_internal::_STGraphDebug_default_instance_._instance.get_mutable()->a_constraint_ = const_cast< ::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint*>(
      ::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint::internal_default_instance());
}
void STGraphDebug::clear_speed_limit() {
  speed_limit_.Clear();
}
void STGraphDebug::clear_speed_profile() {
  speed_profile_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int STGraphDebug::kNameFieldNumber;
const int STGraphDebug::kBoundaryFieldNumber;
const int STGraphDebug::kSpeedLimitFieldNumber;
const int STGraphDebug::kSpeedProfileFieldNumber;
const int STGraphDebug::kSpeedConstraintFieldNumber;
const int STGraphDebug::kKernelCruiseRefFieldNumber;
const int STGraphDebug::kKernelFollowRefFieldNumber;
const int STGraphDebug::kSConstraintFieldNumber;
const int STGraphDebug::kAConstraintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

STGraphDebug::STGraphDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.STGraphDebug)
}
STGraphDebug::STGraphDebug(const STGraphDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      boundary_(from.boundary_),
      speed_limit_(from.speed_limit_),
      speed_profile_(from.speed_profile_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_speed_constraint()) {
    speed_constraint_ = new ::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint(*from.speed_constraint_);
  } else {
    speed_constraint_ = NULL;
  }
  if (from.has_kernel_cruise_ref()) {
    kernel_cruise_ref_ = new ::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef(*from.kernel_cruise_ref_);
  } else {
    kernel_cruise_ref_ = NULL;
  }
  if (from.has_kernel_follow_ref()) {
    kernel_follow_ref_ = new ::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef(*from.kernel_follow_ref_);
  } else {
    kernel_follow_ref_ = NULL;
  }
  if (from.has_s_constraint()) {
    s_constraint_ = new ::acu::planning_internal::STGraphDebug_STGraphSConstraint(*from.s_constraint_);
  } else {
    s_constraint_ = NULL;
  }
  if (from.has_a_constraint()) {
    a_constraint_ = new ::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint(*from.a_constraint_);
  } else {
    a_constraint_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.STGraphDebug)
}

void STGraphDebug::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&speed_constraint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_constraint_) -
      reinterpret_cast<char*>(&speed_constraint_)) + sizeof(a_constraint_));
}

STGraphDebug::~STGraphDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.STGraphDebug)
  SharedDtor();
}

void STGraphDebug::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete speed_constraint_;
  if (this != internal_default_instance()) delete kernel_cruise_ref_;
  if (this != internal_default_instance()) delete kernel_follow_ref_;
  if (this != internal_default_instance()) delete s_constraint_;
  if (this != internal_default_instance()) delete a_constraint_;
}

void STGraphDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* STGraphDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const STGraphDebug& STGraphDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSTGraphDebug();
  return *internal_default_instance();
}

STGraphDebug* STGraphDebug::New(::google::protobuf::Arena* arena) const {
  STGraphDebug* n = new STGraphDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void STGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boundary_.Clear();
  speed_limit_.Clear();
  speed_profile_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(speed_constraint_ != NULL);
      speed_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(kernel_cruise_ref_ != NULL);
      kernel_cruise_ref_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(kernel_follow_ref_ != NULL);
      kernel_follow_ref_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(s_constraint_ != NULL);
      s_constraint_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(a_constraint_ != NULL);
      a_constraint_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool STGraphDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.STGraphDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.STGraphDebug.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.StGraphBoundaryDebug boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SpeedPoint speed_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_speed_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SpeedPoint speed_profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_speed_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speed_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kernel_cruise_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kernel_follow_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.STGraphDebug.STGraphSConstraint s_constraint = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_s_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint a_constraint = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a_constraint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.STGraphDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.STGraphDebug)
  return false;
#undef DO_
}

void STGraphDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.STGraphDebug.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .acu.planning_internal.StGraphBoundaryDebug boundary = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->boundary(static_cast<int>(i)), output);
  }

  // repeated .acu.common.SpeedPoint speed_limit = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limit_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->speed_limit(static_cast<int>(i)), output);
  }

  // repeated .acu.common.SpeedPoint speed_profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_profile_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->speed_profile(static_cast<int>(i)), output);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->speed_constraint_, output);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->kernel_cruise_ref_, output);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->kernel_follow_ref_, output);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphSConstraint s_constraint = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->s_constraint_, output);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint a_constraint = 9;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->a_constraint_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.STGraphDebug)
}

::google::protobuf::uint8* STGraphDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.STGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.STGraphDebug.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .acu.planning_internal.StGraphBoundaryDebug boundary = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boundary_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->boundary(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.common.SpeedPoint speed_limit = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limit_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->speed_limit(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.common.SpeedPoint speed_profile = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_profile_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->speed_profile(static_cast<int>(i)), deterministic, target);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->speed_constraint_, deterministic, target);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->kernel_cruise_ref_, deterministic, target);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->kernel_follow_ref_, deterministic, target);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphSConstraint s_constraint = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->s_constraint_, deterministic, target);
  }

  // optional .acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint a_constraint = 9;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->a_constraint_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.STGraphDebug)
  return target;
}

size_t STGraphDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.STGraphDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.planning_internal.StGraphBoundaryDebug boundary = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->boundary_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boundary(static_cast<int>(i)));
    }
  }

  // repeated .acu.common.SpeedPoint speed_limit = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_limit_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_limit(static_cast<int>(i)));
    }
  }

  // repeated .acu.common.SpeedPoint speed_profile = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_profile_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_profile(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .acu.planning_internal.STGraphDebug.STGraphSpeedConstraint speed_constraint = 5;
    if (has_speed_constraint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->speed_constraint_);
    }

    // optional .acu.planning_internal.STGraphDebug.STGraphKernelCuiseRef kernel_cruise_ref = 6;
    if (has_kernel_cruise_ref()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->kernel_cruise_ref_);
    }

    // optional .acu.planning_internal.STGraphDebug.STGraphKernelFollowRef kernel_follow_ref = 7;
    if (has_kernel_follow_ref()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->kernel_follow_ref_);
    }

    // optional .acu.planning_internal.STGraphDebug.STGraphSConstraint s_constraint = 8;
    if (has_s_constraint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->s_constraint_);
    }

    // optional .acu.planning_internal.STGraphDebug.STGraphAccelerationConstraint a_constraint = 9;
    if (has_a_constraint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->a_constraint_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void STGraphDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.STGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const STGraphDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const STGraphDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.STGraphDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.STGraphDebug)
    MergeFrom(*source);
  }
}

void STGraphDebug::MergeFrom(const STGraphDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.STGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boundary_.MergeFrom(from.boundary_);
  speed_limit_.MergeFrom(from.speed_limit_);
  speed_profile_.MergeFrom(from.speed_profile_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_speed_constraint()->::acu::planning_internal::STGraphDebug_STGraphSpeedConstraint::MergeFrom(from.speed_constraint());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_kernel_cruise_ref()->::acu::planning_internal::STGraphDebug_STGraphKernelCuiseRef::MergeFrom(from.kernel_cruise_ref());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_kernel_follow_ref()->::acu::planning_internal::STGraphDebug_STGraphKernelFollowRef::MergeFrom(from.kernel_follow_ref());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_s_constraint()->::acu::planning_internal::STGraphDebug_STGraphSConstraint::MergeFrom(from.s_constraint());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_a_constraint()->::acu::planning_internal::STGraphDebug_STGraphAccelerationConstraint::MergeFrom(from.a_constraint());
    }
  }
}

void STGraphDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.STGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STGraphDebug::CopyFrom(const STGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.STGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STGraphDebug::IsInitialized() const {
  return true;
}

void STGraphDebug::Swap(STGraphDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void STGraphDebug::InternalSwap(STGraphDebug* other) {
  using std::swap;
  boundary_.InternalSwap(&other->boundary_);
  speed_limit_.InternalSwap(&other->speed_limit_);
  speed_profile_.InternalSwap(&other->speed_profile_);
  name_.Swap(&other->name_);
  swap(speed_constraint_, other->speed_constraint_);
  swap(kernel_cruise_ref_, other->kernel_cruise_ref_);
  swap(kernel_follow_ref_, other->kernel_follow_ref_);
  swap(s_constraint_, other->s_constraint_);
  swap(a_constraint_, other->a_constraint_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata STGraphDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecisionTag::InitAsDefaultInstance() {
  ::acu::planning_internal::_DecisionTag_default_instance_._instance.get_mutable()->decision_ = const_cast< ::acu::planning::ObjectDecisionType*>(
      ::acu::planning::ObjectDecisionType::internal_default_instance());
}
void DecisionTag::clear_decision() {
  if (decision_ != NULL) decision_->Clear();
  clear_has_decision();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecisionTag::kDeciderTagFieldNumber;
const int DecisionTag::kDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecisionTag::DecisionTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDecisionTag();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.DecisionTag)
}
DecisionTag::DecisionTag(const DecisionTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  decider_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_decider_tag()) {
    decider_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decider_tag_);
  }
  if (from.has_decision()) {
    decision_ = new ::acu::planning::ObjectDecisionType(*from.decision_);
  } else {
    decision_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.DecisionTag)
}

void DecisionTag::SharedCtor() {
  _cached_size_ = 0;
  decider_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decision_ = NULL;
}

DecisionTag::~DecisionTag() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.DecisionTag)
  SharedDtor();
}

void DecisionTag::SharedDtor() {
  decider_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete decision_;
}

void DecisionTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DecisionTag::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecisionTag& DecisionTag::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDecisionTag();
  return *internal_default_instance();
}

DecisionTag* DecisionTag::New(::google::protobuf::Arena* arena) const {
  DecisionTag* n = new DecisionTag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DecisionTag::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!decider_tag_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*decider_tag_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(decision_ != NULL);
      decision_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DecisionTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.DecisionTag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string decider_tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decider_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.DecisionTag.decider_tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning.ObjectDecisionType decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.DecisionTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.DecisionTag)
  return false;
#undef DO_
}

void DecisionTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string decider_tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.DecisionTag.decider_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->decider_tag(), output);
  }

  // optional .acu.planning.ObjectDecisionType decision = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->decision_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.DecisionTag)
}

::google::protobuf::uint8* DecisionTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.DecisionTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string decider_tag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->decider_tag().data(), static_cast<int>(this->decider_tag().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.DecisionTag.decider_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->decider_tag(), target);
  }

  // optional .acu.planning.ObjectDecisionType decision = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->decision_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.DecisionTag)
  return target;
}

size_t DecisionTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.DecisionTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string decider_tag = 1;
    if (has_decider_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->decider_tag());
    }

    // optional .acu.planning.ObjectDecisionType decision = 2;
    if (has_decision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->decision_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DecisionTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.DecisionTag)
  GOOGLE_DCHECK_NE(&from, this);
  const DecisionTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecisionTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.DecisionTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.DecisionTag)
    MergeFrom(*source);
  }
}

void DecisionTag::MergeFrom(const DecisionTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.DecisionTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_decider_tag();
      decider_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decider_tag_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_decision()->::acu::planning::ObjectDecisionType::MergeFrom(from.decision());
    }
  }
}

void DecisionTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.DecisionTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecisionTag::CopyFrom(const DecisionTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.DecisionTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionTag::IsInitialized() const {
  return true;
}

void DecisionTag::Swap(DecisionTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecisionTag::InternalSwap(DecisionTag* other) {
  using std::swap;
  decider_tag_.Swap(&other->decider_tag_);
  swap(decision_, other->decision_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DecisionTag::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObstacleDebug::InitAsDefaultInstance() {
  ::acu::planning_internal::_ObstacleDebug_default_instance_._instance.get_mutable()->sl_boundary_ = const_cast< ::acu::planning::SLBoundary*>(
      ::acu::planning::SLBoundary::internal_default_instance());
}
void ObstacleDebug::clear_sl_boundary() {
  if (sl_boundary_ != NULL) sl_boundary_->Clear();
  clear_has_sl_boundary();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObstacleDebug::kIdFieldNumber;
const int ObstacleDebug::kSlBoundaryFieldNumber;
const int ObstacleDebug::kDecisionTagFieldNumber;
const int ObstacleDebug::kVerticesXCoordsFieldNumber;
const int ObstacleDebug::kVerticesYCoordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObstacleDebug::ObstacleDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsObstacleDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.ObstacleDebug)
}
ObstacleDebug::ObstacleDebug(const ObstacleDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      decision_tag_(from.decision_tag_),
      vertices_x_coords_(from.vertices_x_coords_),
      vertices_y_coords_(from.vertices_y_coords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_sl_boundary()) {
    sl_boundary_ = new ::acu::planning::SLBoundary(*from.sl_boundary_);
  } else {
    sl_boundary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.ObstacleDebug)
}

void ObstacleDebug::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sl_boundary_ = NULL;
}

ObstacleDebug::~ObstacleDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.ObstacleDebug)
  SharedDtor();
}

void ObstacleDebug::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sl_boundary_;
}

void ObstacleDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObstacleDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObstacleDebug& ObstacleDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsObstacleDebug();
  return *internal_default_instance();
}

ObstacleDebug* ObstacleDebug::New(::google::protobuf::Arena* arena) const {
  ObstacleDebug* n = new ObstacleDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObstacleDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decision_tag_.Clear();
  vertices_x_coords_.Clear();
  vertices_y_coords_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(sl_boundary_ != NULL);
      sl_boundary_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObstacleDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.ObstacleDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.ObstacleDebug.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning.SLBoundary sl_boundary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sl_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.DecisionTag decision_tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_decision_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double vertices_x_coords = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 33u, input, this->mutable_vertices_x_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_vertices_x_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double vertices_y_coords = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_vertices_y_coords())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_vertices_y_coords())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.ObstacleDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.ObstacleDebug)
  return false;
#undef DO_
}

void ObstacleDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.ObstacleDebug.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .acu.planning.SLBoundary sl_boundary = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sl_boundary_, output);
  }

  // repeated .acu.planning_internal.DecisionTag decision_tag = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_tag_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->decision_tag(static_cast<int>(i)), output);
  }

  // repeated double vertices_x_coords = 4;
  for (int i = 0, n = this->vertices_x_coords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      4, this->vertices_x_coords(i), output);
  }

  // repeated double vertices_y_coords = 5;
  for (int i = 0, n = this->vertices_y_coords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->vertices_y_coords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.ObstacleDebug)
}

::google::protobuf::uint8* ObstacleDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.ObstacleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.ObstacleDebug.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .acu.planning.SLBoundary sl_boundary = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sl_boundary_, deterministic, target);
  }

  // repeated .acu.planning_internal.DecisionTag decision_tag = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_tag_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->decision_tag(static_cast<int>(i)), deterministic, target);
  }

  // repeated double vertices_x_coords = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(4, this->vertices_x_coords_, target);

  // repeated double vertices_y_coords = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->vertices_y_coords_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.ObstacleDebug)
  return target;
}

size_t ObstacleDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.ObstacleDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.planning_internal.DecisionTag decision_tag = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->decision_tag_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->decision_tag(static_cast<int>(i)));
    }
  }

  // repeated double vertices_x_coords = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_x_coords_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->vertices_x_coords_size());
    total_size += data_size;
  }

  // repeated double vertices_y_coords = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_y_coords_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->vertices_y_coords_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional .acu.planning.SLBoundary sl_boundary = 2;
    if (has_sl_boundary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->sl_boundary_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObstacleDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.ObstacleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ObstacleDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObstacleDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.ObstacleDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.ObstacleDebug)
    MergeFrom(*source);
  }
}

void ObstacleDebug::MergeFrom(const ObstacleDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.ObstacleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decision_tag_.MergeFrom(from.decision_tag_);
  vertices_x_coords_.MergeFrom(from.vertices_x_coords_);
  vertices_y_coords_.MergeFrom(from.vertices_y_coords_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_sl_boundary()->::acu::planning::SLBoundary::MergeFrom(from.sl_boundary());
    }
  }
}

void ObstacleDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.ObstacleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleDebug::CopyFrom(const ObstacleDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.ObstacleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleDebug::IsInitialized() const {
  return true;
}

void ObstacleDebug::Swap(ObstacleDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObstacleDebug::InternalSwap(ObstacleDebug* other) {
  using std::swap;
  decision_tag_.InternalSwap(&other->decision_tag_);
  vertices_x_coords_.InternalSwap(&other->vertices_x_coords_);
  vertices_y_coords_.InternalSwap(&other->vertices_y_coords_);
  id_.Swap(&other->id_);
  swap(sl_boundary_, other->sl_boundary_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObstacleDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferenceLineDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferenceLineDebug::kIdFieldNumber;
const int ReferenceLineDebug::kLengthFieldNumber;
const int ReferenceLineDebug::kCostFieldNumber;
const int ReferenceLineDebug::kIsChangeLanePathFieldNumber;
const int ReferenceLineDebug::kIsDrivableFieldNumber;
const int ReferenceLineDebug::kIsProtectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferenceLineDebug::ReferenceLineDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsReferenceLineDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.ReferenceLineDebug)
}
ReferenceLineDebug::ReferenceLineDebug(const ReferenceLineDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&length_, &from.length_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_protected_) -
    reinterpret_cast<char*>(&length_)) + sizeof(is_protected_));
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.ReferenceLineDebug)
}

void ReferenceLineDebug::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_protected_) -
      reinterpret_cast<char*>(&length_)) + sizeof(is_protected_));
}

ReferenceLineDebug::~ReferenceLineDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.ReferenceLineDebug)
  SharedDtor();
}

void ReferenceLineDebug::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReferenceLineDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReferenceLineDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferenceLineDebug& ReferenceLineDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsReferenceLineDebug();
  return *internal_default_instance();
}

ReferenceLineDebug* ReferenceLineDebug::New(::google::protobuf::Arena* arena) const {
  ReferenceLineDebug* n = new ReferenceLineDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReferenceLineDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&length_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_protected_) -
        reinterpret_cast<char*>(&length_)) + sizeof(is_protected_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReferenceLineDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.ReferenceLineDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.ReferenceLineDebug.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_length();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double cost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_change_lane_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_change_lane_path();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_change_lane_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_drivable = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_drivable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_drivable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_protected = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_protected();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_protected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.ReferenceLineDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.ReferenceLineDebug)
  return false;
#undef DO_
}

void ReferenceLineDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.ReferenceLineDebug.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional double length = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->length(), output);
  }

  // optional double cost = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->cost(), output);
  }

  // optional bool is_change_lane_path = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_change_lane_path(), output);
  }

  // optional bool is_drivable = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_drivable(), output);
  }

  // optional bool is_protected = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_protected(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.ReferenceLineDebug)
}

::google::protobuf::uint8* ReferenceLineDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.ReferenceLineDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.ReferenceLineDebug.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional double length = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->length(), target);
  }

  // optional double cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->cost(), target);
  }

  // optional bool is_change_lane_path = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_change_lane_path(), target);
  }

  // optional bool is_drivable = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_drivable(), target);
  }

  // optional bool is_protected = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_protected(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.ReferenceLineDebug)
  return target;
}

size_t ReferenceLineDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.ReferenceLineDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional double length = 2;
    if (has_length()) {
      total_size += 1 + 8;
    }

    // optional double cost = 3;
    if (has_cost()) {
      total_size += 1 + 8;
    }

    // optional bool is_change_lane_path = 4;
    if (has_is_change_lane_path()) {
      total_size += 1 + 1;
    }

    // optional bool is_drivable = 5;
    if (has_is_drivable()) {
      total_size += 1 + 1;
    }

    // optional bool is_protected = 6;
    if (has_is_protected()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReferenceLineDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.ReferenceLineDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferenceLineDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferenceLineDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.ReferenceLineDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.ReferenceLineDebug)
    MergeFrom(*source);
  }
}

void ReferenceLineDebug::MergeFrom(const ReferenceLineDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.ReferenceLineDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00000004u) {
      cost_ = from.cost_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_change_lane_path_ = from.is_change_lane_path_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_drivable_ = from.is_drivable_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_protected_ = from.is_protected_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReferenceLineDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.ReferenceLineDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferenceLineDebug::CopyFrom(const ReferenceLineDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.ReferenceLineDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferenceLineDebug::IsInitialized() const {
  return true;
}

void ReferenceLineDebug::Swap(ReferenceLineDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReferenceLineDebug::InternalSwap(ReferenceLineDebug* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(length_, other->length_);
  swap(cost_, other->cost_);
  swap(is_change_lane_path_, other->is_change_lane_path_);
  swap(is_drivable_, other->is_drivable_);
  swap(is_protected_, other->is_protected_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReferenceLineDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SampleLayerDebug::InitAsDefaultInstance() {
}
void SampleLayerDebug::clear_sl_point() {
  sl_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleLayerDebug::kSlPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleLayerDebug::SampleLayerDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSampleLayerDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.SampleLayerDebug)
}
SampleLayerDebug::SampleLayerDebug(const SampleLayerDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sl_point_(from.sl_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.SampleLayerDebug)
}

void SampleLayerDebug::SharedCtor() {
  _cached_size_ = 0;
}

SampleLayerDebug::~SampleLayerDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.SampleLayerDebug)
  SharedDtor();
}

void SampleLayerDebug::SharedDtor() {
}

void SampleLayerDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SampleLayerDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleLayerDebug& SampleLayerDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSampleLayerDebug();
  return *internal_default_instance();
}

SampleLayerDebug* SampleLayerDebug::New(::google::protobuf::Arena* arena) const {
  SampleLayerDebug* n = new SampleLayerDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SampleLayerDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sl_point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SampleLayerDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.SampleLayerDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.common.SLPoint sl_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sl_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.SampleLayerDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.SampleLayerDebug)
  return false;
#undef DO_
}

void SampleLayerDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.SLPoint sl_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sl_point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.SampleLayerDebug)
}

::google::protobuf::uint8* SampleLayerDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.SampleLayerDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.SLPoint sl_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sl_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.SampleLayerDebug)
  return target;
}

size_t SampleLayerDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.SampleLayerDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.SLPoint sl_point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SampleLayerDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.SampleLayerDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleLayerDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleLayerDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.SampleLayerDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.SampleLayerDebug)
    MergeFrom(*source);
  }
}

void SampleLayerDebug::MergeFrom(const SampleLayerDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.SampleLayerDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sl_point_.MergeFrom(from.sl_point_);
}

void SampleLayerDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.SampleLayerDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleLayerDebug::CopyFrom(const SampleLayerDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.SampleLayerDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleLayerDebug::IsInitialized() const {
  return true;
}

void SampleLayerDebug::Swap(SampleLayerDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleLayerDebug::InternalSwap(SampleLayerDebug* other) {
  using std::swap;
  sl_point_.InternalSwap(&other->sl_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SampleLayerDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DpPolyGraphDebug::InitAsDefaultInstance() {
}
void DpPolyGraphDebug::clear_min_cost_point() {
  min_cost_point_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DpPolyGraphDebug::kSampleLayerFieldNumber;
const int DpPolyGraphDebug::kMinCostPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DpPolyGraphDebug::DpPolyGraphDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDpPolyGraphDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.DpPolyGraphDebug)
}
DpPolyGraphDebug::DpPolyGraphDebug(const DpPolyGraphDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sample_layer_(from.sample_layer_),
      min_cost_point_(from.min_cost_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.DpPolyGraphDebug)
}

void DpPolyGraphDebug::SharedCtor() {
  _cached_size_ = 0;
}

DpPolyGraphDebug::~DpPolyGraphDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.DpPolyGraphDebug)
  SharedDtor();
}

void DpPolyGraphDebug::SharedDtor() {
}

void DpPolyGraphDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DpPolyGraphDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DpPolyGraphDebug& DpPolyGraphDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsDpPolyGraphDebug();
  return *internal_default_instance();
}

DpPolyGraphDebug* DpPolyGraphDebug::New(::google::protobuf::Arena* arena) const {
  DpPolyGraphDebug* n = new DpPolyGraphDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DpPolyGraphDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sample_layer_.Clear();
  min_cost_point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DpPolyGraphDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.DpPolyGraphDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.planning_internal.SampleLayerDebug sample_layer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sample_layer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.SLPoint min_cost_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_min_cost_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.DpPolyGraphDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.DpPolyGraphDebug)
  return false;
#undef DO_
}

void DpPolyGraphDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.SampleLayerDebug sample_layer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_layer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sample_layer(static_cast<int>(i)), output);
  }

  // repeated .acu.common.SLPoint min_cost_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->min_cost_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->min_cost_point(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.DpPolyGraphDebug)
}

::google::protobuf::uint8* DpPolyGraphDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.DpPolyGraphDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.SampleLayerDebug sample_layer = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sample_layer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->sample_layer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.common.SLPoint min_cost_point = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->min_cost_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->min_cost_point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.DpPolyGraphDebug)
  return target;
}

size_t DpPolyGraphDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.DpPolyGraphDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.planning_internal.SampleLayerDebug sample_layer = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->sample_layer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sample_layer(static_cast<int>(i)));
    }
  }

  // repeated .acu.common.SLPoint min_cost_point = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->min_cost_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->min_cost_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DpPolyGraphDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.DpPolyGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const DpPolyGraphDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DpPolyGraphDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.DpPolyGraphDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.DpPolyGraphDebug)
    MergeFrom(*source);
  }
}

void DpPolyGraphDebug::MergeFrom(const DpPolyGraphDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.DpPolyGraphDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sample_layer_.MergeFrom(from.sample_layer_);
  min_cost_point_.MergeFrom(from.min_cost_point_);
}

void DpPolyGraphDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.DpPolyGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DpPolyGraphDebug::CopyFrom(const DpPolyGraphDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.DpPolyGraphDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DpPolyGraphDebug::IsInitialized() const {
  return true;
}

void DpPolyGraphDebug::Swap(DpPolyGraphDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DpPolyGraphDebug::InternalSwap(DpPolyGraphDebug* other) {
  using std::swap;
  sample_layer_.InternalSwap(&other->sample_layer_);
  min_cost_point_.InternalSwap(&other->min_cost_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DpPolyGraphDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Trajectories::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trajectories::kTrajectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trajectories::Trajectories()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsTrajectories();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.Trajectories)
}
Trajectories::Trajectories(const Trajectories& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      trajectory_(from.trajectory_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.Trajectories)
}

void Trajectories::SharedCtor() {
  _cached_size_ = 0;
}

Trajectories::~Trajectories() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.Trajectories)
  SharedDtor();
}

void Trajectories::SharedDtor() {
}

void Trajectories::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trajectories::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Trajectories& Trajectories::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsTrajectories();
  return *internal_default_instance();
}

Trajectories* Trajectories::New(::google::protobuf::Arena* arena) const {
  Trajectories* n = new Trajectories;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Trajectories::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trajectory_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Trajectories::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.Trajectories)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.planning_internal.Trajectory trajectory = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.Trajectories)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.Trajectories)
  return false;
#undef DO_
}

void Trajectories::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.Trajectory trajectory = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->trajectory(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.Trajectories)
}

::google::protobuf::uint8* Trajectories::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.Trajectories)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.Trajectory trajectory = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectory_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->trajectory(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.Trajectories)
  return target;
}

size_t Trajectories::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.Trajectories)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.planning_internal.Trajectory trajectory = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectory_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectory(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trajectories::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.Trajectories)
  GOOGLE_DCHECK_NE(&from, this);
  const Trajectories* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Trajectories>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.Trajectories)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.Trajectories)
    MergeFrom(*source);
  }
}

void Trajectories::MergeFrom(const Trajectories& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.Trajectories)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trajectory_.MergeFrom(from.trajectory_);
}

void Trajectories::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.Trajectories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trajectories::CopyFrom(const Trajectories& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.Trajectories)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trajectories::IsInitialized() const {
  return true;
}

void Trajectories::Swap(Trajectories* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trajectories::InternalSwap(Trajectories* other) {
  using std::swap;
  trajectory_.InternalSwap(&other->trajectory_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Trajectories::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SmootherDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmootherDebug::kIsSmoothedFieldNumber;
const int SmootherDebug::kTypeFieldNumber;
const int SmootherDebug::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmootherDebug::SmootherDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSmootherDebug();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.SmootherDebug)
}
SmootherDebug::SmootherDebug(const SmootherDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_reason()) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  ::memcpy(&is_smoothed_, &from.is_smoothed_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&is_smoothed_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.SmootherDebug)
}

void SmootherDebug::SharedCtor() {
  _cached_size_ = 0;
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_smoothed_ = false;
  type_ = 1;
}

SmootherDebug::~SmootherDebug() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.SmootherDebug)
  SharedDtor();
}

void SmootherDebug::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SmootherDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmootherDebug::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SmootherDebug& SmootherDebug::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsSmootherDebug();
  return *internal_default_instance();
}

SmootherDebug* SmootherDebug::New(::google::protobuf::Arena* arena) const {
  SmootherDebug* n = new SmootherDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SmootherDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!reason_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*reason_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    is_smoothed_ = false;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SmootherDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.SmootherDebug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_smoothed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_smoothed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_smoothed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::acu::planning_internal::SmootherDebug_SmootherType_IsValid(value)) {
            set_type(static_cast< ::acu::planning_internal::SmootherDebug_SmootherType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.SmootherDebug.reason");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.SmootherDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.SmootherDebug)
  return false;
#undef DO_
}

void SmootherDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_smoothed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_smoothed(), output);
  }

  // optional .acu.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SmootherDebug.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.SmootherDebug)
}

::google::protobuf::uint8* SmootherDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.SmootherDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_smoothed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_smoothed(), target);
  }

  // optional .acu.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.SmootherDebug.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.SmootherDebug)
  return target;
}

size_t SmootherDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.SmootherDebug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string reason = 3;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

    // optional bool is_smoothed = 1;
    if (has_is_smoothed()) {
      total_size += 1 + 1;
    }

    // optional .acu.planning_internal.SmootherDebug.SmootherType type = 2 [default = SMOOTHER_NONE];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmootherDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.SmootherDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const SmootherDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SmootherDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.SmootherDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.SmootherDebug)
    MergeFrom(*source);
  }
}

void SmootherDebug::MergeFrom(const SmootherDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.SmootherDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_reason();
      reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
    }
    if (cached_has_bits & 0x00000002u) {
      is_smoothed_ = from.is_smoothed_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SmootherDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.SmootherDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmootherDebug::CopyFrom(const SmootherDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.SmootherDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmootherDebug::IsInitialized() const {
  return true;
}

void SmootherDebug::Swap(SmootherDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmootherDebug::InternalSwap(SmootherDebug* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(is_smoothed_, other->is_smoothed_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SmootherDebug::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanningData::InitAsDefaultInstance() {
  ::acu::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->init_point_ = const_cast< ::acu::common::TrajectoryPoint*>(
      ::acu::common::TrajectoryPoint::internal_default_instance());
  ::acu::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->prediction_header_ = const_cast< ::acu::common::Header*>(
      ::acu::common::Header::internal_default_instance());
  ::acu::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->dp_poly_graph_ = const_cast< ::acu::planning_internal::DpPolyGraphDebug*>(
      ::acu::planning_internal::DpPolyGraphDebug::internal_default_instance());
  ::acu::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->lattice_st_image_ = const_cast< ::acu::planning_internal::LatticeStTraining*>(
      ::acu::planning_internal::LatticeStTraining::internal_default_instance());
  ::acu::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->smoother_ = const_cast< ::acu::planning_internal::SmootherDebug*>(
      ::acu::planning_internal::SmootherDebug::internal_default_instance());
}
void PlanningData::clear_init_point() {
  if (init_point_ != NULL) init_point_->Clear();
  clear_has_init_point();
}
void PlanningData::clear_path() {
  path_.Clear();
}
void PlanningData::clear_prediction_header() {
  if (prediction_header_ != NULL) prediction_header_->Clear();
  clear_has_prediction_header();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanningData::kInitPointFieldNumber;
const int PlanningData::kPathFieldNumber;
const int PlanningData::kSpeedPlanFieldNumber;
const int PlanningData::kStGraphFieldNumber;
const int PlanningData::kSlFrameFieldNumber;
const int PlanningData::kPredictionHeaderFieldNumber;
const int PlanningData::kObstacleFieldNumber;
const int PlanningData::kReferenceLineFieldNumber;
const int PlanningData::kDpPolyGraphFieldNumber;
const int PlanningData::kLatticeStImageFieldNumber;
const int PlanningData::kFrontClearDistanceFieldNumber;
const int PlanningData::kSmootherFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanningData::PlanningData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsPlanningData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.PlanningData)
}
PlanningData::PlanningData(const PlanningData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      path_(from.path_),
      speed_plan_(from.speed_plan_),
      st_graph_(from.st_graph_),
      sl_frame_(from.sl_frame_),
      obstacle_(from.obstacle_),
      reference_line_(from.reference_line_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_init_point()) {
    init_point_ = new ::acu::common::TrajectoryPoint(*from.init_point_);
  } else {
    init_point_ = NULL;
  }
  if (from.has_prediction_header()) {
    prediction_header_ = new ::acu::common::Header(*from.prediction_header_);
  } else {
    prediction_header_ = NULL;
  }
  if (from.has_dp_poly_graph()) {
    dp_poly_graph_ = new ::acu::planning_internal::DpPolyGraphDebug(*from.dp_poly_graph_);
  } else {
    dp_poly_graph_ = NULL;
  }
  if (from.has_lattice_st_image()) {
    lattice_st_image_ = new ::acu::planning_internal::LatticeStTraining(*from.lattice_st_image_);
  } else {
    lattice_st_image_ = NULL;
  }
  if (from.has_smoother()) {
    smoother_ = new ::acu::planning_internal::SmootherDebug(*from.smoother_);
  } else {
    smoother_ = NULL;
  }
  front_clear_distance_ = from.front_clear_distance_;
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.PlanningData)
}

void PlanningData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&init_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&front_clear_distance_) -
      reinterpret_cast<char*>(&init_point_)) + sizeof(front_clear_distance_));
}

PlanningData::~PlanningData() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.PlanningData)
  SharedDtor();
}

void PlanningData::SharedDtor() {
  if (this != internal_default_instance()) delete init_point_;
  if (this != internal_default_instance()) delete prediction_header_;
  if (this != internal_default_instance()) delete dp_poly_graph_;
  if (this != internal_default_instance()) delete lattice_st_image_;
  if (this != internal_default_instance()) delete smoother_;
}

void PlanningData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlanningData::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanningData& PlanningData::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsPlanningData();
  return *internal_default_instance();
}

PlanningData* PlanningData::New(::google::protobuf::Arena* arena) const {
  PlanningData* n = new PlanningData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlanningData::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  speed_plan_.Clear();
  st_graph_.Clear();
  sl_frame_.Clear();
  obstacle_.Clear();
  reference_line_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(init_point_ != NULL);
      init_point_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(prediction_header_ != NULL);
      prediction_header_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(dp_poly_graph_ != NULL);
      dp_poly_graph_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(lattice_st_image_ != NULL);
      lattice_st_image_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(smoother_ != NULL);
      smoother_->Clear();
    }
  }
  front_clear_distance_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlanningData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.PlanningData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.common.Path path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.common.TrajectoryPoint init_point = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.SpeedPlan speed_plan = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_speed_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.STGraphDebug st_graph = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_st_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.SLFrameDebug sl_frame = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sl_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.common.Header prediction_header = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prediction_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.ObstacleDebug obstacle = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.planning_internal.ReferenceLineDebug reference_line = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_reference_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dp_poly_graph()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.LatticeStTraining lattice_st_image = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lattice_st_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double front_clear_distance = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_front_clear_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &front_clear_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.SmootherDebug smoother = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_smoother()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.PlanningData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.PlanningData)
  return false;
#undef DO_
}

void PlanningData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.Path path = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->path(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .acu.common.TrajectoryPoint init_point = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->init_point_, output);
  }

  // repeated .acu.planning_internal.SpeedPlan speed_plan = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_plan_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->speed_plan(static_cast<int>(i)), output);
  }

  // repeated .acu.planning_internal.STGraphDebug st_graph = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_graph_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->st_graph(static_cast<int>(i)), output);
  }

  // repeated .acu.planning_internal.SLFrameDebug sl_frame = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_frame_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->sl_frame(static_cast<int>(i)), output);
  }

  // optional .acu.common.Header prediction_header = 16;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->prediction_header_, output);
  }

  // repeated .acu.planning_internal.ObstacleDebug obstacle = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->obstacle(static_cast<int>(i)), output);
  }

  // repeated .acu.planning_internal.ReferenceLineDebug reference_line = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_line_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->reference_line(static_cast<int>(i)), output);
  }

  // optional .acu.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->dp_poly_graph_, output);
  }

  // optional .acu.planning_internal.LatticeStTraining lattice_st_image = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->lattice_st_image_, output);
  }

  // optional double front_clear_distance = 24;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->front_clear_distance(), output);
  }

  // optional .acu.planning_internal.SmootherDebug smoother = 28;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->smoother_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.PlanningData)
}

::google::protobuf::uint8* PlanningData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.Path path = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->path(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .acu.common.TrajectoryPoint init_point = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->init_point_, deterministic, target);
  }

  // repeated .acu.planning_internal.SpeedPlan speed_plan = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_plan_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->speed_plan(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.planning_internal.STGraphDebug st_graph = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_graph_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->st_graph(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.planning_internal.SLFrameDebug sl_frame = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sl_frame_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->sl_frame(static_cast<int>(i)), deterministic, target);
  }

  // optional .acu.common.Header prediction_header = 16;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->prediction_header_, deterministic, target);
  }

  // repeated .acu.planning_internal.ObstacleDebug obstacle = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->obstacle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->obstacle(static_cast<int>(i)), deterministic, target);
  }

  // repeated .acu.planning_internal.ReferenceLineDebug reference_line = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reference_line_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->reference_line(static_cast<int>(i)), deterministic, target);
  }

  // optional .acu.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->dp_poly_graph_, deterministic, target);
  }

  // optional .acu.planning_internal.LatticeStTraining lattice_st_image = 21;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *this->lattice_st_image_, deterministic, target);
  }

  // optional double front_clear_distance = 24;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->front_clear_distance(), target);
  }

  // optional .acu.planning_internal.SmootherDebug smoother = 28;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, *this->smoother_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.PlanningData)
  return target;
}

size_t PlanningData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.PlanningData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.Path path = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path(static_cast<int>(i)));
    }
  }

  // repeated .acu.planning_internal.SpeedPlan speed_plan = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_plan_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_plan(static_cast<int>(i)));
    }
  }

  // repeated .acu.planning_internal.STGraphDebug st_graph = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->st_graph_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->st_graph(static_cast<int>(i)));
    }
  }

  // repeated .acu.planning_internal.SLFrameDebug sl_frame = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->sl_frame_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sl_frame(static_cast<int>(i)));
    }
  }

  // repeated .acu.planning_internal.ObstacleDebug obstacle = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->obstacle_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->obstacle(static_cast<int>(i)));
    }
  }

  // repeated .acu.planning_internal.ReferenceLineDebug reference_line = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->reference_line_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->reference_line(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional .acu.common.TrajectoryPoint init_point = 10;
    if (has_init_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->init_point_);
    }

    // optional .acu.common.Header prediction_header = 16;
    if (has_prediction_header()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->prediction_header_);
    }

    // optional .acu.planning_internal.DpPolyGraphDebug dp_poly_graph = 20;
    if (has_dp_poly_graph()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->dp_poly_graph_);
    }

    // optional .acu.planning_internal.LatticeStTraining lattice_st_image = 21;
    if (has_lattice_st_image()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->lattice_st_image_);
    }

    // optional .acu.planning_internal.SmootherDebug smoother = 28;
    if (has_smoother()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->smoother_);
    }

    // optional double front_clear_distance = 24;
    if (has_front_clear_distance()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlanningData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanningData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.PlanningData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.PlanningData)
    MergeFrom(*source);
  }
}

void PlanningData::MergeFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  speed_plan_.MergeFrom(from.speed_plan_);
  st_graph_.MergeFrom(from.st_graph_);
  sl_frame_.MergeFrom(from.sl_frame_);
  obstacle_.MergeFrom(from.obstacle_);
  reference_line_.MergeFrom(from.reference_line_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_init_point()->::acu::common::TrajectoryPoint::MergeFrom(from.init_point());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_prediction_header()->::acu::common::Header::MergeFrom(from.prediction_header());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_dp_poly_graph()->::acu::planning_internal::DpPolyGraphDebug::MergeFrom(from.dp_poly_graph());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_lattice_st_image()->::acu::planning_internal::LatticeStTraining::MergeFrom(from.lattice_st_image());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_smoother()->::acu::planning_internal::SmootherDebug::MergeFrom(from.smoother());
    }
    if (cached_has_bits & 0x00000020u) {
      front_clear_distance_ = from.front_clear_distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlanningData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningData::CopyFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningData::IsInitialized() const {
  return true;
}

void PlanningData::Swap(PlanningData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanningData::InternalSwap(PlanningData* other) {
  using std::swap;
  path_.InternalSwap(&other->path_);
  speed_plan_.InternalSwap(&other->speed_plan_);
  st_graph_.InternalSwap(&other->st_graph_);
  sl_frame_.InternalSwap(&other->sl_frame_);
  obstacle_.InternalSwap(&other->obstacle_);
  reference_line_.InternalSwap(&other->reference_line_);
  swap(init_point_, other->init_point_);
  swap(prediction_header_, other->prediction_header_);
  swap(dp_poly_graph_, other->dp_poly_graph_);
  swap(lattice_st_image_, other->lattice_st_image_);
  swap(smoother_, other->smoother_);
  swap(front_clear_distance_, other->front_clear_distance_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlanningData::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatticeStPixel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeStPixel::kSFieldNumber;
const int LatticeStPixel::kTFieldNumber;
const int LatticeStPixel::kRFieldNumber;
const int LatticeStPixel::kGFieldNumber;
const int LatticeStPixel::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeStPixel::LatticeStPixel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStPixel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.LatticeStPixel)
}
LatticeStPixel::LatticeStPixel(const LatticeStPixel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&s_, &from.s_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&s_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.LatticeStPixel)
}

void LatticeStPixel::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&s_)) + sizeof(b_));
}

LatticeStPixel::~LatticeStPixel() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.LatticeStPixel)
  SharedDtor();
}

void LatticeStPixel::SharedDtor() {
}

void LatticeStPixel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatticeStPixel::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatticeStPixel& LatticeStPixel::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStPixel();
  return *internal_default_instance();
}

LatticeStPixel* LatticeStPixel::New(::google::protobuf::Arena* arena) const {
  LatticeStPixel* n = new LatticeStPixel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatticeStPixel::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&s_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&b_) -
        reinterpret_cast<char*>(&s_)) + sizeof(b_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatticeStPixel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.LatticeStPixel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_s();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 t = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_t();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 r = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_r();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 g = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_g();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &g_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 b = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.LatticeStPixel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.LatticeStPixel)
  return false;
#undef DO_
}

void LatticeStPixel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->s(), output);
  }

  // optional int32 t = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->t(), output);
  }

  // optional uint32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->r(), output);
  }

  // optional uint32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->g(), output);
  }

  // optional uint32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.LatticeStPixel)
}

::google::protobuf::uint8* LatticeStPixel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.LatticeStPixel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->s(), target);
  }

  // optional int32 t = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->t(), target);
  }

  // optional uint32 r = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->r(), target);
  }

  // optional uint32 g = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->g(), target);
  }

  // optional uint32 b = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.LatticeStPixel)
  return target;
}

size_t LatticeStPixel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.LatticeStPixel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 s = 1;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s());
    }

    // optional int32 t = 2;
    if (has_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->t());
    }

    // optional uint32 r = 3;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->r());
    }

    // optional uint32 g = 4;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->g());
    }

    // optional uint32 b = 5;
    if (has_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->b());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatticeStPixel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.LatticeStPixel)
  GOOGLE_DCHECK_NE(&from, this);
  const LatticeStPixel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeStPixel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.LatticeStPixel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.LatticeStPixel)
    MergeFrom(*source);
  }
}

void LatticeStPixel::MergeFrom(const LatticeStPixel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.LatticeStPixel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      s_ = from.s_;
    }
    if (cached_has_bits & 0x00000002u) {
      t_ = from.t_;
    }
    if (cached_has_bits & 0x00000004u) {
      r_ = from.r_;
    }
    if (cached_has_bits & 0x00000008u) {
      g_ = from.g_;
    }
    if (cached_has_bits & 0x00000010u) {
      b_ = from.b_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatticeStPixel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.LatticeStPixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeStPixel::CopyFrom(const LatticeStPixel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.LatticeStPixel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeStPixel::IsInitialized() const {
  return true;
}

void LatticeStPixel::Swap(LatticeStPixel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeStPixel::InternalSwap(LatticeStPixel* other) {
  using std::swap;
  swap(s_, other->s_);
  swap(t_, other->t_);
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatticeStPixel::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatticeStTraining::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatticeStTraining::kPixelFieldNumber;
const int LatticeStTraining::kTimestampFieldNumber;
const int LatticeStTraining::kAnnotationFieldNumber;
const int LatticeStTraining::kNumSGridsFieldNumber;
const int LatticeStTraining::kNumTGridsFieldNumber;
const int LatticeStTraining::kSResolutionFieldNumber;
const int LatticeStTraining::kTResolutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatticeStTraining::LatticeStTraining()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStTraining();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.LatticeStTraining)
}
LatticeStTraining::LatticeStTraining(const LatticeStTraining& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pixel_(from.pixel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_annotation()) {
    annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&t_resolution_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.LatticeStTraining)
}

void LatticeStTraining::SharedCtor() {
  _cached_size_ = 0;
  annotation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_resolution_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
}

LatticeStTraining::~LatticeStTraining() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.LatticeStTraining)
  SharedDtor();
}

void LatticeStTraining::SharedDtor() {
  annotation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LatticeStTraining::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LatticeStTraining::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatticeStTraining& LatticeStTraining::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsLatticeStTraining();
  return *internal_default_instance();
}

LatticeStTraining* LatticeStTraining::New(::google::protobuf::Arena* arena) const {
  LatticeStTraining* n = new LatticeStTraining;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LatticeStTraining::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pixel_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!annotation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*annotation_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 62u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&t_resolution_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(t_resolution_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LatticeStTraining::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.LatticeStTraining)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.planning_internal.LatticeStPixel pixel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pixel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string annotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_annotation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->annotation().data(), static_cast<int>(this->annotation().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.planning_internal.LatticeStTraining.annotation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_s_grids = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_num_s_grids();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_s_grids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_t_grids = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_num_t_grids();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_t_grids_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double s_resolution = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_s_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &s_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double t_resolution = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_t_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.LatticeStTraining)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.LatticeStTraining)
  return false;
#undef DO_
}

void LatticeStTraining::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.LatticeStPixel pixel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pixel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pixel(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->timestamp(), output);
  }

  // optional string annotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.LatticeStTraining.annotation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->annotation(), output);
  }

  // optional uint32 num_s_grids = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num_s_grids(), output);
  }

  // optional uint32 num_t_grids = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_t_grids(), output);
  }

  // optional double s_resolution = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->s_resolution(), output);
  }

  // optional double t_resolution = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->t_resolution(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.LatticeStTraining)
}

::google::protobuf::uint8* LatticeStTraining::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.LatticeStTraining)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.planning_internal.LatticeStPixel pixel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pixel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pixel(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->timestamp(), target);
  }

  // optional string annotation = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->annotation().data(), static_cast<int>(this->annotation().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.planning_internal.LatticeStTraining.annotation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->annotation(), target);
  }

  // optional uint32 num_s_grids = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num_s_grids(), target);
  }

  // optional uint32 num_t_grids = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_t_grids(), target);
  }

  // optional double s_resolution = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->s_resolution(), target);
  }

  // optional double t_resolution = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->t_resolution(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.LatticeStTraining)
  return target;
}

size_t LatticeStTraining::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.LatticeStTraining)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.planning_internal.LatticeStPixel pixel = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pixel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pixel(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string annotation = 3;
    if (has_annotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->annotation());
    }

    // optional double timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

    // optional uint32 num_s_grids = 4;
    if (has_num_s_grids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_s_grids());
    }

    // optional uint32 num_t_grids = 5;
    if (has_num_t_grids()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_t_grids());
    }

    // optional double s_resolution = 6;
    if (has_s_resolution()) {
      total_size += 1 + 8;
    }

    // optional double t_resolution = 7;
    if (has_t_resolution()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LatticeStTraining::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.LatticeStTraining)
  GOOGLE_DCHECK_NE(&from, this);
  const LatticeStTraining* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatticeStTraining>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.LatticeStTraining)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.LatticeStTraining)
    MergeFrom(*source);
  }
}

void LatticeStTraining::MergeFrom(const LatticeStTraining& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.LatticeStTraining)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pixel_.MergeFrom(from.pixel_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_annotation();
      annotation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.annotation_);
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_s_grids_ = from.num_s_grids_;
    }
    if (cached_has_bits & 0x00000008u) {
      num_t_grids_ = from.num_t_grids_;
    }
    if (cached_has_bits & 0x00000010u) {
      s_resolution_ = from.s_resolution_;
    }
    if (cached_has_bits & 0x00000020u) {
      t_resolution_ = from.t_resolution_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LatticeStTraining::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.LatticeStTraining)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatticeStTraining::CopyFrom(const LatticeStTraining& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.LatticeStTraining)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatticeStTraining::IsInitialized() const {
  return true;
}

void LatticeStTraining::Swap(LatticeStTraining* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatticeStTraining::InternalSwap(LatticeStTraining* other) {
  using std::swap;
  pixel_.InternalSwap(&other->pixel_);
  annotation_.Swap(&other->annotation_);
  swap(timestamp_, other->timestamp_);
  swap(num_s_grids_, other->num_s_grids_);
  swap(num_t_grids_, other->num_t_grids_);
  swap(s_resolution_, other->s_resolution_);
  swap(t_resolution_, other->t_resolution_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LatticeStTraining::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CostComponents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CostComponents::kCostComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CostComponents::CostComponents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsCostComponents();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.CostComponents)
}
CostComponents::CostComponents(const CostComponents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cost_component_(from.cost_component_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.CostComponents)
}

void CostComponents::SharedCtor() {
  _cached_size_ = 0;
}

CostComponents::~CostComponents() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.CostComponents)
  SharedDtor();
}

void CostComponents::SharedDtor() {
}

void CostComponents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CostComponents::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CostComponents& CostComponents::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsCostComponents();
  return *internal_default_instance();
}

CostComponents* CostComponents::New(::google::protobuf::Arena* arena) const {
  CostComponents* n = new CostComponents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CostComponents::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cost_component_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CostComponents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.CostComponents)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double cost_component = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9u, input, this->mutable_cost_component())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_cost_component())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.CostComponents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.CostComponents)
  return false;
#undef DO_
}

void CostComponents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double cost_component = 1;
  for (int i = 0, n = this->cost_component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->cost_component(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.CostComponents)
}

::google::protobuf::uint8* CostComponents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.CostComponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double cost_component = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(1, this->cost_component_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.CostComponents)
  return target;
}

size_t CostComponents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.CostComponents)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated double cost_component = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->cost_component_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cost_component_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CostComponents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.CostComponents)
  GOOGLE_DCHECK_NE(&from, this);
  const CostComponents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CostComponents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.CostComponents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.CostComponents)
    MergeFrom(*source);
  }
}

void CostComponents::MergeFrom(const CostComponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.CostComponents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cost_component_.MergeFrom(from.cost_component_);
}

void CostComponents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.CostComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CostComponents::CopyFrom(const CostComponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.CostComponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CostComponents::IsInitialized() const {
  return true;
}

void CostComponents::Swap(CostComponents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CostComponents::InternalSwap(CostComponents* other) {
  using std::swap;
  cost_component_.InternalSwap(&other->cost_component_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CostComponents::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AutoTuningTrainingData::InitAsDefaultInstance() {
  ::acu::planning_internal::_AutoTuningTrainingData_default_instance_._instance.get_mutable()->teacher_component_ = const_cast< ::acu::planning_internal::CostComponents*>(
      ::acu::planning_internal::CostComponents::internal_default_instance());
  ::acu::planning_internal::_AutoTuningTrainingData_default_instance_._instance.get_mutable()->student_component_ = const_cast< ::acu::planning_internal::CostComponents*>(
      ::acu::planning_internal::CostComponents::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AutoTuningTrainingData::kTeacherComponentFieldNumber;
const int AutoTuningTrainingData::kStudentComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AutoTuningTrainingData::AutoTuningTrainingData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsAutoTuningTrainingData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.planning_internal.AutoTuningTrainingData)
}
AutoTuningTrainingData::AutoTuningTrainingData(const AutoTuningTrainingData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_teacher_component()) {
    teacher_component_ = new ::acu::planning_internal::CostComponents(*from.teacher_component_);
  } else {
    teacher_component_ = NULL;
  }
  if (from.has_student_component()) {
    student_component_ = new ::acu::planning_internal::CostComponents(*from.student_component_);
  } else {
    student_component_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:acu.planning_internal.AutoTuningTrainingData)
}

void AutoTuningTrainingData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&teacher_component_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&student_component_) -
      reinterpret_cast<char*>(&teacher_component_)) + sizeof(student_component_));
}

AutoTuningTrainingData::~AutoTuningTrainingData() {
  // @@protoc_insertion_point(destructor:acu.planning_internal.AutoTuningTrainingData)
  SharedDtor();
}

void AutoTuningTrainingData::SharedDtor() {
  if (this != internal_default_instance()) delete teacher_component_;
  if (this != internal_default_instance()) delete student_component_;
}

void AutoTuningTrainingData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AutoTuningTrainingData::descriptor() {
  ::protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AutoTuningTrainingData& AutoTuningTrainingData::default_instance() {
  ::protobuf_planning_5finternal_5finfo_2eproto::InitDefaultsAutoTuningTrainingData();
  return *internal_default_instance();
}

AutoTuningTrainingData* AutoTuningTrainingData::New(::google::protobuf::Arena* arena) const {
  AutoTuningTrainingData* n = new AutoTuningTrainingData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AutoTuningTrainingData::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(teacher_component_ != NULL);
      teacher_component_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(student_component_ != NULL);
      student_component_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AutoTuningTrainingData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.planning_internal.AutoTuningTrainingData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .acu.planning_internal.CostComponents teacher_component = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_teacher_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.planning_internal.CostComponents student_component = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_student_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.planning_internal.AutoTuningTrainingData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.planning_internal.AutoTuningTrainingData)
  return false;
#undef DO_
}

void AutoTuningTrainingData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.planning_internal.CostComponents teacher_component = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->teacher_component_, output);
  }

  // optional .acu.planning_internal.CostComponents student_component = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->student_component_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.planning_internal.AutoTuningTrainingData)
}

::google::protobuf::uint8* AutoTuningTrainingData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.planning_internal.AutoTuningTrainingData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.planning_internal.CostComponents teacher_component = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->teacher_component_, deterministic, target);
  }

  // optional .acu.planning_internal.CostComponents student_component = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->student_component_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.planning_internal.AutoTuningTrainingData)
  return target;
}

size_t AutoTuningTrainingData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.planning_internal.AutoTuningTrainingData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .acu.planning_internal.CostComponents teacher_component = 1;
    if (has_teacher_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->teacher_component_);
    }

    // optional .acu.planning_internal.CostComponents student_component = 2;
    if (has_student_component()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->student_component_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AutoTuningTrainingData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.planning_internal.AutoTuningTrainingData)
  GOOGLE_DCHECK_NE(&from, this);
  const AutoTuningTrainingData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AutoTuningTrainingData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.planning_internal.AutoTuningTrainingData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.planning_internal.AutoTuningTrainingData)
    MergeFrom(*source);
  }
}

void AutoTuningTrainingData::MergeFrom(const AutoTuningTrainingData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.planning_internal.AutoTuningTrainingData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_teacher_component()->::acu::planning_internal::CostComponents::MergeFrom(from.teacher_component());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_student_component()->::acu::planning_internal::CostComponents::MergeFrom(from.student_component());
    }
  }
}

void AutoTuningTrainingData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.planning_internal.AutoTuningTrainingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AutoTuningTrainingData::CopyFrom(const AutoTuningTrainingData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.planning_internal.AutoTuningTrainingData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoTuningTrainingData::IsInitialized() const {
  return true;
}

void AutoTuningTrainingData::Swap(AutoTuningTrainingData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AutoTuningTrainingData::InternalSwap(AutoTuningTrainingData* other) {
  using std::swap;
  swap(teacher_component_, other->teacher_component_);
  swap(student_component_, other->student_component_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AutoTuningTrainingData::GetMetadata() const {
  protobuf_planning_5finternal_5finfo_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_planning_5finternal_5finfo_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning_internal
}  // namespace acu

// @@protoc_insertion_point(global_scope)
