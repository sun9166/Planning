// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception_objects_msgs.proto

#include "perception_objects_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class ObstacleCellDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObstacleCell>
      _instance;
} _ObstacleCell_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
class PerceptionObjectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerceptionObjects>
      _instance;
} _PerceptionObjects_default_instance_;
namespace protobuf_perception_5fobjects_5fmsgs_2eproto {
void InitDefaultsObstacleCellImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ObstacleCell_default_instance_;
    new (ptr) ::ObstacleCell();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ObstacleCell::InitAsDefaultInstance();
}

void InitDefaultsObstacleCell() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObstacleCellImpl);
}

void InitDefaultsObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObstacleCell();
  {
    void* ptr = &::_Object_default_instance_;
    new (ptr) ::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Object::InitAsDefaultInstance();
}

void InitDefaultsObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectImpl);
}

void InitDefaultsPerceptionObjectsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObject();
  protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObstacleCell();
  {
    void* ptr = &::_PerceptionObjects_default_instance_;
    new (ptr) ::PerceptionObjects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PerceptionObjects::InitAsDefaultInstance();
}

void InitDefaultsPerceptionObjects() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPerceptionObjectsImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, idc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, xg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ObstacleCell, yg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, vxrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, vyrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, xabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, yabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, vxabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, vyabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, is_ultra_static_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, moving_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Object, cells_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PerceptionObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PerceptionObjects, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PerceptionObjects, objs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PerceptionObjects, cells_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ObstacleCell)},
  { 10, -1, sizeof(::Object)},
  { 38, -1, sizeof(::PerceptionObjects)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ObstacleCell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Object_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PerceptionObjects_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "perception_objects_msgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035perception_objects_msgs.proto\032\021common_"
      "msgs.proto\"I\n\014ObstacleCell\022\013\n\003idc\030\001 \001(\005\022"
      "\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\n\n\002xg\030\004 \001(\001\022\n\n\002yg\030"
      "\005 \001(\001\"\330\005\n\006Object\022\n\n\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022"
      "\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\022\r\n\005vxrel\030\005 \001(\002\022\r\n\005"
      "vyrel\030\006 \001(\002\022\014\n\004xabs\030\007 \001(\001\022\014\n\004yabs\030\010 \001(\001\022"
      "\r\n\005vxabs\030\t \001(\002\022\r\n\005vyabs\030\n \001(\002\022\r\n\005width\030\013"
      " \001(\002\022\016\n\006length\030\014 \001(\002\022\016\n\006height\030\r \001(\002\022\r\n\005"
      "speed\030\016 \001(\002\022\024\n\014acceleration\030\017 \001(\002\022\017\n\007hea"
      "ding\030\020 \001(\002\022 \n\004type\030\021 \001(\0162\022.Object.Object"
      "Type\022\016\n\006source\030\022 \001(\r\022\022\n\nconfidence\030\023 \001(\002"
      "\022\013\n\003age\030\024 \001(\r\022.\n\017is_ultra_static\030\025 \001(\0162\025"
      ".Object.IsUltraStatic\022+\n\rmoving_status\030\026"
      " \001(\0162\024.Object.MovingStatus\022\034\n\005cells\030\027 \003("
      "\0132\r.ObstacleCell\"\231\001\n\nObjectType\022\014\n\010CAR_T"
      "YPE\020\000\022\016\n\nTRUCK_TYPE\020\001\022\023\n\017PEDESTRIAN_TYPE"
      "\020\002\022\020\n\014CYCLIST_TYPE\020\003\022\020\n\014UNKNOWN_TYPE\020\004\022\030"
      "\n\024UNKNOWN_MOVABLE_TYPE\020\005\022\032\n\026UNKNOWN_UNMO"
      "VABLE_TYPE\020\006\"1\n\rIsUltraStatic\022\013\n\007INVALID"
      "\020\000\022\t\n\005FALSE\020\001\022\010\n\004TRUE\020\002\"G\n\014MovingStatus\022"
      "\022\n\016INVALID_STATUS\020\000\022\n\n\006MOVING\020\001\022\n\n\006STATI"
      "C\020\002\022\013\n\007MOVABLE\020\003\"m\n\021PerceptionObjects\022#\n"
      "\006header\030\001 \001(\0132\023.common_msgs.Header\022\025\n\004ob"
      "js\030\002 \003(\0132\007.Object\022\034\n\005cells\030\003 \003(\0132\r.Obsta"
      "cleCellb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 975);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "perception_objects_msgs.proto", &protobuf_RegisterTypes);
  ::protobuf_common_5fmsgs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_perception_5fobjects_5fmsgs_2eproto
const ::google::protobuf::EnumDescriptor* Object_ObjectType_descriptor() {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_enum_descriptors[0];
}
bool Object_ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Object_ObjectType Object::CAR_TYPE;
const Object_ObjectType Object::TRUCK_TYPE;
const Object_ObjectType Object::PEDESTRIAN_TYPE;
const Object_ObjectType Object::CYCLIST_TYPE;
const Object_ObjectType Object::UNKNOWN_TYPE;
const Object_ObjectType Object::UNKNOWN_MOVABLE_TYPE;
const Object_ObjectType Object::UNKNOWN_UNMOVABLE_TYPE;
const Object_ObjectType Object::ObjectType_MIN;
const Object_ObjectType Object::ObjectType_MAX;
const int Object::ObjectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Object_IsUltraStatic_descriptor() {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_enum_descriptors[1];
}
bool Object_IsUltraStatic_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Object_IsUltraStatic Object::INVALID;
const Object_IsUltraStatic Object::FALSE;
const Object_IsUltraStatic Object::TRUE;
const Object_IsUltraStatic Object::IsUltraStatic_MIN;
const Object_IsUltraStatic Object::IsUltraStatic_MAX;
const int Object::IsUltraStatic_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Object_MovingStatus_descriptor() {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_enum_descriptors[2];
}
bool Object_MovingStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Object_MovingStatus Object::INVALID_STATUS;
const Object_MovingStatus Object::MOVING;
const Object_MovingStatus Object::STATIC;
const Object_MovingStatus Object::MOVABLE;
const Object_MovingStatus Object::MovingStatus_MIN;
const Object_MovingStatus Object::MovingStatus_MAX;
const int Object::MovingStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ObstacleCell::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObstacleCell::kIdcFieldNumber;
const int ObstacleCell::kXFieldNumber;
const int ObstacleCell::kYFieldNumber;
const int ObstacleCell::kXgFieldNumber;
const int ObstacleCell::kYgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObstacleCell::ObstacleCell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObstacleCell();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ObstacleCell)
}
ObstacleCell::ObstacleCell(const ObstacleCell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&idc_) -
    reinterpret_cast<char*>(&x_)) + sizeof(idc_));
  // @@protoc_insertion_point(copy_constructor:ObstacleCell)
}

void ObstacleCell::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idc_) -
      reinterpret_cast<char*>(&x_)) + sizeof(idc_));
  _cached_size_ = 0;
}

ObstacleCell::~ObstacleCell() {
  // @@protoc_insertion_point(destructor:ObstacleCell)
  SharedDtor();
}

void ObstacleCell::SharedDtor() {
}

void ObstacleCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObstacleCell::descriptor() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObstacleCell& ObstacleCell::default_instance() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObstacleCell();
  return *internal_default_instance();
}

ObstacleCell* ObstacleCell::New(::google::protobuf::Arena* arena) const {
  ObstacleCell* n = new ObstacleCell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObstacleCell::Clear() {
// @@protoc_insertion_point(message_clear_start:ObstacleCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idc_) -
      reinterpret_cast<char*>(&x_)) + sizeof(idc_));
  _internal_metadata_.Clear();
}

bool ObstacleCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ObstacleCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 idc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double xg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ObstacleCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ObstacleCell)
  return false;
#undef DO_
}

void ObstacleCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ObstacleCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 idc = 1;
  if (this->idc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idc(), output);
  }

  // double x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->x(), output);
  }

  // double y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->y(), output);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->xg(), output);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ObstacleCell)
}

::google::protobuf::uint8* ObstacleCell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ObstacleCell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 idc = 1;
  if (this->idc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idc(), target);
  }

  // double x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->x(), target);
  }

  // double y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->y(), target);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->xg(), target);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ObstacleCell)
  return target;
}

size_t ObstacleCell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ObstacleCell)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 2;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double xg = 4;
  if (this->xg() != 0) {
    total_size += 1 + 8;
  }

  // double yg = 5;
  if (this->yg() != 0) {
    total_size += 1 + 8;
  }

  // int32 idc = 1;
  if (this->idc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObstacleCell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ObstacleCell)
  GOOGLE_DCHECK_NE(&from, this);
  const ObstacleCell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObstacleCell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ObstacleCell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ObstacleCell)
    MergeFrom(*source);
  }
}

void ObstacleCell::MergeFrom(const ObstacleCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ObstacleCell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.xg() != 0) {
    set_xg(from.xg());
  }
  if (from.yg() != 0) {
    set_yg(from.yg());
  }
  if (from.idc() != 0) {
    set_idc(from.idc());
  }
}

void ObstacleCell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ObstacleCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObstacleCell::CopyFrom(const ObstacleCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ObstacleCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObstacleCell::IsInitialized() const {
  return true;
}

void ObstacleCell::Swap(ObstacleCell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObstacleCell::InternalSwap(ObstacleCell* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(xg_, other->xg_);
  swap(yg_, other->yg_);
  swap(idc_, other->idc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObstacleCell::GetMetadata() const {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kIdFieldNumber;
const int Object::kXFieldNumber;
const int Object::kYFieldNumber;
const int Object::kZFieldNumber;
const int Object::kVxrelFieldNumber;
const int Object::kVyrelFieldNumber;
const int Object::kXabsFieldNumber;
const int Object::kYabsFieldNumber;
const int Object::kVxabsFieldNumber;
const int Object::kVyabsFieldNumber;
const int Object::kWidthFieldNumber;
const int Object::kLengthFieldNumber;
const int Object::kHeightFieldNumber;
const int Object::kSpeedFieldNumber;
const int Object::kAccelerationFieldNumber;
const int Object::kHeadingFieldNumber;
const int Object::kTypeFieldNumber;
const int Object::kSourceFieldNumber;
const int Object::kConfidenceFieldNumber;
const int Object::kAgeFieldNumber;
const int Object::kIsUltraStaticFieldNumber;
const int Object::kMovingStatusFieldNumber;
const int Object::kCellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cells_(from.cells_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&moving_status_) -
    reinterpret_cast<char*>(&id_)) + sizeof(moving_status_));
  // @@protoc_insertion_point(copy_constructor:Object)
}

void Object::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(moving_status_));
  _cached_size_ = 0;
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:Object)
  SharedDtor();
}

void Object::SharedDtor() {
}

void Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObject();
  return *internal_default_instance();
}

Object* Object::New(::google::protobuf::Arena* arena) const {
  Object* n = new Object;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_status_) -
      reinterpret_cast<char*>(&id_)) + sizeof(moving_status_));
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Object)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vxrel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vxrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vyrel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vyrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double xabs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yabs = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vxabs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vxabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vyabs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vyabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float acceleration = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float heading = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Object.ObjectType type = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::Object_ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 age = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Object.IsUltraStatic is_ultra_static = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_is_ultra_static(static_cast< ::Object_IsUltraStatic >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Object.MovingStatus moving_status = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_moving_status(static_cast< ::Object_MovingStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ObstacleCell cells = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->z(), output);
  }

  // float vxrel = 5;
  if (this->vxrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->vxrel(), output);
  }

  // float vyrel = 6;
  if (this->vyrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->vyrel(), output);
  }

  // double xabs = 7;
  if (this->xabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->xabs(), output);
  }

  // double yabs = 8;
  if (this->yabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->yabs(), output);
  }

  // float vxabs = 9;
  if (this->vxabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->vxabs(), output);
  }

  // float vyabs = 10;
  if (this->vyabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->vyabs(), output);
  }

  // float width = 11;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->width(), output);
  }

  // float length = 12;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->length(), output);
  }

  // float height = 13;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->height(), output);
  }

  // float speed = 14;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->speed(), output);
  }

  // float acceleration = 15;
  if (this->acceleration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->acceleration(), output);
  }

  // float heading = 16;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->heading(), output);
  }

  // .Object.ObjectType type = 17;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->type(), output);
  }

  // uint32 source = 18;
  if (this->source() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->source(), output);
  }

  // float confidence = 19;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->confidence(), output);
  }

  // uint32 age = 20;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->age(), output);
  }

  // .Object.IsUltraStatic is_ultra_static = 21;
  if (this->is_ultra_static() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      21, this->is_ultra_static(), output);
  }

  // .Object.MovingStatus moving_status = 22;
  if (this->moving_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->moving_status(), output);
  }

  // repeated .ObstacleCell cells = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->cells(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->z(), target);
  }

  // float vxrel = 5;
  if (this->vxrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->vxrel(), target);
  }

  // float vyrel = 6;
  if (this->vyrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->vyrel(), target);
  }

  // double xabs = 7;
  if (this->xabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->xabs(), target);
  }

  // double yabs = 8;
  if (this->yabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->yabs(), target);
  }

  // float vxabs = 9;
  if (this->vxabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->vxabs(), target);
  }

  // float vyabs = 10;
  if (this->vyabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->vyabs(), target);
  }

  // float width = 11;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->width(), target);
  }

  // float length = 12;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->length(), target);
  }

  // float height = 13;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->height(), target);
  }

  // float speed = 14;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->speed(), target);
  }

  // float acceleration = 15;
  if (this->acceleration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->acceleration(), target);
  }

  // float heading = 16;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->heading(), target);
  }

  // .Object.ObjectType type = 17;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->type(), target);
  }

  // uint32 source = 18;
  if (this->source() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->source(), target);
  }

  // float confidence = 19;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->confidence(), target);
  }

  // uint32 age = 20;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->age(), target);
  }

  // .Object.IsUltraStatic is_ultra_static = 21;
  if (this->is_ultra_static() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      21, this->is_ultra_static(), target);
  }

  // .Object.MovingStatus moving_status = 22;
  if (this->moving_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->moving_status(), target);
  }

  // repeated .ObstacleCell cells = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->cells(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Object)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ObstacleCell cells = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 4;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float vxrel = 5;
  if (this->vxrel() != 0) {
    total_size += 1 + 4;
  }

  // float vyrel = 6;
  if (this->vyrel() != 0) {
    total_size += 1 + 4;
  }

  // double xabs = 7;
  if (this->xabs() != 0) {
    total_size += 1 + 8;
  }

  // double yabs = 8;
  if (this->yabs() != 0) {
    total_size += 1 + 8;
  }

  // float vxabs = 9;
  if (this->vxabs() != 0) {
    total_size += 1 + 4;
  }

  // float vyabs = 10;
  if (this->vyabs() != 0) {
    total_size += 1 + 4;
  }

  // float width = 11;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float length = 12;
  if (this->length() != 0) {
    total_size += 1 + 4;
  }

  // float height = 13;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float speed = 14;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // float acceleration = 15;
  if (this->acceleration() != 0) {
    total_size += 1 + 4;
  }

  // float heading = 16;
  if (this->heading() != 0) {
    total_size += 2 + 4;
  }

  // .Object.ObjectType type = 17;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 source = 18;
  if (this->source() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  // float confidence = 19;
  if (this->confidence() != 0) {
    total_size += 2 + 4;
  }

  // uint32 age = 20;
  if (this->age() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->age());
  }

  // .Object.IsUltraStatic is_ultra_static = 21;
  if (this->is_ultra_static() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->is_ultra_static());
  }

  // .Object.MovingStatus moving_status = 22;
  if (this->moving_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->moving_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.vxrel() != 0) {
    set_vxrel(from.vxrel());
  }
  if (from.vyrel() != 0) {
    set_vyrel(from.vyrel());
  }
  if (from.xabs() != 0) {
    set_xabs(from.xabs());
  }
  if (from.yabs() != 0) {
    set_yabs(from.yabs());
  }
  if (from.vxabs() != 0) {
    set_vxabs(from.vxabs());
  }
  if (from.vyabs() != 0) {
    set_vyabs(from.vyabs());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.acceleration() != 0) {
    set_acceleration(from.acceleration());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.source() != 0) {
    set_source(from.source());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.is_ultra_static() != 0) {
    set_is_ultra_static(from.is_ultra_static());
  }
  if (from.moving_status() != 0) {
    set_moving_status(from.moving_status());
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  cells_.InternalSwap(&other->cells_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(vxrel_, other->vxrel_);
  swap(vyrel_, other->vyrel_);
  swap(xabs_, other->xabs_);
  swap(yabs_, other->yabs_);
  swap(vxabs_, other->vxabs_);
  swap(vyabs_, other->vyabs_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(height_, other->height_);
  swap(speed_, other->speed_);
  swap(acceleration_, other->acceleration_);
  swap(heading_, other->heading_);
  swap(type_, other->type_);
  swap(source_, other->source_);
  swap(confidence_, other->confidence_);
  swap(age_, other->age_);
  swap(is_ultra_static_, other->is_ultra_static_);
  swap(moving_status_, other->moving_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerceptionObjects::InitAsDefaultInstance() {
  ::_PerceptionObjects_default_instance_._instance.get_mutable()->header_ = const_cast< ::common_msgs::Header*>(
      ::common_msgs::Header::internal_default_instance());
}
void PerceptionObjects::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionObjects::kHeaderFieldNumber;
const int PerceptionObjects::kObjsFieldNumber;
const int PerceptionObjects::kCellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionObjects::PerceptionObjects()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsPerceptionObjects();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PerceptionObjects)
}
PerceptionObjects::PerceptionObjects(const PerceptionObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objs_(from.objs_),
      cells_(from.cells_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::common_msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PerceptionObjects)
}

void PerceptionObjects::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

PerceptionObjects::~PerceptionObjects() {
  // @@protoc_insertion_point(destructor:PerceptionObjects)
  SharedDtor();
}

void PerceptionObjects::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void PerceptionObjects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PerceptionObjects::descriptor() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionObjects& PerceptionObjects::default_instance() {
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsPerceptionObjects();
  return *internal_default_instance();
}

PerceptionObjects* PerceptionObjects::New(::google::protobuf::Arena* arena) const {
  PerceptionObjects* n = new PerceptionObjects;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PerceptionObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:PerceptionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objs_.Clear();
  cells_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool PerceptionObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PerceptionObjects)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Object objs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ObstacleCell cells = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PerceptionObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PerceptionObjects)
  return false;
#undef DO_
}

void PerceptionObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PerceptionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .Object objs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objs(static_cast<int>(i)), output);
  }

  // repeated .ObstacleCell cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cells(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PerceptionObjects)
}

::google::protobuf::uint8* PerceptionObjects::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PerceptionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .Object objs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->objs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ObstacleCell cells = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->cells(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PerceptionObjects)
  return target;
}

size_t PerceptionObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PerceptionObjects)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Object objs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->objs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objs(static_cast<int>(i)));
    }
  }

  // repeated .ObstacleCell cells = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PerceptionObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PerceptionObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionObjects* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionObjects>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PerceptionObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PerceptionObjects)
    MergeFrom(*source);
  }
}

void PerceptionObjects::MergeFrom(const PerceptionObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PerceptionObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objs_.MergeFrom(from.objs_);
  cells_.MergeFrom(from.cells_);
  if (from.has_header()) {
    mutable_header()->::common_msgs::Header::MergeFrom(from.header());
  }
}

void PerceptionObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PerceptionObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionObjects::CopyFrom(const PerceptionObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PerceptionObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionObjects::IsInitialized() const {
  return true;
}

void PerceptionObjects::Swap(PerceptionObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionObjects::InternalSwap(PerceptionObjects* other) {
  using std::swap;
  objs_.InternalSwap(&other->objs_);
  cells_.InternalSwap(&other->cells_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PerceptionObjects::GetMetadata() const {
  protobuf_perception_5fobjects_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fobjects_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
