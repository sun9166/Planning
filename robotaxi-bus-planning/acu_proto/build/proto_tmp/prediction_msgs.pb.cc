// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction_msgs.proto

#include "prediction_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace prediction_msgs {
class PredictionTrajectoryPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionTrajectoryPoint>
      _instance;
} _PredictionTrajectoryPoint_default_instance_;
class PredictionTrajectoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionTrajectory>
      _instance;
} _PredictionTrajectory_default_instance_;
class PredictionObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionObject>
      _instance;
} _PredictionObject_default_instance_;
class PredictionObjectsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionObjects>
      _instance;
} _PredictionObjects_default_instance_;
}  // namespace prediction_msgs
namespace protobuf_prediction_5fmsgs_2eproto {
void InitDefaultsPredictionTrajectoryPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::prediction_msgs::_PredictionTrajectoryPoint_default_instance_;
    new (ptr) ::prediction_msgs::PredictionTrajectoryPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prediction_msgs::PredictionTrajectoryPoint::InitAsDefaultInstance();
}

void InitDefaultsPredictionTrajectoryPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionTrajectoryPointImpl);
}

void InitDefaultsPredictionTrajectoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectoryPoint();
  {
    void* ptr = &::prediction_msgs::_PredictionTrajectory_default_instance_;
    new (ptr) ::prediction_msgs::PredictionTrajectory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prediction_msgs::PredictionTrajectory::InitAsDefaultInstance();
}

void InitDefaultsPredictionTrajectory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionTrajectoryImpl);
}

void InitDefaultsPredictionObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectory();
  {
    void* ptr = &::prediction_msgs::_PredictionObject_default_instance_;
    new (ptr) ::prediction_msgs::PredictionObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prediction_msgs::PredictionObject::InitAsDefaultInstance();
}

void InitDefaultsPredictionObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionObjectImpl);
}

void InitDefaultsPredictionObjectsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsPerceptionObjects();
  protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObject();
  {
    void* ptr = &::prediction_msgs::_PredictionObjects_default_instance_;
    new (ptr) ::prediction_msgs::PredictionObjects();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prediction_msgs::PredictionObjects::InitAsDefaultInstance();
}

void InitDefaultsPredictionObjects() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionObjectsImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, xg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, yg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, globalangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectoryPoint, lane_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, xg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, yg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, globalangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, probability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, intentbylane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionTrajectory, lane_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, predicted_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, is_static_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, is_ultra_static_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, xg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, yg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, globalangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, current_lane_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObject, trajectories_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, perception_objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, prediction_obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prediction_msgs::PredictionObjects, end_timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::prediction_msgs::PredictionTrajectoryPoint)},
  { 15, -1, sizeof(::prediction_msgs::PredictionTrajectory)},
  { 30, -1, sizeof(::prediction_msgs::PredictionObject)},
  { 48, -1, sizeof(::prediction_msgs::PredictionObjects)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::prediction_msgs::_PredictionTrajectoryPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prediction_msgs::_PredictionTrajectory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prediction_msgs::_PredictionObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::prediction_msgs::_PredictionObjects_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "prediction_msgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025prediction_msgs.proto\022\017prediction_msgs"
      "\032\021common_msgs.proto\032\035perception_objects_"
      "msgs.proto\"\237\001\n\031PredictionTrajectoryPoint"
      "\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\r\n\005angle\030\003 \001(\002\022\n\n"
      "\002xg\030\004 \001(\001\022\n\n\002yg\030\005 \001(\001\022\023\n\013globalangle\030\006 \001"
      "(\002\022\t\n\001v\030\007 \001(\002\022\t\n\001a\030\010 \001(\002\022\t\n\001t\030\t \001(\002\022\017\n\007l"
      "ane_id\030\n \001(\t\"\341\001\n\024PredictionTrajectory\022\t\n"
      "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\r\n\005angle\030\003 \001(\002\022\n\n\002xg"
      "\030\004 \001(\001\022\n\n\002yg\030\005 \001(\001\022\023\n\013globalangle\030\006 \001(\002\022"
      "\023\n\013probability\030\007 \001(\002\022\024\n\014intentbylane\030\010 \001"
      "(\t\022:\n\006points\030\t \003(\0132*.prediction_msgs.Pre"
      "dictionTrajectoryPoint\022\020\n\010lane_ids\030\n \003(\t"
      "\"\251\002\n\020PredictionObject\022\021\n\ttimestamp\030\001 \001(\001"
      "\022\n\n\002id\030\002 \001(\r\022\014\n\004type\030\003 \001(\t\022\020\n\010priority\030\004"
      " \001(\r\022\030\n\020predicted_period\030\005 \001(\002\022\021\n\tis_sta"
      "tic\030\006 \001(\010\022\027\n\017is_ultra_static\030\007 \001(\005\022\n\n\002xg"
      "\030\010 \001(\001\022\n\n\002yg\030\t \001(\001\022\023\n\013globalangle\030\n \001(\002\022"
      "\r\n\005speed\030\013 \001(\002\022\027\n\017current_lane_id\030\014 \001(\t\022"
      ";\n\014trajectories\030\r \003(\0132%.prediction_msgs."
      "PredictionTrajectory\"\330\001\n\021PredictionObjec"
      "ts\022#\n\006header\030\001 \001(\0132\023.common_msgs.Header\022"
      ".\n\022perception_objects\030\002 \001(\0132\022.Perception"
      "Objects\022>\n\023prediction_obstacle\030\003 \003(\0132!.p"
      "rediction_msgs.PredictionObject\022\027\n\017start"
      "_timestamp\030\004 \001(\001\022\025\n\rend_timestamp\030\005 \001(\001b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1007);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prediction_msgs.proto", &protobuf_RegisterTypes);
  ::protobuf_common_5fmsgs_2eproto::AddDescriptors();
  ::protobuf_perception_5fobjects_5fmsgs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_prediction_5fmsgs_2eproto
namespace prediction_msgs {

// ===================================================================

void PredictionTrajectoryPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionTrajectoryPoint::kXFieldNumber;
const int PredictionTrajectoryPoint::kYFieldNumber;
const int PredictionTrajectoryPoint::kAngleFieldNumber;
const int PredictionTrajectoryPoint::kXgFieldNumber;
const int PredictionTrajectoryPoint::kYgFieldNumber;
const int PredictionTrajectoryPoint::kGlobalangleFieldNumber;
const int PredictionTrajectoryPoint::kVFieldNumber;
const int PredictionTrajectoryPoint::kAFieldNumber;
const int PredictionTrajectoryPoint::kTFieldNumber;
const int PredictionTrajectoryPoint::kLaneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionTrajectoryPoint::PredictionTrajectoryPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectoryPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prediction_msgs.PredictionTrajectoryPoint)
}
PredictionTrajectoryPoint::PredictionTrajectoryPoint(const PredictionTrajectoryPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lane_id().size() > 0) {
    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&t_) -
    reinterpret_cast<char*>(&x_)) + sizeof(t_));
  // @@protoc_insertion_point(copy_constructor:prediction_msgs.PredictionTrajectoryPoint)
}

void PredictionTrajectoryPoint::SharedCtor() {
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_) -
      reinterpret_cast<char*>(&x_)) + sizeof(t_));
  _cached_size_ = 0;
}

PredictionTrajectoryPoint::~PredictionTrajectoryPoint() {
  // @@protoc_insertion_point(destructor:prediction_msgs.PredictionTrajectoryPoint)
  SharedDtor();
}

void PredictionTrajectoryPoint::SharedDtor() {
  lane_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PredictionTrajectoryPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionTrajectoryPoint::descriptor() {
  ::protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionTrajectoryPoint& PredictionTrajectoryPoint::default_instance() {
  ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectoryPoint();
  return *internal_default_instance();
}

PredictionTrajectoryPoint* PredictionTrajectoryPoint::New(::google::protobuf::Arena* arena) const {
  PredictionTrajectoryPoint* n = new PredictionTrajectoryPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionTrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:prediction_msgs.PredictionTrajectoryPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_) -
      reinterpret_cast<char*>(&x_)) + sizeof(t_));
  _internal_metadata_.Clear();
}

bool PredictionTrajectoryPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prediction_msgs.PredictionTrajectoryPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double xg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float globalangle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &globalangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float v = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float t = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lane_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lane_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lane_id().data(), static_cast<int>(this->lane_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prediction_msgs.PredictionTrajectoryPoint.lane_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prediction_msgs.PredictionTrajectoryPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prediction_msgs.PredictionTrajectoryPoint)
  return false;
#undef DO_
}

void PredictionTrajectoryPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prediction_msgs.PredictionTrajectoryPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->xg(), output);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yg(), output);
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->globalangle(), output);
  }

  // float v = 7;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->v(), output);
  }

  // float a = 8;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->a(), output);
  }

  // float t = 9;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->t(), output);
  }

  // string lane_id = 10;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectoryPoint.lane_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->lane_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prediction_msgs.PredictionTrajectoryPoint)
}

::google::protobuf::uint8* PredictionTrajectoryPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prediction_msgs.PredictionTrajectoryPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->xg(), target);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yg(), target);
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->globalangle(), target);
  }

  // float v = 7;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->v(), target);
  }

  // float a = 8;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->a(), target);
  }

  // float t = 9;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->t(), target);
  }

  // string lane_id = 10;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectoryPoint.lane_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->lane_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prediction_msgs.PredictionTrajectoryPoint)
  return target;
}

size_t PredictionTrajectoryPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prediction_msgs.PredictionTrajectoryPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lane_id = 10;
  if (this->lane_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lane_id());
  }

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // double xg = 4;
  if (this->xg() != 0) {
    total_size += 1 + 8;
  }

  // float angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    total_size += 1 + 4;
  }

  // double yg = 5;
  if (this->yg() != 0) {
    total_size += 1 + 8;
  }

  // float v = 7;
  if (this->v() != 0) {
    total_size += 1 + 4;
  }

  // float a = 8;
  if (this->a() != 0) {
    total_size += 1 + 4;
  }

  // float t = 9;
  if (this->t() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionTrajectoryPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prediction_msgs.PredictionTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionTrajectoryPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionTrajectoryPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prediction_msgs.PredictionTrajectoryPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prediction_msgs.PredictionTrajectoryPoint)
    MergeFrom(*source);
  }
}

void PredictionTrajectoryPoint::MergeFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prediction_msgs.PredictionTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_id().size() > 0) {

    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.xg() != 0) {
    set_xg(from.xg());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.globalangle() != 0) {
    set_globalangle(from.globalangle());
  }
  if (from.yg() != 0) {
    set_yg(from.yg());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.t() != 0) {
    set_t(from.t());
  }
}

void PredictionTrajectoryPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prediction_msgs.PredictionTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionTrajectoryPoint::CopyFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prediction_msgs.PredictionTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionTrajectoryPoint::IsInitialized() const {
  return true;
}

void PredictionTrajectoryPoint::Swap(PredictionTrajectoryPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionTrajectoryPoint::InternalSwap(PredictionTrajectoryPoint* other) {
  using std::swap;
  lane_id_.Swap(&other->lane_id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(xg_, other->xg_);
  swap(angle_, other->angle_);
  swap(globalangle_, other->globalangle_);
  swap(yg_, other->yg_);
  swap(v_, other->v_);
  swap(a_, other->a_);
  swap(t_, other->t_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionTrajectoryPoint::GetMetadata() const {
  protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionTrajectory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionTrajectory::kXFieldNumber;
const int PredictionTrajectory::kYFieldNumber;
const int PredictionTrajectory::kAngleFieldNumber;
const int PredictionTrajectory::kXgFieldNumber;
const int PredictionTrajectory::kYgFieldNumber;
const int PredictionTrajectory::kGlobalangleFieldNumber;
const int PredictionTrajectory::kProbabilityFieldNumber;
const int PredictionTrajectory::kIntentbylaneFieldNumber;
const int PredictionTrajectory::kPointsFieldNumber;
const int PredictionTrajectory::kLaneIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionTrajectory::PredictionTrajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prediction_msgs.PredictionTrajectory)
}
PredictionTrajectory::PredictionTrajectory(const PredictionTrajectory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_),
      lane_ids_(from.lane_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  intentbylane_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.intentbylane().size() > 0) {
    intentbylane_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intentbylane_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&probability_) -
    reinterpret_cast<char*>(&x_)) + sizeof(probability_));
  // @@protoc_insertion_point(copy_constructor:prediction_msgs.PredictionTrajectory)
}

void PredictionTrajectory::SharedCtor() {
  intentbylane_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&x_)) + sizeof(probability_));
  _cached_size_ = 0;
}

PredictionTrajectory::~PredictionTrajectory() {
  // @@protoc_insertion_point(destructor:prediction_msgs.PredictionTrajectory)
  SharedDtor();
}

void PredictionTrajectory::SharedDtor() {
  intentbylane_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PredictionTrajectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionTrajectory::descriptor() {
  ::protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionTrajectory& PredictionTrajectory::default_instance() {
  ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectory();
  return *internal_default_instance();
}

PredictionTrajectory* PredictionTrajectory::New(::google::protobuf::Arena* arena) const {
  PredictionTrajectory* n = new PredictionTrajectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionTrajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:prediction_msgs.PredictionTrajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  lane_ids_.Clear();
  intentbylane_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&probability_) -
      reinterpret_cast<char*>(&x_)) + sizeof(probability_));
  _internal_metadata_.Clear();
}

bool PredictionTrajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prediction_msgs.PredictionTrajectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double xg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float globalangle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &globalangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float probability = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &probability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string intentbylane = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intentbylane()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intentbylane().data(), static_cast<int>(this->intentbylane().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prediction_msgs.PredictionTrajectory.intentbylane"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string lane_ids = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lane_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lane_ids(this->lane_ids_size() - 1).data(),
            static_cast<int>(this->lane_ids(this->lane_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prediction_msgs.PredictionTrajectory.lane_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prediction_msgs.PredictionTrajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prediction_msgs.PredictionTrajectory)
  return false;
#undef DO_
}

void PredictionTrajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prediction_msgs.PredictionTrajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->xg(), output);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->yg(), output);
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->globalangle(), output);
  }

  // float probability = 7;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->probability(), output);
  }

  // string intentbylane = 8;
  if (this->intentbylane().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intentbylane().data(), static_cast<int>(this->intentbylane().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectory.intentbylane");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->intentbylane(), output);
  }

  // repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->points(static_cast<int>(i)), output);
  }

  // repeated string lane_ids = 10;
  for (int i = 0, n = this->lane_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_ids(i).data(), static_cast<int>(this->lane_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectory.lane_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->lane_ids(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prediction_msgs.PredictionTrajectory)
}

::google::protobuf::uint8* PredictionTrajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prediction_msgs.PredictionTrajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // double xg = 4;
  if (this->xg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->xg(), target);
  }

  // double yg = 5;
  if (this->yg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->yg(), target);
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->globalangle(), target);
  }

  // float probability = 7;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->probability(), target);
  }

  // string intentbylane = 8;
  if (this->intentbylane().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intentbylane().data(), static_cast<int>(this->intentbylane().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectory.intentbylane");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->intentbylane(), target);
  }

  // repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->points(static_cast<int>(i)), deterministic, target);
  }

  // repeated string lane_ids = 10;
  for (int i = 0, n = this->lane_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_ids(i).data(), static_cast<int>(this->lane_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionTrajectory.lane_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->lane_ids(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prediction_msgs.PredictionTrajectory)
  return target;
}

size_t PredictionTrajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prediction_msgs.PredictionTrajectory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  // repeated string lane_ids = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lane_ids_size());
  for (int i = 0, n = this->lane_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lane_ids(i));
  }

  // string intentbylane = 8;
  if (this->intentbylane().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->intentbylane());
  }

  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // double xg = 4;
  if (this->xg() != 0) {
    total_size += 1 + 8;
  }

  // float angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float globalangle = 6;
  if (this->globalangle() != 0) {
    total_size += 1 + 4;
  }

  // double yg = 5;
  if (this->yg() != 0) {
    total_size += 1 + 8;
  }

  // float probability = 7;
  if (this->probability() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionTrajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prediction_msgs.PredictionTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionTrajectory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionTrajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prediction_msgs.PredictionTrajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prediction_msgs.PredictionTrajectory)
    MergeFrom(*source);
  }
}

void PredictionTrajectory::MergeFrom(const PredictionTrajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prediction_msgs.PredictionTrajectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  lane_ids_.MergeFrom(from.lane_ids_);
  if (from.intentbylane().size() > 0) {

    intentbylane_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intentbylane_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.xg() != 0) {
    set_xg(from.xg());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.globalangle() != 0) {
    set_globalangle(from.globalangle());
  }
  if (from.yg() != 0) {
    set_yg(from.yg());
  }
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void PredictionTrajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prediction_msgs.PredictionTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionTrajectory::CopyFrom(const PredictionTrajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prediction_msgs.PredictionTrajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionTrajectory::IsInitialized() const {
  return true;
}

void PredictionTrajectory::Swap(PredictionTrajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionTrajectory::InternalSwap(PredictionTrajectory* other) {
  using std::swap;
  points_.InternalSwap(&other->points_);
  lane_ids_.InternalSwap(&other->lane_ids_);
  intentbylane_.Swap(&other->intentbylane_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(xg_, other->xg_);
  swap(angle_, other->angle_);
  swap(globalangle_, other->globalangle_);
  swap(yg_, other->yg_);
  swap(probability_, other->probability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionTrajectory::GetMetadata() const {
  protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionObject::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObject::kTimestampFieldNumber;
const int PredictionObject::kIdFieldNumber;
const int PredictionObject::kTypeFieldNumber;
const int PredictionObject::kPriorityFieldNumber;
const int PredictionObject::kPredictedPeriodFieldNumber;
const int PredictionObject::kIsStaticFieldNumber;
const int PredictionObject::kIsUltraStaticFieldNumber;
const int PredictionObject::kXgFieldNumber;
const int PredictionObject::kYgFieldNumber;
const int PredictionObject::kGlobalangleFieldNumber;
const int PredictionObject::kSpeedFieldNumber;
const int PredictionObject::kCurrentLaneIdFieldNumber;
const int PredictionObject::kTrajectoriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObject::PredictionObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prediction_msgs.PredictionObject)
}
PredictionObject::PredictionObject(const PredictionObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trajectories_(from.trajectories_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  current_lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_lane_id().size() > 0) {
    current_lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_lane_id_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:prediction_msgs.PredictionObject)
}

void PredictionObject::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(speed_));
  _cached_size_ = 0;
}

PredictionObject::~PredictionObject() {
  // @@protoc_insertion_point(destructor:prediction_msgs.PredictionObject)
  SharedDtor();
}

void PredictionObject::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_lane_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PredictionObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionObject::descriptor() {
  ::protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionObject& PredictionObject::default_instance() {
  ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObject();
  return *internal_default_instance();
}

PredictionObject* PredictionObject::New(::google::protobuf::Arena* arena) const {
  PredictionObject* n = new PredictionObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionObject::Clear() {
// @@protoc_insertion_point(message_clear_start:prediction_msgs.PredictionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trajectories_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  current_lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(speed_));
  _internal_metadata_.Clear();
}

bool PredictionObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prediction_msgs.PredictionObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prediction_msgs.PredictionObject.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float predicted_period = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &predicted_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_static = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_static_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_ultra_static = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_ultra_static_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double xg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double yg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float globalangle = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &globalangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_lane_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_lane_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "prediction_msgs.PredictionObject.current_lane_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_trajectories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prediction_msgs.PredictionObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prediction_msgs.PredictionObject)
  return false;
#undef DO_
}

void PredictionObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prediction_msgs.PredictionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp(), output);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionObject.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // uint32 priority = 4;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->priority(), output);
  }

  // float predicted_period = 5;
  if (this->predicted_period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->predicted_period(), output);
  }

  // bool is_static = 6;
  if (this->is_static() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_static(), output);
  }

  // int32 is_ultra_static = 7;
  if (this->is_ultra_static() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_ultra_static(), output);
  }

  // double xg = 8;
  if (this->xg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->xg(), output);
  }

  // double yg = 9;
  if (this->yg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->yg(), output);
  }

  // float globalangle = 10;
  if (this->globalangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->globalangle(), output);
  }

  // float speed = 11;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->speed(), output);
  }

  // string current_lane_id = 12;
  if (this->current_lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionObject.current_lane_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->current_lane_id(), output);
  }

  // repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectories_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->trajectories(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prediction_msgs.PredictionObject)
}

::google::protobuf::uint8* PredictionObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prediction_msgs.PredictionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionObject.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // uint32 priority = 4;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->priority(), target);
  }

  // float predicted_period = 5;
  if (this->predicted_period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->predicted_period(), target);
  }

  // bool is_static = 6;
  if (this->is_static() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_static(), target);
  }

  // int32 is_ultra_static = 7;
  if (this->is_ultra_static() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_ultra_static(), target);
  }

  // double xg = 8;
  if (this->xg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->xg(), target);
  }

  // double yg = 9;
  if (this->yg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->yg(), target);
  }

  // float globalangle = 10;
  if (this->globalangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->globalangle(), target);
  }

  // float speed = 11;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->speed(), target);
  }

  // string current_lane_id = 12;
  if (this->current_lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "prediction_msgs.PredictionObject.current_lane_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->current_lane_id(), target);
  }

  // repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectories_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->trajectories(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prediction_msgs.PredictionObject)
  return target;
}

size_t PredictionObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prediction_msgs.PredictionObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectories_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectories(static_cast<int>(i)));
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string current_lane_id = 12;
  if (this->current_lane_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_lane_id());
  }

  // double timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 + 8;
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 priority = 4;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  // float predicted_period = 5;
  if (this->predicted_period() != 0) {
    total_size += 1 + 4;
  }

  // bool is_static = 6;
  if (this->is_static() != 0) {
    total_size += 1 + 1;
  }

  // double xg = 8;
  if (this->xg() != 0) {
    total_size += 1 + 8;
  }

  // int32 is_ultra_static = 7;
  if (this->is_ultra_static() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_ultra_static());
  }

  // float globalangle = 10;
  if (this->globalangle() != 0) {
    total_size += 1 + 4;
  }

  // double yg = 9;
  if (this->yg() != 0) {
    total_size += 1 + 8;
  }

  // float speed = 11;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prediction_msgs.PredictionObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prediction_msgs.PredictionObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prediction_msgs.PredictionObject)
    MergeFrom(*source);
  }
}

void PredictionObject::MergeFrom(const PredictionObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prediction_msgs.PredictionObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trajectories_.MergeFrom(from.trajectories_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.current_lane_id().size() > 0) {

    current_lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_lane_id_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.predicted_period() != 0) {
    set_predicted_period(from.predicted_period());
  }
  if (from.is_static() != 0) {
    set_is_static(from.is_static());
  }
  if (from.xg() != 0) {
    set_xg(from.xg());
  }
  if (from.is_ultra_static() != 0) {
    set_is_ultra_static(from.is_ultra_static());
  }
  if (from.globalangle() != 0) {
    set_globalangle(from.globalangle());
  }
  if (from.yg() != 0) {
    set_yg(from.yg());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void PredictionObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prediction_msgs.PredictionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObject::CopyFrom(const PredictionObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prediction_msgs.PredictionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObject::IsInitialized() const {
  return true;
}

void PredictionObject::Swap(PredictionObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObject::InternalSwap(PredictionObject* other) {
  using std::swap;
  trajectories_.InternalSwap(&other->trajectories_);
  type_.Swap(&other->type_);
  current_lane_id_.Swap(&other->current_lane_id_);
  swap(timestamp_, other->timestamp_);
  swap(id_, other->id_);
  swap(priority_, other->priority_);
  swap(predicted_period_, other->predicted_period_);
  swap(is_static_, other->is_static_);
  swap(xg_, other->xg_);
  swap(is_ultra_static_, other->is_ultra_static_);
  swap(globalangle_, other->globalangle_);
  swap(yg_, other->yg_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionObject::GetMetadata() const {
  protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionObjects::InitAsDefaultInstance() {
  ::prediction_msgs::_PredictionObjects_default_instance_._instance.get_mutable()->header_ = const_cast< ::common_msgs::Header*>(
      ::common_msgs::Header::internal_default_instance());
  ::prediction_msgs::_PredictionObjects_default_instance_._instance.get_mutable()->perception_objects_ = const_cast< ::PerceptionObjects*>(
      ::PerceptionObjects::internal_default_instance());
}
void PredictionObjects::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void PredictionObjects::clear_perception_objects() {
  if (GetArenaNoVirtual() == NULL && perception_objects_ != NULL) {
    delete perception_objects_;
  }
  perception_objects_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObjects::kHeaderFieldNumber;
const int PredictionObjects::kPerceptionObjectsFieldNumber;
const int PredictionObjects::kPredictionObstacleFieldNumber;
const int PredictionObjects::kStartTimestampFieldNumber;
const int PredictionObjects::kEndTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObjects::PredictionObjects()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObjects();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:prediction_msgs.PredictionObjects)
}
PredictionObjects::PredictionObjects(const PredictionObjects& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      prediction_obstacle_(from.prediction_obstacle_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::common_msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_perception_objects()) {
    perception_objects_ = new ::PerceptionObjects(*from.perception_objects_);
  } else {
    perception_objects_ = NULL;
  }
  ::memcpy(&start_timestamp_, &from.start_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_timestamp_) -
    reinterpret_cast<char*>(&start_timestamp_)) + sizeof(end_timestamp_));
  // @@protoc_insertion_point(copy_constructor:prediction_msgs.PredictionObjects)
}

void PredictionObjects::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_) -
      reinterpret_cast<char*>(&header_)) + sizeof(end_timestamp_));
  _cached_size_ = 0;
}

PredictionObjects::~PredictionObjects() {
  // @@protoc_insertion_point(destructor:prediction_msgs.PredictionObjects)
  SharedDtor();
}

void PredictionObjects::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete perception_objects_;
}

void PredictionObjects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionObjects::descriptor() {
  ::protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionObjects& PredictionObjects::default_instance() {
  ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObjects();
  return *internal_default_instance();
}

PredictionObjects* PredictionObjects::New(::google::protobuf::Arena* arena) const {
  PredictionObjects* n = new PredictionObjects;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:prediction_msgs.PredictionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prediction_obstacle_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && perception_objects_ != NULL) {
    delete perception_objects_;
  }
  perception_objects_ = NULL;
  ::memset(&start_timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_timestamp_) -
      reinterpret_cast<char*>(&start_timestamp_)) + sizeof(end_timestamp_));
  _internal_metadata_.Clear();
}

bool PredictionObjects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prediction_msgs.PredictionObjects)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PerceptionObjects perception_objects = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_perception_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_prediction_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start_timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end_timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prediction_msgs.PredictionObjects)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prediction_msgs.PredictionObjects)
  return false;
#undef DO_
}

void PredictionObjects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:prediction_msgs.PredictionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .PerceptionObjects perception_objects = 2;
  if (this->has_perception_objects()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->perception_objects_, output);
  }

  // repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_obstacle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prediction_obstacle(static_cast<int>(i)), output);
  }

  // double start_timestamp = 4;
  if (this->start_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->start_timestamp(), output);
  }

  // double end_timestamp = 5;
  if (this->end_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->end_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:prediction_msgs.PredictionObjects)
}

::google::protobuf::uint8* PredictionObjects::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prediction_msgs.PredictionObjects)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .PerceptionObjects perception_objects = 2;
  if (this->has_perception_objects()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->perception_objects_, deterministic, target);
  }

  // repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_obstacle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->prediction_obstacle(static_cast<int>(i)), deterministic, target);
  }

  // double start_timestamp = 4;
  if (this->start_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->start_timestamp(), target);
  }

  // double end_timestamp = 5;
  if (this->end_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->end_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prediction_msgs.PredictionObjects)
  return target;
}

size_t PredictionObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:prediction_msgs.PredictionObjects)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->prediction_obstacle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prediction_obstacle(static_cast<int>(i)));
    }
  }

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .PerceptionObjects perception_objects = 2;
  if (this->has_perception_objects()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->perception_objects_);
  }

  // double start_timestamp = 4;
  if (this->start_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double end_timestamp = 5;
  if (this->end_timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionObjects::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:prediction_msgs.PredictionObjects)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionObjects* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObjects>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:prediction_msgs.PredictionObjects)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:prediction_msgs.PredictionObjects)
    MergeFrom(*source);
  }
}

void PredictionObjects::MergeFrom(const PredictionObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:prediction_msgs.PredictionObjects)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prediction_obstacle_.MergeFrom(from.prediction_obstacle_);
  if (from.has_header()) {
    mutable_header()->::common_msgs::Header::MergeFrom(from.header());
  }
  if (from.has_perception_objects()) {
    mutable_perception_objects()->::PerceptionObjects::MergeFrom(from.perception_objects());
  }
  if (from.start_timestamp() != 0) {
    set_start_timestamp(from.start_timestamp());
  }
  if (from.end_timestamp() != 0) {
    set_end_timestamp(from.end_timestamp());
  }
}

void PredictionObjects::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:prediction_msgs.PredictionObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObjects::CopyFrom(const PredictionObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:prediction_msgs.PredictionObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObjects::IsInitialized() const {
  return true;
}

void PredictionObjects::Swap(PredictionObjects* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObjects::InternalSwap(PredictionObjects* other) {
  using std::swap;
  prediction_obstacle_.InternalSwap(&other->prediction_obstacle_);
  swap(header_, other->header_);
  swap(perception_objects_, other->perception_objects_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(end_timestamp_, other->end_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionObjects::GetMetadata() const {
  protobuf_prediction_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prediction_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction_msgs

// @@protoc_insertion_point(global_scope)
