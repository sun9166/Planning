// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_msgs.proto

#include "control_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace control_msgs {
class CellDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cell>
      _instance;
} _Cell_default_instance_;
class ObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Object>
      _instance;
} _Object_default_instance_;
class ObstaclesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Obstacles>
      _instance;
} _Obstacles_default_instance_;
class VehicleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleInfo>
      _instance;
} _VehicleInfo_default_instance_;
class ControlFeedbackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlFeedback>
      _instance;
} _ControlFeedback_default_instance_;
class BussinessDemandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BussinessDemand>
      _instance;
} _BussinessDemand_default_instance_;
class LatcontrolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Latcontrol>
      _instance;
} _Latcontrol_default_instance_;
class LoncontrolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Loncontrol>
      _instance;
} _Loncontrol_default_instance_;
class SystemControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemControl>
      _instance;
} _SystemControl_default_instance_;
class SystemOverallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SystemOverall>
      _instance;
} _SystemOverall_default_instance_;
}  // namespace control_msgs
namespace protobuf_control_5fmsgs_2eproto {
void InitDefaultsCellImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::control_msgs::_Cell_default_instance_;
    new (ptr) ::control_msgs::Cell();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::Cell::InitAsDefaultInstance();
}

void InitDefaultsCell() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCellImpl);
}

void InitDefaultsObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_control_5fmsgs_2eproto::InitDefaultsCell();
  {
    void* ptr = &::control_msgs::_Object_default_instance_;
    new (ptr) ::control_msgs::Object();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::Object::InitAsDefaultInstance();
}

void InitDefaultsObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectImpl);
}

void InitDefaultsObstaclesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_control_5fmsgs_2eproto::InitDefaultsObject();
  protobuf_control_5fmsgs_2eproto::InitDefaultsCell();
  {
    void* ptr = &::control_msgs::_Obstacles_default_instance_;
    new (ptr) ::control_msgs::Obstacles();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::Obstacles::InitAsDefaultInstance();
}

void InitDefaultsObstacles() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObstaclesImpl);
}

void InitDefaultsVehicleInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::control_msgs::_VehicleInfo_default_instance_;
    new (ptr) ::control_msgs::VehicleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::VehicleInfo::InitAsDefaultInstance();
}

void InitDefaultsVehicleInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVehicleInfoImpl);
}

void InitDefaultsControlFeedbackImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_control_5fmsgs_2eproto::InitDefaultsVehicleInfo();
  {
    void* ptr = &::control_msgs::_ControlFeedback_default_instance_;
    new (ptr) ::control_msgs::ControlFeedback();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::ControlFeedback::InitAsDefaultInstance();
}

void InitDefaultsControlFeedback() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsControlFeedbackImpl);
}

void InitDefaultsBussinessDemandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::control_msgs::_BussinessDemand_default_instance_;
    new (ptr) ::control_msgs::BussinessDemand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::BussinessDemand::InitAsDefaultInstance();
}

void InitDefaultsBussinessDemand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBussinessDemandImpl);
}

void InitDefaultsLatcontrolImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::control_msgs::_Latcontrol_default_instance_;
    new (ptr) ::control_msgs::Latcontrol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::Latcontrol::InitAsDefaultInstance();
}

void InitDefaultsLatcontrol() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLatcontrolImpl);
}

void InitDefaultsLoncontrolImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::control_msgs::_Loncontrol_default_instance_;
    new (ptr) ::control_msgs::Loncontrol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::Loncontrol::InitAsDefaultInstance();
}

void InitDefaultsLoncontrol() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoncontrolImpl);
}

void InitDefaultsSystemControlImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_control_5fmsgs_2eproto::InitDefaultsLatcontrol();
  protobuf_control_5fmsgs_2eproto::InitDefaultsLoncontrol();
  protobuf_control_5fmsgs_2eproto::InitDefaultsBussinessDemand();
  {
    void* ptr = &::control_msgs::_SystemControl_default_instance_;
    new (ptr) ::control_msgs::SystemControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::SystemControl::InitAsDefaultInstance();
}

void InitDefaultsSystemControl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSystemControlImpl);
}

void InitDefaultsSystemOverallImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  protobuf_common_5fmsgs_2eproto::InitDefaultsFaultVec();
  protobuf_vehicle_5fperception_5fmsgs_2eproto::InitDefaultsVehiclePerception();
  protobuf_planning_5fmsgs_2eproto::InitDefaultsTrajectory();
  protobuf_planning_5fmsgs_2eproto::InitDefaultsBusiness();
  protobuf_control_5fmsgs_2eproto::InitDefaultsSystemControl();
  {
    void* ptr = &::control_msgs::_SystemOverall_default_instance_;
    new (ptr) ::control_msgs::SystemOverall();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::control_msgs::SystemOverall::InitAsDefaultInstance();
}

void InitDefaultsSystemOverall() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSystemOverallImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, idc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, xg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Cell, yg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, vxrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, vyrel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, vxabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, vyabs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Object, cells_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Obstacles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Obstacles, objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Obstacles, cells_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, steerangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, vehicle_accel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, brake_pressure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, shift_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, epb_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, current_drive_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, sys_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, vehicle_auto_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, vehicle_lat_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, vehicle_lon_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, vehicle_epb_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, on_accpedal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::VehicleInfo, steer_left_down_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::ControlFeedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::ControlFeedback, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::ControlFeedback, vehicle_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::ControlFeedback, brake_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::BussinessDemand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::BussinessDemand, isvalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::BussinessDemand, cmd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Latcontrol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Latcontrol, targetangle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Latcontrol, targettorque_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, targettorque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, targetpressure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, targetspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, targetaccelation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, actuatormode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, shiftposition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, epbflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, brakelight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, reverselight_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, emergency_obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::Loncontrol, slop_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemControl, latcontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemControl, loncontrol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemControl, hmi_control_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, fault_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, vechle_perception_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, motion_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, business_feedback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::control_msgs::SystemOverall, system_control_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::control_msgs::Cell)},
  { 11, -1, sizeof(::control_msgs::Object)},
  { 30, -1, sizeof(::control_msgs::Obstacles)},
  { 37, -1, sizeof(::control_msgs::VehicleInfo)},
  { 56, -1, sizeof(::control_msgs::ControlFeedback)},
  { 64, -1, sizeof(::control_msgs::BussinessDemand)},
  { 71, -1, sizeof(::control_msgs::Latcontrol)},
  { 78, -1, sizeof(::control_msgs::Loncontrol)},
  { 95, -1, sizeof(::control_msgs::SystemControl)},
  { 103, -1, sizeof(::control_msgs::SystemOverall)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_Cell_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_Object_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_Obstacles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_VehicleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_ControlFeedback_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_BussinessDemand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_Latcontrol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_Loncontrol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_SystemControl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::control_msgs::_SystemOverall_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "control_msgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022control_msgs.proto\022\014control_msgs\032\021comm"
      "on_msgs.proto\032\035vehicle_perception_msgs.p"
      "roto\032\023planning_msgs.proto\"O\n\004Cell\022\013\n\003idc"
      "\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001"
      "(\002\022\n\n\002xg\030\005 \001(\002\022\n\n\002yg\030\006 \001(\002\"\354\001\n\006Object\022\n\n"
      "\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\r\n\005vxrel"
      "\030\004 \001(\002\022\r\n\005vyrel\030\005 \001(\002\022\r\n\005vxabs\030\006 \001(\002\022\r\n\005"
      "vyabs\030\007 \001(\002\022\024\n\014acceleration\030\010 \001(\002\022\r\n\005wid"
      "th\030\t \001(\002\022\016\n\006length\030\n \001(\002\022\017\n\007heading\030\013 \001("
      "\002\022\r\n\005speed\030\014 \001(\002\022\014\n\004type\030\r \001(\r\022!\n\005cells\030"
      "\016 \003(\0132\022.control_msgs.Cell\"U\n\tObstacles\022%"
      "\n\007objects\030\001 \003(\0132\024.control_msgs.Object\022!\n"
      "\005Cells\030\002 \003(\0132\022.control_msgs.Cell\"\331\002\n\013Veh"
      "icleInfo\022\022\n\nsteerangle\030\001 \001(\002\022\r\n\005speed\030\002 "
      "\001(\002\022\025\n\rvehicle_accel\030\003 \001(\002\022\026\n\016brake_pres"
      "sure\030\004 \001(\002\022\026\n\016shift_position\030\005 \001(\005\022\022\n\nep"
      "b_status\030\006 \001(\005\022\032\n\022current_drive_mode\030\007 \001"
      "(\005\022\021\n\tsys_state\030\010 \001(\005\022\033\n\023vehicle_auto_en"
      "able\030\t \001(\010\022\032\n\022vehicle_lat_enable\030\n \001(\010\022\032"
      "\n\022vehicle_lon_enable\030\013 \001(\010\022\032\n\022vehicle_ep"
      "b_status\030\014 \001(\010\022\023\n\013on_accpedal\030\r \001(\005\022\027\n\017s"
      "teer_left_down\030\016 \001(\010\"|\n\017ControlFeedback\022"
      "#\n\006header\030\001 \001(\0132\023.common_msgs.Header\022/\n\014"
      "vehicle_info\030\002 \001(\0132\031.control_msgs.Vehicl"
      "eInfo\022\023\n\013brake_state\030\003 \001(\005\"/\n\017BussinessD"
      "emand\022\017\n\007isvalid\030\001 \001(\010\022\013\n\003cmd\030\002 \001(\005\"7\n\nL"
      "atcontrol\022\023\n\013targetangle\030\001 \001(\002\022\024\n\014target"
      "torque\030\002 \001(\005\"\221\002\n\nLoncontrol\022\024\n\014targettor"
      "que\030\001 \001(\002\022\026\n\016targetpressure\030\002 \001(\002\022\r\n\005pit"
      "ch\030\003 \001(\002\022\023\n\013targetspeed\030\004 \001(\002\022\030\n\020targeta"
      "ccelation\030\005 \001(\002\022\024\n\014actuatormode\030\006 \001(\005\022\025\n"
      "\rshiftposition\030\007 \001(\005\022\017\n\007epbflag\030\010 \001(\010\022\022\n"
      "\nbrakelight\030\t \001(\010\022\024\n\014reverselight\030\n \001(\010\022"
      "\032\n\022emergency_obstacle\030\013 \001(\005\022\023\n\013slop_stat"
      "us\030\014 \001(\010\"\237\001\n\rSystemControl\022,\n\nlatcontrol"
      "\030\001 \001(\0132\030.control_msgs.Latcontrol\022,\n\nlonc"
      "ontrol\030\002 \001(\0132\030.control_msgs.Loncontrol\0222"
      "\n\013hmi_control\030\003 \001(\0132\035.control_msgs.Bussi"
      "nessDemand\"\276\002\n\rSystemOverall\022#\n\006header\030\001"
      " \001(\0132\023.common_msgs.Header\022(\n\tfault_vec\030\002"
      " \001(\0132\025.common_msgs.FaultVec\022E\n\021vechle_pe"
      "rception\030\003 \001(\0132*.vehicle_perception_msgs"
      ".VehiclePerception\022.\n\013motion_path\030\004 \001(\0132"
      "\031.planning_msgs.Trajectory\0222\n\021business_f"
      "eedback\030\005 \001(\0132\027.planning_msgs.Business\0223"
      "\n\016system_control\030\006 \001(\0132\033.control_msgs.Sy"
      "stemControlb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1859);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "control_msgs.proto", &protobuf_RegisterTypes);
  ::protobuf_common_5fmsgs_2eproto::AddDescriptors();
  ::protobuf_vehicle_5fperception_5fmsgs_2eproto::AddDescriptors();
  ::protobuf_planning_5fmsgs_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_control_5fmsgs_2eproto
namespace control_msgs {

// ===================================================================

void Cell::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cell::kIdcFieldNumber;
const int Cell::kTypeFieldNumber;
const int Cell::kXFieldNumber;
const int Cell::kYFieldNumber;
const int Cell::kXgFieldNumber;
const int Cell::kYgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cell::Cell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsCell();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.Cell)
}
Cell::Cell(const Cell& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&idc_, &from.idc_,
    static_cast<size_t>(reinterpret_cast<char*>(&yg_) -
    reinterpret_cast<char*>(&idc_)) + sizeof(yg_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.Cell)
}

void Cell::SharedCtor() {
  ::memset(&idc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yg_) -
      reinterpret_cast<char*>(&idc_)) + sizeof(yg_));
  _cached_size_ = 0;
}

Cell::~Cell() {
  // @@protoc_insertion_point(destructor:control_msgs.Cell)
  SharedDtor();
}

void Cell::SharedDtor() {
}

void Cell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cell::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cell& Cell::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsCell();
  return *internal_default_instance();
}

Cell* Cell::New(::google::protobuf::Arena* arena) const {
  Cell* n = new Cell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cell::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&idc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yg_) -
      reinterpret_cast<char*>(&idc_)) + sizeof(yg_));
  _internal_metadata_.Clear();
}

bool Cell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.Cell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 idc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &idc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float xg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.Cell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.Cell)
  return false;
#undef DO_
}

void Cell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 idc = 1;
  if (this->idc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->idc(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // float x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // float y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // float xg = 5;
  if (this->xg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->xg(), output);
  }

  // float yg = 6;
  if (this->yg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->yg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.Cell)
}

::google::protobuf::uint8* Cell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.Cell)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 idc = 1;
  if (this->idc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->idc(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // float x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // float y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // float xg = 5;
  if (this->xg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->xg(), target);
  }

  // float yg = 6;
  if (this->yg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->yg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.Cell)
  return target;
}

size_t Cell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.Cell)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 idc = 1;
  if (this->idc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->idc());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // float x = 3;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 4;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float xg = 5;
  if (this->xg() != 0) {
    total_size += 1 + 4;
  }

  // float yg = 6;
  if (this->yg() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  const Cell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.Cell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.Cell)
    MergeFrom(*source);
  }
}

void Cell::MergeFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.Cell)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.idc() != 0) {
    set_idc(from.idc());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.xg() != 0) {
    set_xg(from.xg());
  }
  if (from.yg() != 0) {
    set_yg(from.yg());
  }
}

void Cell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cell::CopyFrom(const Cell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.Cell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cell::IsInitialized() const {
  return true;
}

void Cell::Swap(Cell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cell::InternalSwap(Cell* other) {
  using std::swap;
  swap(idc_, other->idc_);
  swap(type_, other->type_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(xg_, other->xg_);
  swap(yg_, other->yg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cell::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Object::kIdFieldNumber;
const int Object::kXFieldNumber;
const int Object::kYFieldNumber;
const int Object::kVxrelFieldNumber;
const int Object::kVyrelFieldNumber;
const int Object::kVxabsFieldNumber;
const int Object::kVyabsFieldNumber;
const int Object::kAccelerationFieldNumber;
const int Object::kWidthFieldNumber;
const int Object::kLengthFieldNumber;
const int Object::kHeadingFieldNumber;
const int Object::kSpeedFieldNumber;
const int Object::kTypeFieldNumber;
const int Object::kCellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Object::Object()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.Object)
}
Object::Object(const Object& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cells_(from.cells_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.Object)
}

void Object::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _cached_size_ = 0;
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:control_msgs.Object)
  SharedDtor();
}

void Object::SharedDtor() {
}

void Object::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Object::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Object& Object::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsObject();
  return *internal_default_instance();
}

Object* Object::New(::google::protobuf::Arena* arena) const {
  Object* n = new Object;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cells_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Object::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.Object)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vxrel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vxrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vyrel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vyrel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vxabs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vxabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vyabs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vyabs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float acceleration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float heading = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .control_msgs.Cell cells = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.Object)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.Object)
  return false;
#undef DO_
}

void Object::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // float x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->x(), output);
  }

  // float y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->y(), output);
  }

  // float vxrel = 4;
  if (this->vxrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->vxrel(), output);
  }

  // float vyrel = 5;
  if (this->vyrel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->vyrel(), output);
  }

  // float vxabs = 6;
  if (this->vxabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->vxabs(), output);
  }

  // float vyabs = 7;
  if (this->vyabs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->vyabs(), output);
  }

  // float acceleration = 8;
  if (this->acceleration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->acceleration(), output);
  }

  // float width = 9;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->width(), output);
  }

  // float length = 10;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->length(), output);
  }

  // float heading = 11;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->heading(), output);
  }

  // float speed = 12;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->speed(), output);
  }

  // uint32 type = 13;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->type(), output);
  }

  // repeated .control_msgs.Cell cells = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->cells(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.Object)
}

::google::protobuf::uint8* Object::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.Object)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // float x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->x(), target);
  }

  // float y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->y(), target);
  }

  // float vxrel = 4;
  if (this->vxrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->vxrel(), target);
  }

  // float vyrel = 5;
  if (this->vyrel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->vyrel(), target);
  }

  // float vxabs = 6;
  if (this->vxabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->vxabs(), target);
  }

  // float vyabs = 7;
  if (this->vyabs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->vyabs(), target);
  }

  // float acceleration = 8;
  if (this->acceleration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->acceleration(), target);
  }

  // float width = 9;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->width(), target);
  }

  // float length = 10;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->length(), target);
  }

  // float heading = 11;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->heading(), target);
  }

  // float speed = 12;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->speed(), target);
  }

  // uint32 type = 13;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->type(), target);
  }

  // repeated .control_msgs.Cell cells = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->cells(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.Object)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .control_msgs.Cell cells = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float x = 2;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 3;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float vxrel = 4;
  if (this->vxrel() != 0) {
    total_size += 1 + 4;
  }

  // float vyrel = 5;
  if (this->vyrel() != 0) {
    total_size += 1 + 4;
  }

  // float vxabs = 6;
  if (this->vxabs() != 0) {
    total_size += 1 + 4;
  }

  // float vyabs = 7;
  if (this->vyabs() != 0) {
    total_size += 1 + 4;
  }

  // float acceleration = 8;
  if (this->acceleration() != 0) {
    total_size += 1 + 4;
  }

  // float width = 9;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float length = 10;
  if (this->length() != 0) {
    total_size += 1 + 4;
  }

  // float heading = 11;
  if (this->heading() != 0) {
    total_size += 1 + 4;
  }

  // float speed = 12;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // uint32 type = 13;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Object::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Object>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.Object)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cells_.MergeFrom(from.cells_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.vxrel() != 0) {
    set_vxrel(from.vxrel());
  }
  if (from.vyrel() != 0) {
    set_vyrel(from.vyrel());
  }
  if (from.vxabs() != 0) {
    set_vxabs(from.vxabs());
  }
  if (from.vyabs() != 0) {
    set_vyabs(from.vyabs());
  }
  if (from.acceleration() != 0) {
    set_acceleration(from.acceleration());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Object::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::Swap(Object* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Object::InternalSwap(Object* other) {
  using std::swap;
  cells_.InternalSwap(&other->cells_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(vxrel_, other->vxrel_);
  swap(vyrel_, other->vyrel_);
  swap(vxabs_, other->vxabs_);
  swap(vyabs_, other->vyabs_);
  swap(acceleration_, other->acceleration_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(heading_, other->heading_);
  swap(speed_, other->speed_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Object::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Obstacles::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Obstacles::kObjectsFieldNumber;
const int Obstacles::kCellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Obstacles::Obstacles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsObstacles();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.Obstacles)
}
Obstacles::Obstacles(const Obstacles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objects_(from.objects_),
      cells_(from.cells_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:control_msgs.Obstacles)
}

void Obstacles::SharedCtor() {
  _cached_size_ = 0;
}

Obstacles::~Obstacles() {
  // @@protoc_insertion_point(destructor:control_msgs.Obstacles)
  SharedDtor();
}

void Obstacles::SharedDtor() {
}

void Obstacles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Obstacles::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Obstacles& Obstacles::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsObstacles();
  return *internal_default_instance();
}

Obstacles* Obstacles::New(::google::protobuf::Arena* arena) const {
  Obstacles* n = new Obstacles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Obstacles::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.Obstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  cells_.Clear();
  _internal_metadata_.Clear();
}

bool Obstacles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.Obstacles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .control_msgs.Object objects = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_objects()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .control_msgs.Cell Cells = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_cells()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.Obstacles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.Obstacles)
  return false;
#undef DO_
}

void Obstacles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.Obstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .control_msgs.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->objects(static_cast<int>(i)), output);
  }

  // repeated .control_msgs.Cell Cells = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->cells(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.Obstacles)
}

::google::protobuf::uint8* Obstacles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.Obstacles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .control_msgs.Object objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objects_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objects(static_cast<int>(i)), deterministic, target);
  }

  // repeated .control_msgs.Cell Cells = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cells_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->cells(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.Obstacles)
  return target;
}

size_t Obstacles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.Obstacles)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .control_msgs.Object objects = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objects_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objects(static_cast<int>(i)));
    }
  }

  // repeated .control_msgs.Cell Cells = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->cells_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cells(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Obstacles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.Obstacles)
  GOOGLE_DCHECK_NE(&from, this);
  const Obstacles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Obstacles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.Obstacles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.Obstacles)
    MergeFrom(*source);
  }
}

void Obstacles::MergeFrom(const Obstacles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.Obstacles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
  cells_.MergeFrom(from.cells_);
}

void Obstacles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.Obstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Obstacles::CopyFrom(const Obstacles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.Obstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Obstacles::IsInitialized() const {
  return true;
}

void Obstacles::Swap(Obstacles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Obstacles::InternalSwap(Obstacles* other) {
  using std::swap;
  objects_.InternalSwap(&other->objects_);
  cells_.InternalSwap(&other->cells_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Obstacles::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleInfo::kSteerangleFieldNumber;
const int VehicleInfo::kSpeedFieldNumber;
const int VehicleInfo::kVehicleAccelFieldNumber;
const int VehicleInfo::kBrakePressureFieldNumber;
const int VehicleInfo::kShiftPositionFieldNumber;
const int VehicleInfo::kEpbStatusFieldNumber;
const int VehicleInfo::kCurrentDriveModeFieldNumber;
const int VehicleInfo::kSysStateFieldNumber;
const int VehicleInfo::kVehicleAutoEnableFieldNumber;
const int VehicleInfo::kVehicleLatEnableFieldNumber;
const int VehicleInfo::kVehicleLonEnableFieldNumber;
const int VehicleInfo::kVehicleEpbStatusFieldNumber;
const int VehicleInfo::kOnAccpedalFieldNumber;
const int VehicleInfo::kSteerLeftDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleInfo::VehicleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsVehicleInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.VehicleInfo)
}
VehicleInfo::VehicleInfo(const VehicleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steerangle_, &from.steerangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&steer_left_down_) -
    reinterpret_cast<char*>(&steerangle_)) + sizeof(steer_left_down_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.VehicleInfo)
}

void VehicleInfo::SharedCtor() {
  ::memset(&steerangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steer_left_down_) -
      reinterpret_cast<char*>(&steerangle_)) + sizeof(steer_left_down_));
  _cached_size_ = 0;
}

VehicleInfo::~VehicleInfo() {
  // @@protoc_insertion_point(destructor:control_msgs.VehicleInfo)
  SharedDtor();
}

void VehicleInfo::SharedDtor() {
}

void VehicleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VehicleInfo::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleInfo& VehicleInfo::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsVehicleInfo();
  return *internal_default_instance();
}

VehicleInfo* VehicleInfo::New(::google::protobuf::Arena* arena) const {
  VehicleInfo* n = new VehicleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VehicleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.VehicleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&steerangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steer_left_down_) -
      reinterpret_cast<char*>(&steerangle_)) + sizeof(steer_left_down_));
  _internal_metadata_.Clear();
}

bool VehicleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.VehicleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float steerangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &steerangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vehicle_accel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vehicle_accel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brake_pressure = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brake_pressure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shift_position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shift_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 epb_status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &epb_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current_drive_mode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_drive_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sys_state = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sys_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vehicle_auto_enable = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vehicle_auto_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vehicle_lat_enable = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vehicle_lat_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vehicle_lon_enable = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vehicle_lon_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vehicle_epb_status = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vehicle_epb_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 on_accpedal = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &on_accpedal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool steer_left_down = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &steer_left_down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.VehicleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.VehicleInfo)
  return false;
#undef DO_
}

void VehicleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.VehicleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float steerangle = 1;
  if (this->steerangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->steerangle(), output);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->speed(), output);
  }

  // float vehicle_accel = 3;
  if (this->vehicle_accel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->vehicle_accel(), output);
  }

  // float brake_pressure = 4;
  if (this->brake_pressure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->brake_pressure(), output);
  }

  // int32 shift_position = 5;
  if (this->shift_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->shift_position(), output);
  }

  // int32 epb_status = 6;
  if (this->epb_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->epb_status(), output);
  }

  // int32 current_drive_mode = 7;
  if (this->current_drive_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->current_drive_mode(), output);
  }

  // int32 sys_state = 8;
  if (this->sys_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sys_state(), output);
  }

  // bool vehicle_auto_enable = 9;
  if (this->vehicle_auto_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->vehicle_auto_enable(), output);
  }

  // bool vehicle_lat_enable = 10;
  if (this->vehicle_lat_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->vehicle_lat_enable(), output);
  }

  // bool vehicle_lon_enable = 11;
  if (this->vehicle_lon_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->vehicle_lon_enable(), output);
  }

  // bool vehicle_epb_status = 12;
  if (this->vehicle_epb_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->vehicle_epb_status(), output);
  }

  // int32 on_accpedal = 13;
  if (this->on_accpedal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->on_accpedal(), output);
  }

  // bool steer_left_down = 14;
  if (this->steer_left_down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->steer_left_down(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.VehicleInfo)
}

::google::protobuf::uint8* VehicleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.VehicleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float steerangle = 1;
  if (this->steerangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->steerangle(), target);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->speed(), target);
  }

  // float vehicle_accel = 3;
  if (this->vehicle_accel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->vehicle_accel(), target);
  }

  // float brake_pressure = 4;
  if (this->brake_pressure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->brake_pressure(), target);
  }

  // int32 shift_position = 5;
  if (this->shift_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->shift_position(), target);
  }

  // int32 epb_status = 6;
  if (this->epb_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->epb_status(), target);
  }

  // int32 current_drive_mode = 7;
  if (this->current_drive_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->current_drive_mode(), target);
  }

  // int32 sys_state = 8;
  if (this->sys_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sys_state(), target);
  }

  // bool vehicle_auto_enable = 9;
  if (this->vehicle_auto_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->vehicle_auto_enable(), target);
  }

  // bool vehicle_lat_enable = 10;
  if (this->vehicle_lat_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->vehicle_lat_enable(), target);
  }

  // bool vehicle_lon_enable = 11;
  if (this->vehicle_lon_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->vehicle_lon_enable(), target);
  }

  // bool vehicle_epb_status = 12;
  if (this->vehicle_epb_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->vehicle_epb_status(), target);
  }

  // int32 on_accpedal = 13;
  if (this->on_accpedal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->on_accpedal(), target);
  }

  // bool steer_left_down = 14;
  if (this->steer_left_down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->steer_left_down(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.VehicleInfo)
  return target;
}

size_t VehicleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.VehicleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float steerangle = 1;
  if (this->steerangle() != 0) {
    total_size += 1 + 4;
  }

  // float speed = 2;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // float vehicle_accel = 3;
  if (this->vehicle_accel() != 0) {
    total_size += 1 + 4;
  }

  // float brake_pressure = 4;
  if (this->brake_pressure() != 0) {
    total_size += 1 + 4;
  }

  // int32 shift_position = 5;
  if (this->shift_position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shift_position());
  }

  // int32 epb_status = 6;
  if (this->epb_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->epb_status());
  }

  // int32 current_drive_mode = 7;
  if (this->current_drive_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current_drive_mode());
  }

  // int32 sys_state = 8;
  if (this->sys_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sys_state());
  }

  // bool vehicle_auto_enable = 9;
  if (this->vehicle_auto_enable() != 0) {
    total_size += 1 + 1;
  }

  // bool vehicle_lat_enable = 10;
  if (this->vehicle_lat_enable() != 0) {
    total_size += 1 + 1;
  }

  // bool vehicle_lon_enable = 11;
  if (this->vehicle_lon_enable() != 0) {
    total_size += 1 + 1;
  }

  // bool vehicle_epb_status = 12;
  if (this->vehicle_epb_status() != 0) {
    total_size += 1 + 1;
  }

  // int32 on_accpedal = 13;
  if (this->on_accpedal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->on_accpedal());
  }

  // bool steer_left_down = 14;
  if (this->steer_left_down() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VehicleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.VehicleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.VehicleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.VehicleInfo)
    MergeFrom(*source);
  }
}

void VehicleInfo::MergeFrom(const VehicleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.VehicleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.steerangle() != 0) {
    set_steerangle(from.steerangle());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.vehicle_accel() != 0) {
    set_vehicle_accel(from.vehicle_accel());
  }
  if (from.brake_pressure() != 0) {
    set_brake_pressure(from.brake_pressure());
  }
  if (from.shift_position() != 0) {
    set_shift_position(from.shift_position());
  }
  if (from.epb_status() != 0) {
    set_epb_status(from.epb_status());
  }
  if (from.current_drive_mode() != 0) {
    set_current_drive_mode(from.current_drive_mode());
  }
  if (from.sys_state() != 0) {
    set_sys_state(from.sys_state());
  }
  if (from.vehicle_auto_enable() != 0) {
    set_vehicle_auto_enable(from.vehicle_auto_enable());
  }
  if (from.vehicle_lat_enable() != 0) {
    set_vehicle_lat_enable(from.vehicle_lat_enable());
  }
  if (from.vehicle_lon_enable() != 0) {
    set_vehicle_lon_enable(from.vehicle_lon_enable());
  }
  if (from.vehicle_epb_status() != 0) {
    set_vehicle_epb_status(from.vehicle_epb_status());
  }
  if (from.on_accpedal() != 0) {
    set_on_accpedal(from.on_accpedal());
  }
  if (from.steer_left_down() != 0) {
    set_steer_left_down(from.steer_left_down());
  }
}

void VehicleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.VehicleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleInfo::CopyFrom(const VehicleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.VehicleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleInfo::IsInitialized() const {
  return true;
}

void VehicleInfo::Swap(VehicleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleInfo::InternalSwap(VehicleInfo* other) {
  using std::swap;
  swap(steerangle_, other->steerangle_);
  swap(speed_, other->speed_);
  swap(vehicle_accel_, other->vehicle_accel_);
  swap(brake_pressure_, other->brake_pressure_);
  swap(shift_position_, other->shift_position_);
  swap(epb_status_, other->epb_status_);
  swap(current_drive_mode_, other->current_drive_mode_);
  swap(sys_state_, other->sys_state_);
  swap(vehicle_auto_enable_, other->vehicle_auto_enable_);
  swap(vehicle_lat_enable_, other->vehicle_lat_enable_);
  swap(vehicle_lon_enable_, other->vehicle_lon_enable_);
  swap(vehicle_epb_status_, other->vehicle_epb_status_);
  swap(on_accpedal_, other->on_accpedal_);
  swap(steer_left_down_, other->steer_left_down_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VehicleInfo::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControlFeedback::InitAsDefaultInstance() {
  ::control_msgs::_ControlFeedback_default_instance_._instance.get_mutable()->header_ = const_cast< ::common_msgs::Header*>(
      ::common_msgs::Header::internal_default_instance());
  ::control_msgs::_ControlFeedback_default_instance_._instance.get_mutable()->vehicle_info_ = const_cast< ::control_msgs::VehicleInfo*>(
      ::control_msgs::VehicleInfo::internal_default_instance());
}
void ControlFeedback::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlFeedback::kHeaderFieldNumber;
const int ControlFeedback::kVehicleInfoFieldNumber;
const int ControlFeedback::kBrakeStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlFeedback::ControlFeedback()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsControlFeedback();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.ControlFeedback)
}
ControlFeedback::ControlFeedback(const ControlFeedback& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::common_msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_vehicle_info()) {
    vehicle_info_ = new ::control_msgs::VehicleInfo(*from.vehicle_info_);
  } else {
    vehicle_info_ = NULL;
  }
  brake_state_ = from.brake_state_;
  // @@protoc_insertion_point(copy_constructor:control_msgs.ControlFeedback)
}

void ControlFeedback::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brake_state_) -
      reinterpret_cast<char*>(&header_)) + sizeof(brake_state_));
  _cached_size_ = 0;
}

ControlFeedback::~ControlFeedback() {
  // @@protoc_insertion_point(destructor:control_msgs.ControlFeedback)
  SharedDtor();
}

void ControlFeedback::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete vehicle_info_;
}

void ControlFeedback::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlFeedback::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControlFeedback& ControlFeedback::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsControlFeedback();
  return *internal_default_instance();
}

ControlFeedback* ControlFeedback::New(::google::protobuf::Arena* arena) const {
  ControlFeedback* n = new ControlFeedback;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlFeedback::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.ControlFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_info_ != NULL) {
    delete vehicle_info_;
  }
  vehicle_info_ = NULL;
  brake_state_ = 0;
  _internal_metadata_.Clear();
}

bool ControlFeedback::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.ControlFeedback)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .control_msgs.VehicleInfo vehicle_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 brake_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brake_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.ControlFeedback)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.ControlFeedback)
  return false;
#undef DO_
}

void ControlFeedback::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.ControlFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .control_msgs.VehicleInfo vehicle_info = 2;
  if (this->has_vehicle_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->vehicle_info_, output);
  }

  // int32 brake_state = 3;
  if (this->brake_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->brake_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.ControlFeedback)
}

::google::protobuf::uint8* ControlFeedback::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.ControlFeedback)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .control_msgs.VehicleInfo vehicle_info = 2;
  if (this->has_vehicle_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->vehicle_info_, deterministic, target);
  }

  // int32 brake_state = 3;
  if (this->brake_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->brake_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.ControlFeedback)
  return target;
}

size_t ControlFeedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.ControlFeedback)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .control_msgs.VehicleInfo vehicle_info = 2;
  if (this->has_vehicle_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vehicle_info_);
  }

  // int32 brake_state = 3;
  if (this->brake_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->brake_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlFeedback::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.ControlFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlFeedback* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlFeedback>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.ControlFeedback)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.ControlFeedback)
    MergeFrom(*source);
  }
}

void ControlFeedback::MergeFrom(const ControlFeedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.ControlFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::common_msgs::Header::MergeFrom(from.header());
  }
  if (from.has_vehicle_info()) {
    mutable_vehicle_info()->::control_msgs::VehicleInfo::MergeFrom(from.vehicle_info());
  }
  if (from.brake_state() != 0) {
    set_brake_state(from.brake_state());
  }
}

void ControlFeedback::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.ControlFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlFeedback::CopyFrom(const ControlFeedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.ControlFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlFeedback::IsInitialized() const {
  return true;
}

void ControlFeedback::Swap(ControlFeedback* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlFeedback::InternalSwap(ControlFeedback* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(vehicle_info_, other->vehicle_info_);
  swap(brake_state_, other->brake_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlFeedback::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BussinessDemand::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BussinessDemand::kIsvalidFieldNumber;
const int BussinessDemand::kCmdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BussinessDemand::BussinessDemand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsBussinessDemand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.BussinessDemand)
}
BussinessDemand::BussinessDemand(const BussinessDemand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&isvalid_, &from.isvalid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmd_) -
    reinterpret_cast<char*>(&isvalid_)) + sizeof(cmd_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.BussinessDemand)
}

void BussinessDemand::SharedCtor() {
  ::memset(&isvalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_) -
      reinterpret_cast<char*>(&isvalid_)) + sizeof(cmd_));
  _cached_size_ = 0;
}

BussinessDemand::~BussinessDemand() {
  // @@protoc_insertion_point(destructor:control_msgs.BussinessDemand)
  SharedDtor();
}

void BussinessDemand::SharedDtor() {
}

void BussinessDemand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BussinessDemand::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BussinessDemand& BussinessDemand::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsBussinessDemand();
  return *internal_default_instance();
}

BussinessDemand* BussinessDemand::New(::google::protobuf::Arena* arena) const {
  BussinessDemand* n = new BussinessDemand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BussinessDemand::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.BussinessDemand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&isvalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_) -
      reinterpret_cast<char*>(&isvalid_)) + sizeof(cmd_));
  _internal_metadata_.Clear();
}

bool BussinessDemand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.BussinessDemand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isvalid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isvalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.BussinessDemand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.BussinessDemand)
  return false;
#undef DO_
}

void BussinessDemand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.BussinessDemand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isvalid = 1;
  if (this->isvalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isvalid(), output);
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cmd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.BussinessDemand)
}

::google::protobuf::uint8* BussinessDemand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.BussinessDemand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isvalid = 1;
  if (this->isvalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isvalid(), target);
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cmd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.BussinessDemand)
  return target;
}

size_t BussinessDemand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.BussinessDemand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isvalid = 1;
  if (this->isvalid() != 0) {
    total_size += 1 + 1;
  }

  // int32 cmd = 2;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BussinessDemand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.BussinessDemand)
  GOOGLE_DCHECK_NE(&from, this);
  const BussinessDemand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BussinessDemand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.BussinessDemand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.BussinessDemand)
    MergeFrom(*source);
  }
}

void BussinessDemand::MergeFrom(const BussinessDemand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.BussinessDemand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.isvalid() != 0) {
    set_isvalid(from.isvalid());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
}

void BussinessDemand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.BussinessDemand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BussinessDemand::CopyFrom(const BussinessDemand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.BussinessDemand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BussinessDemand::IsInitialized() const {
  return true;
}

void BussinessDemand::Swap(BussinessDemand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BussinessDemand::InternalSwap(BussinessDemand* other) {
  using std::swap;
  swap(isvalid_, other->isvalid_);
  swap(cmd_, other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BussinessDemand::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Latcontrol::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Latcontrol::kTargetangleFieldNumber;
const int Latcontrol::kTargettorqueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Latcontrol::Latcontrol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsLatcontrol();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.Latcontrol)
}
Latcontrol::Latcontrol(const Latcontrol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targetangle_, &from.targetangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&targettorque_) -
    reinterpret_cast<char*>(&targetangle_)) + sizeof(targettorque_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.Latcontrol)
}

void Latcontrol::SharedCtor() {
  ::memset(&targetangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targettorque_) -
      reinterpret_cast<char*>(&targetangle_)) + sizeof(targettorque_));
  _cached_size_ = 0;
}

Latcontrol::~Latcontrol() {
  // @@protoc_insertion_point(destructor:control_msgs.Latcontrol)
  SharedDtor();
}

void Latcontrol::SharedDtor() {
}

void Latcontrol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Latcontrol::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Latcontrol& Latcontrol::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsLatcontrol();
  return *internal_default_instance();
}

Latcontrol* Latcontrol::New(::google::protobuf::Arena* arena) const {
  Latcontrol* n = new Latcontrol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Latcontrol::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.Latcontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targetangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targettorque_) -
      reinterpret_cast<char*>(&targetangle_)) + sizeof(targettorque_));
  _internal_metadata_.Clear();
}

bool Latcontrol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.Latcontrol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float targetangle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetangle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 targettorque = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &targettorque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.Latcontrol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.Latcontrol)
  return false;
#undef DO_
}

void Latcontrol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.Latcontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float targetangle = 1;
  if (this->targetangle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->targetangle(), output);
  }

  // int32 targettorque = 2;
  if (this->targettorque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->targettorque(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.Latcontrol)
}

::google::protobuf::uint8* Latcontrol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.Latcontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float targetangle = 1;
  if (this->targetangle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->targetangle(), target);
  }

  // int32 targettorque = 2;
  if (this->targettorque() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->targettorque(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.Latcontrol)
  return target;
}

size_t Latcontrol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.Latcontrol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float targetangle = 1;
  if (this->targetangle() != 0) {
    total_size += 1 + 4;
  }

  // int32 targettorque = 2;
  if (this->targettorque() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->targettorque());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Latcontrol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.Latcontrol)
  GOOGLE_DCHECK_NE(&from, this);
  const Latcontrol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Latcontrol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.Latcontrol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.Latcontrol)
    MergeFrom(*source);
  }
}

void Latcontrol::MergeFrom(const Latcontrol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.Latcontrol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetangle() != 0) {
    set_targetangle(from.targetangle());
  }
  if (from.targettorque() != 0) {
    set_targettorque(from.targettorque());
  }
}

void Latcontrol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.Latcontrol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Latcontrol::CopyFrom(const Latcontrol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.Latcontrol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Latcontrol::IsInitialized() const {
  return true;
}

void Latcontrol::Swap(Latcontrol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Latcontrol::InternalSwap(Latcontrol* other) {
  using std::swap;
  swap(targetangle_, other->targetangle_);
  swap(targettorque_, other->targettorque_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Latcontrol::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Loncontrol::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Loncontrol::kTargettorqueFieldNumber;
const int Loncontrol::kTargetpressureFieldNumber;
const int Loncontrol::kPitchFieldNumber;
const int Loncontrol::kTargetspeedFieldNumber;
const int Loncontrol::kTargetaccelationFieldNumber;
const int Loncontrol::kActuatormodeFieldNumber;
const int Loncontrol::kShiftpositionFieldNumber;
const int Loncontrol::kEpbflagFieldNumber;
const int Loncontrol::kBrakelightFieldNumber;
const int Loncontrol::kReverselightFieldNumber;
const int Loncontrol::kEmergencyObstacleFieldNumber;
const int Loncontrol::kSlopStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Loncontrol::Loncontrol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsLoncontrol();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.Loncontrol)
}
Loncontrol::Loncontrol(const Loncontrol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&targettorque_, &from.targettorque_,
    static_cast<size_t>(reinterpret_cast<char*>(&emergency_obstacle_) -
    reinterpret_cast<char*>(&targettorque_)) + sizeof(emergency_obstacle_));
  // @@protoc_insertion_point(copy_constructor:control_msgs.Loncontrol)
}

void Loncontrol::SharedCtor() {
  ::memset(&targettorque_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emergency_obstacle_) -
      reinterpret_cast<char*>(&targettorque_)) + sizeof(emergency_obstacle_));
  _cached_size_ = 0;
}

Loncontrol::~Loncontrol() {
  // @@protoc_insertion_point(destructor:control_msgs.Loncontrol)
  SharedDtor();
}

void Loncontrol::SharedDtor() {
}

void Loncontrol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Loncontrol::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Loncontrol& Loncontrol::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsLoncontrol();
  return *internal_default_instance();
}

Loncontrol* Loncontrol::New(::google::protobuf::Arena* arena) const {
  Loncontrol* n = new Loncontrol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Loncontrol::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.Loncontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&targettorque_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emergency_obstacle_) -
      reinterpret_cast<char*>(&targettorque_)) + sizeof(emergency_obstacle_));
  _internal_metadata_.Clear();
}

bool Loncontrol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.Loncontrol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float targettorque = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targettorque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float targetpressure = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetpressure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pitch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float targetspeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float targetaccelation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &targetaccelation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actuatormode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actuatormode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 shiftposition = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shiftposition_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool epbflag = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &epbflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool brakelight = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &brakelight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reverselight = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverselight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 emergency_obstacle = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &emergency_obstacle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool slop_status = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &slop_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.Loncontrol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.Loncontrol)
  return false;
#undef DO_
}

void Loncontrol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.Loncontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float targettorque = 1;
  if (this->targettorque() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->targettorque(), output);
  }

  // float targetpressure = 2;
  if (this->targetpressure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->targetpressure(), output);
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->pitch(), output);
  }

  // float targetspeed = 4;
  if (this->targetspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->targetspeed(), output);
  }

  // float targetaccelation = 5;
  if (this->targetaccelation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->targetaccelation(), output);
  }

  // int32 actuatormode = 6;
  if (this->actuatormode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->actuatormode(), output);
  }

  // int32 shiftposition = 7;
  if (this->shiftposition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->shiftposition(), output);
  }

  // bool epbflag = 8;
  if (this->epbflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->epbflag(), output);
  }

  // bool brakelight = 9;
  if (this->brakelight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->brakelight(), output);
  }

  // bool reverselight = 10;
  if (this->reverselight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->reverselight(), output);
  }

  // int32 emergency_obstacle = 11;
  if (this->emergency_obstacle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->emergency_obstacle(), output);
  }

  // bool slop_status = 12;
  if (this->slop_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->slop_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.Loncontrol)
}

::google::protobuf::uint8* Loncontrol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.Loncontrol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float targettorque = 1;
  if (this->targettorque() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->targettorque(), target);
  }

  // float targetpressure = 2;
  if (this->targetpressure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->targetpressure(), target);
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->pitch(), target);
  }

  // float targetspeed = 4;
  if (this->targetspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->targetspeed(), target);
  }

  // float targetaccelation = 5;
  if (this->targetaccelation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->targetaccelation(), target);
  }

  // int32 actuatormode = 6;
  if (this->actuatormode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->actuatormode(), target);
  }

  // int32 shiftposition = 7;
  if (this->shiftposition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->shiftposition(), target);
  }

  // bool epbflag = 8;
  if (this->epbflag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->epbflag(), target);
  }

  // bool brakelight = 9;
  if (this->brakelight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->brakelight(), target);
  }

  // bool reverselight = 10;
  if (this->reverselight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->reverselight(), target);
  }

  // int32 emergency_obstacle = 11;
  if (this->emergency_obstacle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->emergency_obstacle(), target);
  }

  // bool slop_status = 12;
  if (this->slop_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->slop_status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.Loncontrol)
  return target;
}

size_t Loncontrol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.Loncontrol)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float targettorque = 1;
  if (this->targettorque() != 0) {
    total_size += 1 + 4;
  }

  // float targetpressure = 2;
  if (this->targetpressure() != 0) {
    total_size += 1 + 4;
  }

  // float pitch = 3;
  if (this->pitch() != 0) {
    total_size += 1 + 4;
  }

  // float targetspeed = 4;
  if (this->targetspeed() != 0) {
    total_size += 1 + 4;
  }

  // float targetaccelation = 5;
  if (this->targetaccelation() != 0) {
    total_size += 1 + 4;
  }

  // int32 actuatormode = 6;
  if (this->actuatormode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actuatormode());
  }

  // int32 shiftposition = 7;
  if (this->shiftposition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shiftposition());
  }

  // bool epbflag = 8;
  if (this->epbflag() != 0) {
    total_size += 1 + 1;
  }

  // bool brakelight = 9;
  if (this->brakelight() != 0) {
    total_size += 1 + 1;
  }

  // bool reverselight = 10;
  if (this->reverselight() != 0) {
    total_size += 1 + 1;
  }

  // bool slop_status = 12;
  if (this->slop_status() != 0) {
    total_size += 1 + 1;
  }

  // int32 emergency_obstacle = 11;
  if (this->emergency_obstacle() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->emergency_obstacle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Loncontrol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.Loncontrol)
  GOOGLE_DCHECK_NE(&from, this);
  const Loncontrol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Loncontrol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.Loncontrol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.Loncontrol)
    MergeFrom(*source);
  }
}

void Loncontrol::MergeFrom(const Loncontrol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.Loncontrol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targettorque() != 0) {
    set_targettorque(from.targettorque());
  }
  if (from.targetpressure() != 0) {
    set_targetpressure(from.targetpressure());
  }
  if (from.pitch() != 0) {
    set_pitch(from.pitch());
  }
  if (from.targetspeed() != 0) {
    set_targetspeed(from.targetspeed());
  }
  if (from.targetaccelation() != 0) {
    set_targetaccelation(from.targetaccelation());
  }
  if (from.actuatormode() != 0) {
    set_actuatormode(from.actuatormode());
  }
  if (from.shiftposition() != 0) {
    set_shiftposition(from.shiftposition());
  }
  if (from.epbflag() != 0) {
    set_epbflag(from.epbflag());
  }
  if (from.brakelight() != 0) {
    set_brakelight(from.brakelight());
  }
  if (from.reverselight() != 0) {
    set_reverselight(from.reverselight());
  }
  if (from.slop_status() != 0) {
    set_slop_status(from.slop_status());
  }
  if (from.emergency_obstacle() != 0) {
    set_emergency_obstacle(from.emergency_obstacle());
  }
}

void Loncontrol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.Loncontrol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Loncontrol::CopyFrom(const Loncontrol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.Loncontrol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Loncontrol::IsInitialized() const {
  return true;
}

void Loncontrol::Swap(Loncontrol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Loncontrol::InternalSwap(Loncontrol* other) {
  using std::swap;
  swap(targettorque_, other->targettorque_);
  swap(targetpressure_, other->targetpressure_);
  swap(pitch_, other->pitch_);
  swap(targetspeed_, other->targetspeed_);
  swap(targetaccelation_, other->targetaccelation_);
  swap(actuatormode_, other->actuatormode_);
  swap(shiftposition_, other->shiftposition_);
  swap(epbflag_, other->epbflag_);
  swap(brakelight_, other->brakelight_);
  swap(reverselight_, other->reverselight_);
  swap(slop_status_, other->slop_status_);
  swap(emergency_obstacle_, other->emergency_obstacle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Loncontrol::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemControl::InitAsDefaultInstance() {
  ::control_msgs::_SystemControl_default_instance_._instance.get_mutable()->latcontrol_ = const_cast< ::control_msgs::Latcontrol*>(
      ::control_msgs::Latcontrol::internal_default_instance());
  ::control_msgs::_SystemControl_default_instance_._instance.get_mutable()->loncontrol_ = const_cast< ::control_msgs::Loncontrol*>(
      ::control_msgs::Loncontrol::internal_default_instance());
  ::control_msgs::_SystemControl_default_instance_._instance.get_mutable()->hmi_control_ = const_cast< ::control_msgs::BussinessDemand*>(
      ::control_msgs::BussinessDemand::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemControl::kLatcontrolFieldNumber;
const int SystemControl::kLoncontrolFieldNumber;
const int SystemControl::kHmiControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemControl::SystemControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemControl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.SystemControl)
}
SystemControl::SystemControl(const SystemControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_latcontrol()) {
    latcontrol_ = new ::control_msgs::Latcontrol(*from.latcontrol_);
  } else {
    latcontrol_ = NULL;
  }
  if (from.has_loncontrol()) {
    loncontrol_ = new ::control_msgs::Loncontrol(*from.loncontrol_);
  } else {
    loncontrol_ = NULL;
  }
  if (from.has_hmi_control()) {
    hmi_control_ = new ::control_msgs::BussinessDemand(*from.hmi_control_);
  } else {
    hmi_control_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:control_msgs.SystemControl)
}

void SystemControl::SharedCtor() {
  ::memset(&latcontrol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hmi_control_) -
      reinterpret_cast<char*>(&latcontrol_)) + sizeof(hmi_control_));
  _cached_size_ = 0;
}

SystemControl::~SystemControl() {
  // @@protoc_insertion_point(destructor:control_msgs.SystemControl)
  SharedDtor();
}

void SystemControl::SharedDtor() {
  if (this != internal_default_instance()) delete latcontrol_;
  if (this != internal_default_instance()) delete loncontrol_;
  if (this != internal_default_instance()) delete hmi_control_;
}

void SystemControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemControl::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemControl& SystemControl::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemControl();
  return *internal_default_instance();
}

SystemControl* SystemControl::New(::google::protobuf::Arena* arena) const {
  SystemControl* n = new SystemControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemControl::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.SystemControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && latcontrol_ != NULL) {
    delete latcontrol_;
  }
  latcontrol_ = NULL;
  if (GetArenaNoVirtual() == NULL && loncontrol_ != NULL) {
    delete loncontrol_;
  }
  loncontrol_ = NULL;
  if (GetArenaNoVirtual() == NULL && hmi_control_ != NULL) {
    delete hmi_control_;
  }
  hmi_control_ = NULL;
  _internal_metadata_.Clear();
}

bool SystemControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.SystemControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .control_msgs.Latcontrol latcontrol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latcontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .control_msgs.Loncontrol loncontrol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loncontrol()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .control_msgs.BussinessDemand hmi_control = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hmi_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.SystemControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.SystemControl)
  return false;
#undef DO_
}

void SystemControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.SystemControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .control_msgs.Latcontrol latcontrol = 1;
  if (this->has_latcontrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->latcontrol_, output);
  }

  // .control_msgs.Loncontrol loncontrol = 2;
  if (this->has_loncontrol()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->loncontrol_, output);
  }

  // .control_msgs.BussinessDemand hmi_control = 3;
  if (this->has_hmi_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->hmi_control_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.SystemControl)
}

::google::protobuf::uint8* SystemControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.SystemControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .control_msgs.Latcontrol latcontrol = 1;
  if (this->has_latcontrol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->latcontrol_, deterministic, target);
  }

  // .control_msgs.Loncontrol loncontrol = 2;
  if (this->has_loncontrol()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->loncontrol_, deterministic, target);
  }

  // .control_msgs.BussinessDemand hmi_control = 3;
  if (this->has_hmi_control()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->hmi_control_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.SystemControl)
  return target;
}

size_t SystemControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.SystemControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .control_msgs.Latcontrol latcontrol = 1;
  if (this->has_latcontrol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->latcontrol_);
  }

  // .control_msgs.Loncontrol loncontrol = 2;
  if (this->has_loncontrol()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->loncontrol_);
  }

  // .control_msgs.BussinessDemand hmi_control = 3;
  if (this->has_hmi_control()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hmi_control_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.SystemControl)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.SystemControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.SystemControl)
    MergeFrom(*source);
  }
}

void SystemControl::MergeFrom(const SystemControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.SystemControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_latcontrol()) {
    mutable_latcontrol()->::control_msgs::Latcontrol::MergeFrom(from.latcontrol());
  }
  if (from.has_loncontrol()) {
    mutable_loncontrol()->::control_msgs::Loncontrol::MergeFrom(from.loncontrol());
  }
  if (from.has_hmi_control()) {
    mutable_hmi_control()->::control_msgs::BussinessDemand::MergeFrom(from.hmi_control());
  }
}

void SystemControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.SystemControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemControl::CopyFrom(const SystemControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.SystemControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemControl::IsInitialized() const {
  return true;
}

void SystemControl::Swap(SystemControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemControl::InternalSwap(SystemControl* other) {
  using std::swap;
  swap(latcontrol_, other->latcontrol_);
  swap(loncontrol_, other->loncontrol_);
  swap(hmi_control_, other->hmi_control_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemControl::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SystemOverall::InitAsDefaultInstance() {
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->header_ = const_cast< ::common_msgs::Header*>(
      ::common_msgs::Header::internal_default_instance());
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->fault_vec_ = const_cast< ::common_msgs::FaultVec*>(
      ::common_msgs::FaultVec::internal_default_instance());
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->vechle_perception_ = const_cast< ::vehicle_perception_msgs::VehiclePerception*>(
      ::vehicle_perception_msgs::VehiclePerception::internal_default_instance());
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->motion_path_ = const_cast< ::planning_msgs::Trajectory*>(
      ::planning_msgs::Trajectory::internal_default_instance());
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->business_feedback_ = const_cast< ::planning_msgs::Business*>(
      ::planning_msgs::Business::internal_default_instance());
  ::control_msgs::_SystemOverall_default_instance_._instance.get_mutable()->system_control_ = const_cast< ::control_msgs::SystemControl*>(
      ::control_msgs::SystemControl::internal_default_instance());
}
void SystemOverall::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void SystemOverall::clear_fault_vec() {
  if (GetArenaNoVirtual() == NULL && fault_vec_ != NULL) {
    delete fault_vec_;
  }
  fault_vec_ = NULL;
}
void SystemOverall::clear_vechle_perception() {
  if (GetArenaNoVirtual() == NULL && vechle_perception_ != NULL) {
    delete vechle_perception_;
  }
  vechle_perception_ = NULL;
}
void SystemOverall::clear_motion_path() {
  if (GetArenaNoVirtual() == NULL && motion_path_ != NULL) {
    delete motion_path_;
  }
  motion_path_ = NULL;
}
void SystemOverall::clear_business_feedback() {
  if (GetArenaNoVirtual() == NULL && business_feedback_ != NULL) {
    delete business_feedback_;
  }
  business_feedback_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemOverall::kHeaderFieldNumber;
const int SystemOverall::kFaultVecFieldNumber;
const int SystemOverall::kVechlePerceptionFieldNumber;
const int SystemOverall::kMotionPathFieldNumber;
const int SystemOverall::kBusinessFeedbackFieldNumber;
const int SystemOverall::kSystemControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemOverall::SystemOverall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemOverall();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:control_msgs.SystemOverall)
}
SystemOverall::SystemOverall(const SystemOverall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::common_msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_fault_vec()) {
    fault_vec_ = new ::common_msgs::FaultVec(*from.fault_vec_);
  } else {
    fault_vec_ = NULL;
  }
  if (from.has_vechle_perception()) {
    vechle_perception_ = new ::vehicle_perception_msgs::VehiclePerception(*from.vechle_perception_);
  } else {
    vechle_perception_ = NULL;
  }
  if (from.has_motion_path()) {
    motion_path_ = new ::planning_msgs::Trajectory(*from.motion_path_);
  } else {
    motion_path_ = NULL;
  }
  if (from.has_business_feedback()) {
    business_feedback_ = new ::planning_msgs::Business(*from.business_feedback_);
  } else {
    business_feedback_ = NULL;
  }
  if (from.has_system_control()) {
    system_control_ = new ::control_msgs::SystemControl(*from.system_control_);
  } else {
    system_control_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:control_msgs.SystemOverall)
}

void SystemOverall::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&system_control_) -
      reinterpret_cast<char*>(&header_)) + sizeof(system_control_));
  _cached_size_ = 0;
}

SystemOverall::~SystemOverall() {
  // @@protoc_insertion_point(destructor:control_msgs.SystemOverall)
  SharedDtor();
}

void SystemOverall::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete fault_vec_;
  if (this != internal_default_instance()) delete vechle_perception_;
  if (this != internal_default_instance()) delete motion_path_;
  if (this != internal_default_instance()) delete business_feedback_;
  if (this != internal_default_instance()) delete system_control_;
}

void SystemOverall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemOverall::descriptor() {
  ::protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemOverall& SystemOverall::default_instance() {
  ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemOverall();
  return *internal_default_instance();
}

SystemOverall* SystemOverall::New(::google::protobuf::Arena* arena) const {
  SystemOverall* n = new SystemOverall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemOverall::Clear() {
// @@protoc_insertion_point(message_clear_start:control_msgs.SystemOverall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && fault_vec_ != NULL) {
    delete fault_vec_;
  }
  fault_vec_ = NULL;
  if (GetArenaNoVirtual() == NULL && vechle_perception_ != NULL) {
    delete vechle_perception_;
  }
  vechle_perception_ = NULL;
  if (GetArenaNoVirtual() == NULL && motion_path_ != NULL) {
    delete motion_path_;
  }
  motion_path_ = NULL;
  if (GetArenaNoVirtual() == NULL && business_feedback_ != NULL) {
    delete business_feedback_;
  }
  business_feedback_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_control_ != NULL) {
    delete system_control_;
  }
  system_control_ = NULL;
  _internal_metadata_.Clear();
}

bool SystemOverall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:control_msgs.SystemOverall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.FaultVec fault_vec = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fault_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vechle_perception()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning_msgs.Trajectory motion_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_motion_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .planning_msgs.Business business_feedback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_business_feedback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .control_msgs.SystemControl system_control = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:control_msgs.SystemOverall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:control_msgs.SystemOverall)
  return false;
#undef DO_
}

void SystemOverall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:control_msgs.SystemOverall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .common_msgs.FaultVec fault_vec = 2;
  if (this->has_fault_vec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fault_vec_, output);
  }

  // .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
  if (this->has_vechle_perception()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->vechle_perception_, output);
  }

  // .planning_msgs.Trajectory motion_path = 4;
  if (this->has_motion_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->motion_path_, output);
  }

  // .planning_msgs.Business business_feedback = 5;
  if (this->has_business_feedback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->business_feedback_, output);
  }

  // .control_msgs.SystemControl system_control = 6;
  if (this->has_system_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->system_control_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:control_msgs.SystemOverall)
}

::google::protobuf::uint8* SystemOverall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:control_msgs.SystemOverall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // .common_msgs.FaultVec fault_vec = 2;
  if (this->has_fault_vec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->fault_vec_, deterministic, target);
  }

  // .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
  if (this->has_vechle_perception()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->vechle_perception_, deterministic, target);
  }

  // .planning_msgs.Trajectory motion_path = 4;
  if (this->has_motion_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->motion_path_, deterministic, target);
  }

  // .planning_msgs.Business business_feedback = 5;
  if (this->has_business_feedback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->business_feedback_, deterministic, target);
  }

  // .control_msgs.SystemControl system_control = 6;
  if (this->has_system_control()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->system_control_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:control_msgs.SystemOverall)
  return target;
}

size_t SystemOverall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:control_msgs.SystemOverall)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // .common_msgs.FaultVec fault_vec = 2;
  if (this->has_fault_vec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fault_vec_);
  }

  // .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
  if (this->has_vechle_perception()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vechle_perception_);
  }

  // .planning_msgs.Trajectory motion_path = 4;
  if (this->has_motion_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->motion_path_);
  }

  // .planning_msgs.Business business_feedback = 5;
  if (this->has_business_feedback()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->business_feedback_);
  }

  // .control_msgs.SystemControl system_control = 6;
  if (this->has_system_control()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_control_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemOverall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:control_msgs.SystemOverall)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemOverall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemOverall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:control_msgs.SystemOverall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:control_msgs.SystemOverall)
    MergeFrom(*source);
  }
}

void SystemOverall::MergeFrom(const SystemOverall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:control_msgs.SystemOverall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::common_msgs::Header::MergeFrom(from.header());
  }
  if (from.has_fault_vec()) {
    mutable_fault_vec()->::common_msgs::FaultVec::MergeFrom(from.fault_vec());
  }
  if (from.has_vechle_perception()) {
    mutable_vechle_perception()->::vehicle_perception_msgs::VehiclePerception::MergeFrom(from.vechle_perception());
  }
  if (from.has_motion_path()) {
    mutable_motion_path()->::planning_msgs::Trajectory::MergeFrom(from.motion_path());
  }
  if (from.has_business_feedback()) {
    mutable_business_feedback()->::planning_msgs::Business::MergeFrom(from.business_feedback());
  }
  if (from.has_system_control()) {
    mutable_system_control()->::control_msgs::SystemControl::MergeFrom(from.system_control());
  }
}

void SystemOverall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:control_msgs.SystemOverall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemOverall::CopyFrom(const SystemOverall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:control_msgs.SystemOverall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemOverall::IsInitialized() const {
  return true;
}

void SystemOverall::Swap(SystemOverall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemOverall::InternalSwap(SystemOverall* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(fault_vec_, other->fault_vec_);
  swap(vechle_perception_, other->vechle_perception_);
  swap(motion_path_, other->motion_path_);
  swap(business_feedback_, other->business_feedback_);
  swap(system_control_, other->system_control_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemOverall::GetMetadata() const {
  protobuf_control_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_control_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace control_msgs

// @@protoc_insertion_point(global_scope)
