// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception_objects_msgs.proto

#ifndef PROTOBUF_perception_5fobjects_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_perception_5fobjects_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_msgs.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_perception_5fobjects_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsObstacleCellImpl();
void InitDefaultsObstacleCell();
void InitDefaultsObjectImpl();
void InitDefaultsObject();
void InitDefaultsPerceptionObjectsImpl();
void InitDefaultsPerceptionObjects();
inline void InitDefaults() {
  InitDefaultsObstacleCell();
  InitDefaultsObject();
  InitDefaultsPerceptionObjects();
}
}  // namespace protobuf_perception_5fobjects_5fmsgs_2eproto
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class ObstacleCell;
class ObstacleCellDefaultTypeInternal;
extern ObstacleCellDefaultTypeInternal _ObstacleCell_default_instance_;
class PerceptionObjects;
class PerceptionObjectsDefaultTypeInternal;
extern PerceptionObjectsDefaultTypeInternal _PerceptionObjects_default_instance_;

enum Object_ObjectType {
  Object_ObjectType_CAR_TYPE = 0,
  Object_ObjectType_TRUCK_TYPE = 1,
  Object_ObjectType_PEDESTRIAN_TYPE = 2,
  Object_ObjectType_CYCLIST_TYPE = 3,
  Object_ObjectType_UNKNOWN_TYPE = 4,
  Object_ObjectType_UNKNOWN_MOVABLE_TYPE = 5,
  Object_ObjectType_UNKNOWN_UNMOVABLE_TYPE = 6,
  Object_ObjectType_Object_ObjectType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Object_ObjectType_Object_ObjectType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Object_ObjectType_IsValid(int value);
const Object_ObjectType Object_ObjectType_ObjectType_MIN = Object_ObjectType_CAR_TYPE;
const Object_ObjectType Object_ObjectType_ObjectType_MAX = Object_ObjectType_UNKNOWN_UNMOVABLE_TYPE;
const int Object_ObjectType_ObjectType_ARRAYSIZE = Object_ObjectType_ObjectType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_ObjectType_descriptor();
inline const ::std::string& Object_ObjectType_Name(Object_ObjectType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_ObjectType_descriptor(), value);
}
inline bool Object_ObjectType_Parse(
    const ::std::string& name, Object_ObjectType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_ObjectType>(
    Object_ObjectType_descriptor(), name, value);
}
enum Object_IsUltraStatic {
  Object_IsUltraStatic_INVALID = 0,
  Object_IsUltraStatic_FALSE = 1,
  Object_IsUltraStatic_TRUE = 2,
  Object_IsUltraStatic_Object_IsUltraStatic_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Object_IsUltraStatic_Object_IsUltraStatic_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Object_IsUltraStatic_IsValid(int value);
const Object_IsUltraStatic Object_IsUltraStatic_IsUltraStatic_MIN = Object_IsUltraStatic_INVALID;
const Object_IsUltraStatic Object_IsUltraStatic_IsUltraStatic_MAX = Object_IsUltraStatic_TRUE;
const int Object_IsUltraStatic_IsUltraStatic_ARRAYSIZE = Object_IsUltraStatic_IsUltraStatic_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_IsUltraStatic_descriptor();
inline const ::std::string& Object_IsUltraStatic_Name(Object_IsUltraStatic value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_IsUltraStatic_descriptor(), value);
}
inline bool Object_IsUltraStatic_Parse(
    const ::std::string& name, Object_IsUltraStatic* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_IsUltraStatic>(
    Object_IsUltraStatic_descriptor(), name, value);
}
enum Object_MovingStatus {
  Object_MovingStatus_INVALID_STATUS = 0,
  Object_MovingStatus_MOVING = 1,
  Object_MovingStatus_STATIC = 2,
  Object_MovingStatus_MOVABLE = 3,
  Object_MovingStatus_Object_MovingStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Object_MovingStatus_Object_MovingStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Object_MovingStatus_IsValid(int value);
const Object_MovingStatus Object_MovingStatus_MovingStatus_MIN = Object_MovingStatus_INVALID_STATUS;
const Object_MovingStatus Object_MovingStatus_MovingStatus_MAX = Object_MovingStatus_MOVABLE;
const int Object_MovingStatus_MovingStatus_ARRAYSIZE = Object_MovingStatus_MovingStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Object_MovingStatus_descriptor();
inline const ::std::string& Object_MovingStatus_Name(Object_MovingStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Object_MovingStatus_descriptor(), value);
}
inline bool Object_MovingStatus_Parse(
    const ::std::string& name, Object_MovingStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Object_MovingStatus>(
    Object_MovingStatus_descriptor(), name, value);
}
// ===================================================================

class ObstacleCell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ObstacleCell) */ {
 public:
  ObstacleCell();
  virtual ~ObstacleCell();

  ObstacleCell(const ObstacleCell& from);

  inline ObstacleCell& operator=(const ObstacleCell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ObstacleCell(ObstacleCell&& from) noexcept
    : ObstacleCell() {
    *this = ::std::move(from);
  }

  inline ObstacleCell& operator=(ObstacleCell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObstacleCell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObstacleCell* internal_default_instance() {
    return reinterpret_cast<const ObstacleCell*>(
               &_ObstacleCell_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ObstacleCell* other);
  friend void swap(ObstacleCell& a, ObstacleCell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ObstacleCell* New() const PROTOBUF_FINAL { return New(NULL); }

  ObstacleCell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ObstacleCell& from);
  void MergeFrom(const ObstacleCell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ObstacleCell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  double x() const;
  void set_x(double value);

  // double y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  double y() const;
  void set_y(double value);

  // double xg = 4;
  void clear_xg();
  static const int kXgFieldNumber = 4;
  double xg() const;
  void set_xg(double value);

  // double yg = 5;
  void clear_yg();
  static const int kYgFieldNumber = 5;
  double yg() const;
  void set_yg(double value);

  // int32 idc = 1;
  void clear_idc();
  static const int kIdcFieldNumber = 1;
  ::google::protobuf::int32 idc() const;
  void set_idc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ObstacleCell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double xg_;
  double yg_;
  ::google::protobuf::int32 idc_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_5fobjects_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObstacleCellImpl();
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const PROTOBUF_FINAL { return New(NULL); }

  Object* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Object_ObjectType ObjectType;
  static const ObjectType CAR_TYPE =
    Object_ObjectType_CAR_TYPE;
  static const ObjectType TRUCK_TYPE =
    Object_ObjectType_TRUCK_TYPE;
  static const ObjectType PEDESTRIAN_TYPE =
    Object_ObjectType_PEDESTRIAN_TYPE;
  static const ObjectType CYCLIST_TYPE =
    Object_ObjectType_CYCLIST_TYPE;
  static const ObjectType UNKNOWN_TYPE =
    Object_ObjectType_UNKNOWN_TYPE;
  static const ObjectType UNKNOWN_MOVABLE_TYPE =
    Object_ObjectType_UNKNOWN_MOVABLE_TYPE;
  static const ObjectType UNKNOWN_UNMOVABLE_TYPE =
    Object_ObjectType_UNKNOWN_UNMOVABLE_TYPE;
  static inline bool ObjectType_IsValid(int value) {
    return Object_ObjectType_IsValid(value);
  }
  static const ObjectType ObjectType_MIN =
    Object_ObjectType_ObjectType_MIN;
  static const ObjectType ObjectType_MAX =
    Object_ObjectType_ObjectType_MAX;
  static const int ObjectType_ARRAYSIZE =
    Object_ObjectType_ObjectType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ObjectType_descriptor() {
    return Object_ObjectType_descriptor();
  }
  static inline const ::std::string& ObjectType_Name(ObjectType value) {
    return Object_ObjectType_Name(value);
  }
  static inline bool ObjectType_Parse(const ::std::string& name,
      ObjectType* value) {
    return Object_ObjectType_Parse(name, value);
  }

  typedef Object_IsUltraStatic IsUltraStatic;
  static const IsUltraStatic INVALID =
    Object_IsUltraStatic_INVALID;
  static const IsUltraStatic FALSE =
    Object_IsUltraStatic_FALSE;
  static const IsUltraStatic TRUE =
    Object_IsUltraStatic_TRUE;
  static inline bool IsUltraStatic_IsValid(int value) {
    return Object_IsUltraStatic_IsValid(value);
  }
  static const IsUltraStatic IsUltraStatic_MIN =
    Object_IsUltraStatic_IsUltraStatic_MIN;
  static const IsUltraStatic IsUltraStatic_MAX =
    Object_IsUltraStatic_IsUltraStatic_MAX;
  static const int IsUltraStatic_ARRAYSIZE =
    Object_IsUltraStatic_IsUltraStatic_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IsUltraStatic_descriptor() {
    return Object_IsUltraStatic_descriptor();
  }
  static inline const ::std::string& IsUltraStatic_Name(IsUltraStatic value) {
    return Object_IsUltraStatic_Name(value);
  }
  static inline bool IsUltraStatic_Parse(const ::std::string& name,
      IsUltraStatic* value) {
    return Object_IsUltraStatic_Parse(name, value);
  }

  typedef Object_MovingStatus MovingStatus;
  static const MovingStatus INVALID_STATUS =
    Object_MovingStatus_INVALID_STATUS;
  static const MovingStatus MOVING =
    Object_MovingStatus_MOVING;
  static const MovingStatus STATIC =
    Object_MovingStatus_STATIC;
  static const MovingStatus MOVABLE =
    Object_MovingStatus_MOVABLE;
  static inline bool MovingStatus_IsValid(int value) {
    return Object_MovingStatus_IsValid(value);
  }
  static const MovingStatus MovingStatus_MIN =
    Object_MovingStatus_MovingStatus_MIN;
  static const MovingStatus MovingStatus_MAX =
    Object_MovingStatus_MovingStatus_MAX;
  static const int MovingStatus_ARRAYSIZE =
    Object_MovingStatus_MovingStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MovingStatus_descriptor() {
    return Object_MovingStatus_descriptor();
  }
  static inline const ::std::string& MovingStatus_Name(MovingStatus value) {
    return Object_MovingStatus_Name(value);
  }
  static inline bool MovingStatus_Parse(const ::std::string& name,
      MovingStatus* value) {
    return Object_MovingStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .ObstacleCell cells = 23;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 23;
  const ::ObstacleCell& cells(int index) const;
  ::ObstacleCell* mutable_cells(int index);
  ::ObstacleCell* add_cells();
  ::google::protobuf::RepeatedPtrField< ::ObstacleCell >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::ObstacleCell >&
      cells() const;

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float z = 4;
  void clear_z();
  static const int kZFieldNumber = 4;
  float z() const;
  void set_z(float value);

  // float vxrel = 5;
  void clear_vxrel();
  static const int kVxrelFieldNumber = 5;
  float vxrel() const;
  void set_vxrel(float value);

  // float vyrel = 6;
  void clear_vyrel();
  static const int kVyrelFieldNumber = 6;
  float vyrel() const;
  void set_vyrel(float value);

  // double xabs = 7;
  void clear_xabs();
  static const int kXabsFieldNumber = 7;
  double xabs() const;
  void set_xabs(double value);

  // double yabs = 8;
  void clear_yabs();
  static const int kYabsFieldNumber = 8;
  double yabs() const;
  void set_yabs(double value);

  // float vxabs = 9;
  void clear_vxabs();
  static const int kVxabsFieldNumber = 9;
  float vxabs() const;
  void set_vxabs(float value);

  // float vyabs = 10;
  void clear_vyabs();
  static const int kVyabsFieldNumber = 10;
  float vyabs() const;
  void set_vyabs(float value);

  // float width = 11;
  void clear_width();
  static const int kWidthFieldNumber = 11;
  float width() const;
  void set_width(float value);

  // float length = 12;
  void clear_length();
  static const int kLengthFieldNumber = 12;
  float length() const;
  void set_length(float value);

  // float height = 13;
  void clear_height();
  static const int kHeightFieldNumber = 13;
  float height() const;
  void set_height(float value);

  // float speed = 14;
  void clear_speed();
  static const int kSpeedFieldNumber = 14;
  float speed() const;
  void set_speed(float value);

  // float acceleration = 15;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 15;
  float acceleration() const;
  void set_acceleration(float value);

  // float heading = 16;
  void clear_heading();
  static const int kHeadingFieldNumber = 16;
  float heading() const;
  void set_heading(float value);

  // .Object.ObjectType type = 17;
  void clear_type();
  static const int kTypeFieldNumber = 17;
  ::Object_ObjectType type() const;
  void set_type(::Object_ObjectType value);

  // uint32 source = 18;
  void clear_source();
  static const int kSourceFieldNumber = 18;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // float confidence = 19;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 19;
  float confidence() const;
  void set_confidence(float value);

  // uint32 age = 20;
  void clear_age();
  static const int kAgeFieldNumber = 20;
  ::google::protobuf::uint32 age() const;
  void set_age(::google::protobuf::uint32 value);

  // .Object.IsUltraStatic is_ultra_static = 21;
  void clear_is_ultra_static();
  static const int kIsUltraStaticFieldNumber = 21;
  ::Object_IsUltraStatic is_ultra_static() const;
  void set_is_ultra_static(::Object_IsUltraStatic value);

  // .Object.MovingStatus moving_status = 22;
  void clear_moving_status();
  static const int kMovingStatusFieldNumber = 22;
  ::Object_MovingStatus moving_status() const;
  void set_moving_status(::Object_MovingStatus value);

  // @@protoc_insertion_point(class_scope:Object)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ObstacleCell > cells_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float z_;
  float vxrel_;
  float vyrel_;
  double xabs_;
  double yabs_;
  float vxabs_;
  float vyabs_;
  float width_;
  float length_;
  float height_;
  float speed_;
  float acceleration_;
  float heading_;
  int type_;
  ::google::protobuf::uint32 source_;
  float confidence_;
  ::google::protobuf::uint32 age_;
  int is_ultra_static_;
  int moving_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_5fobjects_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsObjectImpl();
};
// -------------------------------------------------------------------

class PerceptionObjects : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PerceptionObjects) */ {
 public:
  PerceptionObjects();
  virtual ~PerceptionObjects();

  PerceptionObjects(const PerceptionObjects& from);

  inline PerceptionObjects& operator=(const PerceptionObjects& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerceptionObjects(PerceptionObjects&& from) noexcept
    : PerceptionObjects() {
    *this = ::std::move(from);
  }

  inline PerceptionObjects& operator=(PerceptionObjects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerceptionObjects& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerceptionObjects* internal_default_instance() {
    return reinterpret_cast<const PerceptionObjects*>(
               &_PerceptionObjects_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PerceptionObjects* other);
  friend void swap(PerceptionObjects& a, PerceptionObjects& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerceptionObjects* New() const PROTOBUF_FINAL { return New(NULL); }

  PerceptionObjects* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PerceptionObjects& from);
  void MergeFrom(const PerceptionObjects& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PerceptionObjects* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Object objs = 2;
  int objs_size() const;
  void clear_objs();
  static const int kObjsFieldNumber = 2;
  const ::Object& objs(int index) const;
  ::Object* mutable_objs(int index);
  ::Object* add_objs();
  ::google::protobuf::RepeatedPtrField< ::Object >*
      mutable_objs();
  const ::google::protobuf::RepeatedPtrField< ::Object >&
      objs() const;

  // repeated .ObstacleCell cells = 3;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 3;
  const ::ObstacleCell& cells(int index) const;
  ::ObstacleCell* mutable_cells(int index);
  ::ObstacleCell* add_cells();
  ::google::protobuf::RepeatedPtrField< ::ObstacleCell >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::ObstacleCell >&
      cells() const;

  // .common_msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::common_msgs::Header& header() const;
  ::common_msgs::Header* release_header();
  ::common_msgs::Header* mutable_header();
  void set_allocated_header(::common_msgs::Header* header);

  // @@protoc_insertion_point(class_scope:PerceptionObjects)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Object > objs_;
  ::google::protobuf::RepeatedPtrField< ::ObstacleCell > cells_;
  ::common_msgs::Header* header_;
  mutable int _cached_size_;
  friend struct ::protobuf_perception_5fobjects_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_perception_5fobjects_5fmsgs_2eproto::InitDefaultsPerceptionObjectsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ObstacleCell

// int32 idc = 1;
inline void ObstacleCell::clear_idc() {
  idc_ = 0;
}
inline ::google::protobuf::int32 ObstacleCell::idc() const {
  // @@protoc_insertion_point(field_get:ObstacleCell.idc)
  return idc_;
}
inline void ObstacleCell::set_idc(::google::protobuf::int32 value) {
  
  idc_ = value;
  // @@protoc_insertion_point(field_set:ObstacleCell.idc)
}

// double x = 2;
inline void ObstacleCell::clear_x() {
  x_ = 0;
}
inline double ObstacleCell::x() const {
  // @@protoc_insertion_point(field_get:ObstacleCell.x)
  return x_;
}
inline void ObstacleCell::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ObstacleCell.x)
}

// double y = 3;
inline void ObstacleCell::clear_y() {
  y_ = 0;
}
inline double ObstacleCell::y() const {
  // @@protoc_insertion_point(field_get:ObstacleCell.y)
  return y_;
}
inline void ObstacleCell::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ObstacleCell.y)
}

// double xg = 4;
inline void ObstacleCell::clear_xg() {
  xg_ = 0;
}
inline double ObstacleCell::xg() const {
  // @@protoc_insertion_point(field_get:ObstacleCell.xg)
  return xg_;
}
inline void ObstacleCell::set_xg(double value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:ObstacleCell.xg)
}

// double yg = 5;
inline void ObstacleCell::clear_yg() {
  yg_ = 0;
}
inline double ObstacleCell::yg() const {
  // @@protoc_insertion_point(field_get:ObstacleCell.yg)
  return yg_;
}
inline void ObstacleCell::set_yg(double value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:ObstacleCell.yg)
}

// -------------------------------------------------------------------

// Object

// uint32 id = 1;
inline void Object::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Object::id() const {
  // @@protoc_insertion_point(field_get:Object.id)
  return id_;
}
inline void Object::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Object.id)
}

// float x = 2;
inline void Object::clear_x() {
  x_ = 0;
}
inline float Object::x() const {
  // @@protoc_insertion_point(field_get:Object.x)
  return x_;
}
inline void Object::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Object.x)
}

// float y = 3;
inline void Object::clear_y() {
  y_ = 0;
}
inline float Object::y() const {
  // @@protoc_insertion_point(field_get:Object.y)
  return y_;
}
inline void Object::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Object.y)
}

// float z = 4;
inline void Object::clear_z() {
  z_ = 0;
}
inline float Object::z() const {
  // @@protoc_insertion_point(field_get:Object.z)
  return z_;
}
inline void Object::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Object.z)
}

// float vxrel = 5;
inline void Object::clear_vxrel() {
  vxrel_ = 0;
}
inline float Object::vxrel() const {
  // @@protoc_insertion_point(field_get:Object.vxrel)
  return vxrel_;
}
inline void Object::set_vxrel(float value) {
  
  vxrel_ = value;
  // @@protoc_insertion_point(field_set:Object.vxrel)
}

// float vyrel = 6;
inline void Object::clear_vyrel() {
  vyrel_ = 0;
}
inline float Object::vyrel() const {
  // @@protoc_insertion_point(field_get:Object.vyrel)
  return vyrel_;
}
inline void Object::set_vyrel(float value) {
  
  vyrel_ = value;
  // @@protoc_insertion_point(field_set:Object.vyrel)
}

// double xabs = 7;
inline void Object::clear_xabs() {
  xabs_ = 0;
}
inline double Object::xabs() const {
  // @@protoc_insertion_point(field_get:Object.xabs)
  return xabs_;
}
inline void Object::set_xabs(double value) {
  
  xabs_ = value;
  // @@protoc_insertion_point(field_set:Object.xabs)
}

// double yabs = 8;
inline void Object::clear_yabs() {
  yabs_ = 0;
}
inline double Object::yabs() const {
  // @@protoc_insertion_point(field_get:Object.yabs)
  return yabs_;
}
inline void Object::set_yabs(double value) {
  
  yabs_ = value;
  // @@protoc_insertion_point(field_set:Object.yabs)
}

// float vxabs = 9;
inline void Object::clear_vxabs() {
  vxabs_ = 0;
}
inline float Object::vxabs() const {
  // @@protoc_insertion_point(field_get:Object.vxabs)
  return vxabs_;
}
inline void Object::set_vxabs(float value) {
  
  vxabs_ = value;
  // @@protoc_insertion_point(field_set:Object.vxabs)
}

// float vyabs = 10;
inline void Object::clear_vyabs() {
  vyabs_ = 0;
}
inline float Object::vyabs() const {
  // @@protoc_insertion_point(field_get:Object.vyabs)
  return vyabs_;
}
inline void Object::set_vyabs(float value) {
  
  vyabs_ = value;
  // @@protoc_insertion_point(field_set:Object.vyabs)
}

// float width = 11;
inline void Object::clear_width() {
  width_ = 0;
}
inline float Object::width() const {
  // @@protoc_insertion_point(field_get:Object.width)
  return width_;
}
inline void Object::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Object.width)
}

// float length = 12;
inline void Object::clear_length() {
  length_ = 0;
}
inline float Object::length() const {
  // @@protoc_insertion_point(field_get:Object.length)
  return length_;
}
inline void Object::set_length(float value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:Object.length)
}

// float height = 13;
inline void Object::clear_height() {
  height_ = 0;
}
inline float Object::height() const {
  // @@protoc_insertion_point(field_get:Object.height)
  return height_;
}
inline void Object::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Object.height)
}

// float speed = 14;
inline void Object::clear_speed() {
  speed_ = 0;
}
inline float Object::speed() const {
  // @@protoc_insertion_point(field_get:Object.speed)
  return speed_;
}
inline void Object::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Object.speed)
}

// float acceleration = 15;
inline void Object::clear_acceleration() {
  acceleration_ = 0;
}
inline float Object::acceleration() const {
  // @@protoc_insertion_point(field_get:Object.acceleration)
  return acceleration_;
}
inline void Object::set_acceleration(float value) {
  
  acceleration_ = value;
  // @@protoc_insertion_point(field_set:Object.acceleration)
}

// float heading = 16;
inline void Object::clear_heading() {
  heading_ = 0;
}
inline float Object::heading() const {
  // @@protoc_insertion_point(field_get:Object.heading)
  return heading_;
}
inline void Object::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:Object.heading)
}

// .Object.ObjectType type = 17;
inline void Object::clear_type() {
  type_ = 0;
}
inline ::Object_ObjectType Object::type() const {
  // @@protoc_insertion_point(field_get:Object.type)
  return static_cast< ::Object_ObjectType >(type_);
}
inline void Object::set_type(::Object_ObjectType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Object.type)
}

// uint32 source = 18;
inline void Object::clear_source() {
  source_ = 0u;
}
inline ::google::protobuf::uint32 Object::source() const {
  // @@protoc_insertion_point(field_get:Object.source)
  return source_;
}
inline void Object::set_source(::google::protobuf::uint32 value) {
  
  source_ = value;
  // @@protoc_insertion_point(field_set:Object.source)
}

// float confidence = 19;
inline void Object::clear_confidence() {
  confidence_ = 0;
}
inline float Object::confidence() const {
  // @@protoc_insertion_point(field_get:Object.confidence)
  return confidence_;
}
inline void Object::set_confidence(float value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:Object.confidence)
}

// uint32 age = 20;
inline void Object::clear_age() {
  age_ = 0u;
}
inline ::google::protobuf::uint32 Object::age() const {
  // @@protoc_insertion_point(field_get:Object.age)
  return age_;
}
inline void Object::set_age(::google::protobuf::uint32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:Object.age)
}

// .Object.IsUltraStatic is_ultra_static = 21;
inline void Object::clear_is_ultra_static() {
  is_ultra_static_ = 0;
}
inline ::Object_IsUltraStatic Object::is_ultra_static() const {
  // @@protoc_insertion_point(field_get:Object.is_ultra_static)
  return static_cast< ::Object_IsUltraStatic >(is_ultra_static_);
}
inline void Object::set_is_ultra_static(::Object_IsUltraStatic value) {
  
  is_ultra_static_ = value;
  // @@protoc_insertion_point(field_set:Object.is_ultra_static)
}

// .Object.MovingStatus moving_status = 22;
inline void Object::clear_moving_status() {
  moving_status_ = 0;
}
inline ::Object_MovingStatus Object::moving_status() const {
  // @@protoc_insertion_point(field_get:Object.moving_status)
  return static_cast< ::Object_MovingStatus >(moving_status_);
}
inline void Object::set_moving_status(::Object_MovingStatus value) {
  
  moving_status_ = value;
  // @@protoc_insertion_point(field_set:Object.moving_status)
}

// repeated .ObstacleCell cells = 23;
inline int Object::cells_size() const {
  return cells_.size();
}
inline void Object::clear_cells() {
  cells_.Clear();
}
inline const ::ObstacleCell& Object::cells(int index) const {
  // @@protoc_insertion_point(field_get:Object.cells)
  return cells_.Get(index);
}
inline ::ObstacleCell* Object::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:Object.cells)
  return cells_.Mutable(index);
}
inline ::ObstacleCell* Object::add_cells() {
  // @@protoc_insertion_point(field_add:Object.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ObstacleCell >*
Object::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:Object.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ObstacleCell >&
Object::cells() const {
  // @@protoc_insertion_point(field_list:Object.cells)
  return cells_;
}

// -------------------------------------------------------------------

// PerceptionObjects

// .common_msgs.Header header = 1;
inline bool PerceptionObjects::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::common_msgs::Header& PerceptionObjects::header() const {
  const ::common_msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:PerceptionObjects.header)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Header*>(
      &::common_msgs::_Header_default_instance_);
}
inline ::common_msgs::Header* PerceptionObjects::release_header() {
  // @@protoc_insertion_point(field_release:PerceptionObjects.header)
  
  ::common_msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::common_msgs::Header* PerceptionObjects::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::common_msgs::Header;
  }
  // @@protoc_insertion_point(field_mutable:PerceptionObjects.header)
  return header_;
}
inline void PerceptionObjects::set_allocated_header(::common_msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:PerceptionObjects.header)
}

// repeated .Object objs = 2;
inline int PerceptionObjects::objs_size() const {
  return objs_.size();
}
inline void PerceptionObjects::clear_objs() {
  objs_.Clear();
}
inline const ::Object& PerceptionObjects::objs(int index) const {
  // @@protoc_insertion_point(field_get:PerceptionObjects.objs)
  return objs_.Get(index);
}
inline ::Object* PerceptionObjects::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:PerceptionObjects.objs)
  return objs_.Mutable(index);
}
inline ::Object* PerceptionObjects::add_objs() {
  // @@protoc_insertion_point(field_add:PerceptionObjects.objs)
  return objs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Object >*
PerceptionObjects::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:PerceptionObjects.objs)
  return &objs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Object >&
PerceptionObjects::objs() const {
  // @@protoc_insertion_point(field_list:PerceptionObjects.objs)
  return objs_;
}

// repeated .ObstacleCell cells = 3;
inline int PerceptionObjects::cells_size() const {
  return cells_.size();
}
inline void PerceptionObjects::clear_cells() {
  cells_.Clear();
}
inline const ::ObstacleCell& PerceptionObjects::cells(int index) const {
  // @@protoc_insertion_point(field_get:PerceptionObjects.cells)
  return cells_.Get(index);
}
inline ::ObstacleCell* PerceptionObjects::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:PerceptionObjects.cells)
  return cells_.Mutable(index);
}
inline ::ObstacleCell* PerceptionObjects::add_cells() {
  // @@protoc_insertion_point(field_add:PerceptionObjects.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ObstacleCell >*
PerceptionObjects::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:PerceptionObjects.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ObstacleCell >&
PerceptionObjects::cells() const {
  // @@protoc_insertion_point(field_list:PerceptionObjects.cells)
  return cells_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Object_ObjectType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Object_ObjectType>() {
  return ::Object_ObjectType_descriptor();
}
template <> struct is_proto_enum< ::Object_IsUltraStatic> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Object_IsUltraStatic>() {
  return ::Object_IsUltraStatic_descriptor();
}
template <> struct is_proto_enum< ::Object_MovingStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Object_MovingStatus>() {
  return ::Object_MovingStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_perception_5fobjects_5fmsgs_2eproto__INCLUDED
