// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perception_barricade.proto

#include "perception_barricade.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace calmcar {
namespace perception {
class BarricadeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Barricade>
      _instance;
} _Barricade_default_instance_;
}  // namespace perception
}  // namespace calmcar
namespace protobuf_perception_5fbarricade_2eproto {
void InitDefaultsBarricadeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::calmcar::perception::_Barricade_default_instance_;
    new (ptr) ::calmcar::perception::Barricade();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::calmcar::perception::Barricade::InitAsDefaultInstance();
}

void InitDefaultsBarricade() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBarricadeImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, frame_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, camera_position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, class__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, class_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, subclass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, subclass_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, age_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, width_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, height_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, height_from_groud_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, height_from_groud_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, lat_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, lat_distance_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, long_distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, long_distance_std_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::calmcar::perception::Barricade, length_std_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::calmcar::perception::Barricade)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::calmcar::perception::_Barricade_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "perception_barricade.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032perception_barricade.proto\022\022calmcar.pe"
      "rception\032\034perception_sensor_info.proto\"\373"
      "\003\n\tBarricade\022\023\n\013frame_index\030\001 \001(\003\022\021\n\ttim"
      "estamp\030\002 \001(\003\022@\n\017camera_position\030\003 \001(\0162\'."
      "calmcar.perception.CameraInfo.Position\022\n"
      "\n\002id\030\004 \001(\003\022\016\n\006class_\030\005 \001(\003\022\022\n\nclass_name"
      "\030\006 \001(\t\022\020\n\010subclass\030\007 \001(\003\022\025\n\rsubclass_nam"
      "e\030\010 \001(\t\022\022\n\nconfidence\030\t \001(\002\022\021\n\tage_count"
      "\030\n \001(\003\022\r\n\005width\030\013 \001(\002\022\021\n\twidth_std\030\014 \001(\002"
      "\022\016\n\006height\030\r \001(\002\022\022\n\nheight_std\030\016 \001(\002\022\031\n\021"
      "height_from_groud\030\017 \001(\002\022\035\n\025height_from_g"
      "roud_std\030\020 \001(\002\022\024\n\014lat_distance\030\021 \001(\002\022\030\n\020"
      "lat_distance_std\030\022 \001(\002\022\025\n\rlong_distance\030"
      "\023 \001(\002\022\031\n\021long_distance_std\030\024 \001(\002\022\016\n\006leng"
      "th\030\025 \001(\002\022\022\n\nlength_std\030\026 \001(\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 596);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "perception_barricade.proto", &protobuf_RegisterTypes);
  ::protobuf_perception_5fsensor_5finfo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_perception_5fbarricade_2eproto
namespace calmcar {
namespace perception {

// ===================================================================

void Barricade::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Barricade::kFrameIndexFieldNumber;
const int Barricade::kTimestampFieldNumber;
const int Barricade::kCameraPositionFieldNumber;
const int Barricade::kIdFieldNumber;
const int Barricade::kClassFieldNumber;
const int Barricade::kClassNameFieldNumber;
const int Barricade::kSubclassFieldNumber;
const int Barricade::kSubclassNameFieldNumber;
const int Barricade::kConfidenceFieldNumber;
const int Barricade::kAgeCountFieldNumber;
const int Barricade::kWidthFieldNumber;
const int Barricade::kWidthStdFieldNumber;
const int Barricade::kHeightFieldNumber;
const int Barricade::kHeightStdFieldNumber;
const int Barricade::kHeightFromGroudFieldNumber;
const int Barricade::kHeightFromGroudStdFieldNumber;
const int Barricade::kLatDistanceFieldNumber;
const int Barricade::kLatDistanceStdFieldNumber;
const int Barricade::kLongDistanceFieldNumber;
const int Barricade::kLongDistanceStdFieldNumber;
const int Barricade::kLengthFieldNumber;
const int Barricade::kLengthStdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Barricade::Barricade()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_perception_5fbarricade_2eproto::InitDefaultsBarricade();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:calmcar.perception.Barricade)
}
Barricade::Barricade(const Barricade& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_name().size() > 0) {
    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  subclass_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subclass_name().size() > 0) {
    subclass_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subclass_name_);
  }
  ::memcpy(&frame_index_, &from.frame_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_std_) -
    reinterpret_cast<char*>(&frame_index_)) + sizeof(length_std_));
  // @@protoc_insertion_point(copy_constructor:calmcar.perception.Barricade)
}

void Barricade::SharedCtor() {
  class_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subclass_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frame_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_std_) -
      reinterpret_cast<char*>(&frame_index_)) + sizeof(length_std_));
  _cached_size_ = 0;
}

Barricade::~Barricade() {
  // @@protoc_insertion_point(destructor:calmcar.perception.Barricade)
  SharedDtor();
}

void Barricade::SharedDtor() {
  class_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subclass_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Barricade::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Barricade::descriptor() {
  ::protobuf_perception_5fbarricade_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fbarricade_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Barricade& Barricade::default_instance() {
  ::protobuf_perception_5fbarricade_2eproto::InitDefaultsBarricade();
  return *internal_default_instance();
}

Barricade* Barricade::New(::google::protobuf::Arena* arena) const {
  Barricade* n = new Barricade;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Barricade::Clear() {
// @@protoc_insertion_point(message_clear_start:calmcar.perception.Barricade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subclass_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&frame_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_std_) -
      reinterpret_cast<char*>(&frame_index_)) + sizeof(length_std_));
  _internal_metadata_.Clear();
}

bool Barricade::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:calmcar.perception.Barricade)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 frame_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &frame_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .calmcar.perception.CameraInfo.Position camera_position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_camera_position(static_cast< ::calmcar::perception::CameraInfo_Position >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 class_ = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &class__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string class_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_name().data(), static_cast<int>(this->class_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "calmcar.perception.Barricade.class_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 subclass = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &subclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subclass_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subclass_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subclass_name().data(), static_cast<int>(this->subclass_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "calmcar.perception.Barricade.subclass_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float confidence = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 age_count = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &age_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float width_std = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(101u /* 101 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &width_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height_std = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height_from_groud = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_from_groud_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float height_from_groud_std = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &height_from_groud_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lat_distance = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float lat_distance_std = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lat_distance_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float long_distance = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &long_distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float long_distance_std = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 165 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &long_distance_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(173u /* 173 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float length_std = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(181u /* 181 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &length_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:calmcar.perception.Barricade)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:calmcar.perception.Barricade)
  return false;
#undef DO_
}

void Barricade::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:calmcar.perception.Barricade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frame_index = 1;
  if (this->frame_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->frame_index(), output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // .calmcar.perception.CameraInfo.Position camera_position = 3;
  if (this->camera_position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->camera_position(), output);
  }

  // int64 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->id(), output);
  }

  // int64 class_ = 5;
  if (this->class_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->class_(), output);
  }

  // string class_name = 6;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "calmcar.perception.Barricade.class_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->class_name(), output);
  }

  // int64 subclass = 7;
  if (this->subclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->subclass(), output);
  }

  // string subclass_name = 8;
  if (this->subclass_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subclass_name().data(), static_cast<int>(this->subclass_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "calmcar.perception.Barricade.subclass_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->subclass_name(), output);
  }

  // float confidence = 9;
  if (this->confidence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->confidence(), output);
  }

  // int64 age_count = 10;
  if (this->age_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->age_count(), output);
  }

  // float width = 11;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->width(), output);
  }

  // float width_std = 12;
  if (this->width_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(12, this->width_std(), output);
  }

  // float height = 13;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->height(), output);
  }

  // float height_std = 14;
  if (this->height_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->height_std(), output);
  }

  // float height_from_groud = 15;
  if (this->height_from_groud() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->height_from_groud(), output);
  }

  // float height_from_groud_std = 16;
  if (this->height_from_groud_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->height_from_groud_std(), output);
  }

  // float lat_distance = 17;
  if (this->lat_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->lat_distance(), output);
  }

  // float lat_distance_std = 18;
  if (this->lat_distance_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->lat_distance_std(), output);
  }

  // float long_distance = 19;
  if (this->long_distance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->long_distance(), output);
  }

  // float long_distance_std = 20;
  if (this->long_distance_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->long_distance_std(), output);
  }

  // float length = 21;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->length(), output);
  }

  // float length_std = 22;
  if (this->length_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->length_std(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:calmcar.perception.Barricade)
}

::google::protobuf::uint8* Barricade::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:calmcar.perception.Barricade)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 frame_index = 1;
  if (this->frame_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->frame_index(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // .calmcar.perception.CameraInfo.Position camera_position = 3;
  if (this->camera_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->camera_position(), target);
  }

  // int64 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->id(), target);
  }

  // int64 class_ = 5;
  if (this->class_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->class_(), target);
  }

  // string class_name = 6;
  if (this->class_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_name().data(), static_cast<int>(this->class_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "calmcar.perception.Barricade.class_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->class_name(), target);
  }

  // int64 subclass = 7;
  if (this->subclass() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->subclass(), target);
  }

  // string subclass_name = 8;
  if (this->subclass_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subclass_name().data(), static_cast<int>(this->subclass_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "calmcar.perception.Barricade.subclass_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->subclass_name(), target);
  }

  // float confidence = 9;
  if (this->confidence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->confidence(), target);
  }

  // int64 age_count = 10;
  if (this->age_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->age_count(), target);
  }

  // float width = 11;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->width(), target);
  }

  // float width_std = 12;
  if (this->width_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(12, this->width_std(), target);
  }

  // float height = 13;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->height(), target);
  }

  // float height_std = 14;
  if (this->height_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->height_std(), target);
  }

  // float height_from_groud = 15;
  if (this->height_from_groud() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->height_from_groud(), target);
  }

  // float height_from_groud_std = 16;
  if (this->height_from_groud_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->height_from_groud_std(), target);
  }

  // float lat_distance = 17;
  if (this->lat_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->lat_distance(), target);
  }

  // float lat_distance_std = 18;
  if (this->lat_distance_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->lat_distance_std(), target);
  }

  // float long_distance = 19;
  if (this->long_distance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->long_distance(), target);
  }

  // float long_distance_std = 20;
  if (this->long_distance_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->long_distance_std(), target);
  }

  // float length = 21;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->length(), target);
  }

  // float length_std = 22;
  if (this->length_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->length_std(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:calmcar.perception.Barricade)
  return target;
}

size_t Barricade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:calmcar.perception.Barricade)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string class_name = 6;
  if (this->class_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_name());
  }

  // string subclass_name = 8;
  if (this->subclass_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subclass_name());
  }

  // int64 frame_index = 1;
  if (this->frame_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->frame_index());
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int64 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // int64 class_ = 5;
  if (this->class_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->class_());
  }

  // .calmcar.perception.CameraInfo.Position camera_position = 3;
  if (this->camera_position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->camera_position());
  }

  // float confidence = 9;
  if (this->confidence() != 0) {
    total_size += 1 + 4;
  }

  // int64 subclass = 7;
  if (this->subclass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->subclass());
  }

  // int64 age_count = 10;
  if (this->age_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->age_count());
  }

  // float width = 11;
  if (this->width() != 0) {
    total_size += 1 + 4;
  }

  // float width_std = 12;
  if (this->width_std() != 0) {
    total_size += 1 + 4;
  }

  // float height = 13;
  if (this->height() != 0) {
    total_size += 1 + 4;
  }

  // float height_std = 14;
  if (this->height_std() != 0) {
    total_size += 1 + 4;
  }

  // float height_from_groud = 15;
  if (this->height_from_groud() != 0) {
    total_size += 1 + 4;
  }

  // float height_from_groud_std = 16;
  if (this->height_from_groud_std() != 0) {
    total_size += 2 + 4;
  }

  // float lat_distance = 17;
  if (this->lat_distance() != 0) {
    total_size += 2 + 4;
  }

  // float lat_distance_std = 18;
  if (this->lat_distance_std() != 0) {
    total_size += 2 + 4;
  }

  // float long_distance = 19;
  if (this->long_distance() != 0) {
    total_size += 2 + 4;
  }

  // float long_distance_std = 20;
  if (this->long_distance_std() != 0) {
    total_size += 2 + 4;
  }

  // float length = 21;
  if (this->length() != 0) {
    total_size += 2 + 4;
  }

  // float length_std = 22;
  if (this->length_std() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Barricade::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:calmcar.perception.Barricade)
  GOOGLE_DCHECK_NE(&from, this);
  const Barricade* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Barricade>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:calmcar.perception.Barricade)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:calmcar.perception.Barricade)
    MergeFrom(*source);
  }
}

void Barricade::MergeFrom(const Barricade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:calmcar.perception.Barricade)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.class_name().size() > 0) {

    class_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class_name_);
  }
  if (from.subclass_name().size() > 0) {

    subclass_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subclass_name_);
  }
  if (from.frame_index() != 0) {
    set_frame_index(from.frame_index());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.class_() != 0) {
    set_class_(from.class_());
  }
  if (from.camera_position() != 0) {
    set_camera_position(from.camera_position());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.subclass() != 0) {
    set_subclass(from.subclass());
  }
  if (from.age_count() != 0) {
    set_age_count(from.age_count());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.width_std() != 0) {
    set_width_std(from.width_std());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.height_std() != 0) {
    set_height_std(from.height_std());
  }
  if (from.height_from_groud() != 0) {
    set_height_from_groud(from.height_from_groud());
  }
  if (from.height_from_groud_std() != 0) {
    set_height_from_groud_std(from.height_from_groud_std());
  }
  if (from.lat_distance() != 0) {
    set_lat_distance(from.lat_distance());
  }
  if (from.lat_distance_std() != 0) {
    set_lat_distance_std(from.lat_distance_std());
  }
  if (from.long_distance() != 0) {
    set_long_distance(from.long_distance());
  }
  if (from.long_distance_std() != 0) {
    set_long_distance_std(from.long_distance_std());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.length_std() != 0) {
    set_length_std(from.length_std());
  }
}

void Barricade::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:calmcar.perception.Barricade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Barricade::CopyFrom(const Barricade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:calmcar.perception.Barricade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Barricade::IsInitialized() const {
  return true;
}

void Barricade::Swap(Barricade* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Barricade::InternalSwap(Barricade* other) {
  using std::swap;
  class_name_.Swap(&other->class_name_);
  subclass_name_.Swap(&other->subclass_name_);
  swap(frame_index_, other->frame_index_);
  swap(timestamp_, other->timestamp_);
  swap(id_, other->id_);
  swap(class__, other->class__);
  swap(camera_position_, other->camera_position_);
  swap(confidence_, other->confidence_);
  swap(subclass_, other->subclass_);
  swap(age_count_, other->age_count_);
  swap(width_, other->width_);
  swap(width_std_, other->width_std_);
  swap(height_, other->height_);
  swap(height_std_, other->height_std_);
  swap(height_from_groud_, other->height_from_groud_);
  swap(height_from_groud_std_, other->height_from_groud_std_);
  swap(lat_distance_, other->lat_distance_);
  swap(lat_distance_std_, other->lat_distance_std_);
  swap(long_distance_, other->long_distance_);
  swap(long_distance_std_, other->long_distance_std_);
  swap(length_, other->length_);
  swap(length_std_, other->length_std_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Barricade::GetMetadata() const {
  protobuf_perception_5fbarricade_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_perception_5fbarricade_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace perception
}  // namespace calmcar

// @@protoc_insertion_point(global_scope)
