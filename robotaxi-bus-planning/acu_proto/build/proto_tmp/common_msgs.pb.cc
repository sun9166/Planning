// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msgs.proto

#include "common_msgs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace common_msgs {
class TimeStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeStatus>
      _instance;
} _TimeStatus_default_instance_;
class TimeStatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeStatistics>
      _instance;
} _TimeStatistics_default_instance_;
class FaultInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaultInfo>
      _instance;
} _FaultInfo_default_instance_;
class FaultVecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaultVec>
      _instance;
} _FaultVec_default_instance_;
class HeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Header>
      _instance;
} _Header_default_instance_;
class AvosClockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AvosClock>
      _instance;
} _AvosClock_default_instance_;
class AvosTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AvosTime>
      _instance;
} _AvosTime_default_instance_;
class UnsureVarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsureVar>
      _instance;
} _UnsureVar_default_instance_;
class Vector3WithCovarianceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3WithCovariance>
      _instance;
} _Vector3WithCovariance_default_instance_;
class QuaternionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quaternion>
      _instance;
} _Quaternion_default_instance_;
class Vector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3>
      _instance;
} _Vector3_default_instance_;
class UnsurePointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsurePoint>
      _instance;
} _UnsurePoint_default_instance_;
class UnsurePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnsurePosition>
      _instance;
} _UnsurePosition_default_instance_;
class EulerWithCovarianceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EulerWithCovariance>
      _instance;
} _EulerWithCovariance_default_instance_;
class PoseEulerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoseEuler>
      _instance;
} _PoseEuler_default_instance_;
class DRPoseWithTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DRPoseWithTime>
      _instance;
} _DRPoseWithTime_default_instance_;
class TwistDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Twist>
      _instance;
} _Twist_default_instance_;
class LLHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LLH>
      _instance;
} _LLH_default_instance_;
class NavStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NavStatus>
      _instance;
} _NavStatus_default_instance_;
class Point2DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point2D>
      _instance;
} _Point2D_default_instance_;
class Point3DDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3D>
      _instance;
} _Point3D_default_instance_;
class PointENUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointENU>
      _instance;
} _PointENU_default_instance_;
class PoseQuaternionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoseQuaternion>
      _instance;
} _PoseQuaternion_default_instance_;
class PoseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pose>
      _instance;
} _Pose_default_instance_;
class WheelSpeedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WheelSpeed>
      _instance;
} _WheelSpeed_default_instance_;
}  // namespace common_msgs
namespace protobuf_common_5fmsgs_2eproto {
void InitDefaultsTimeStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_TimeStatus_default_instance_;
    new (ptr) ::common_msgs::TimeStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::TimeStatus::InitAsDefaultInstance();
}

void InitDefaultsTimeStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeStatusImpl);
}

void InitDefaultsTimeStatisticsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatus();
  {
    void* ptr = &::common_msgs::_TimeStatistics_default_instance_;
    new (ptr) ::common_msgs::TimeStatistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::TimeStatistics::InitAsDefaultInstance();
}

void InitDefaultsTimeStatistics() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeStatisticsImpl);
}

void InitDefaultsFaultInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_FaultInfo_default_instance_;
    new (ptr) ::common_msgs::FaultInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::FaultInfo::InitAsDefaultInstance();
}

void InitDefaultsFaultInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFaultInfoImpl);
}

void InitDefaultsFaultVecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsFaultInfo();
  {
    void* ptr = &::common_msgs::_FaultVec_default_instance_;
    new (ptr) ::common_msgs::FaultVec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::FaultVec::InitAsDefaultInstance();
}

void InitDefaultsFaultVec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFaultVecImpl);
}

void InitDefaultsHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsFaultVec();
  protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatistics();
  {
    void* ptr = &::common_msgs::_Header_default_instance_;
    new (ptr) ::common_msgs::Header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Header::InitAsDefaultInstance();
}

void InitDefaultsHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHeaderImpl);
}

void InitDefaultsAvosClockImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_AvosClock_default_instance_;
    new (ptr) ::common_msgs::AvosClock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::AvosClock::InitAsDefaultInstance();
}

void InitDefaultsAvosClock() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAvosClockImpl);
}

void InitDefaultsAvosTimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsAvosClock();
  {
    void* ptr = &::common_msgs::_AvosTime_default_instance_;
    new (ptr) ::common_msgs::AvosTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::AvosTime::InitAsDefaultInstance();
}

void InitDefaultsAvosTime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAvosTimeImpl);
}

void InitDefaultsUnsureVarImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_UnsureVar_default_instance_;
    new (ptr) ::common_msgs::UnsureVar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::UnsureVar::InitAsDefaultInstance();
}

void InitDefaultsUnsureVar() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsureVarImpl);
}

void InitDefaultsVector3WithCovarianceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  {
    void* ptr = &::common_msgs::_Vector3WithCovariance_default_instance_;
    new (ptr) ::common_msgs::Vector3WithCovariance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Vector3WithCovariance::InitAsDefaultInstance();
}

void InitDefaultsVector3WithCovariance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector3WithCovarianceImpl);
}

void InitDefaultsQuaternionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_Quaternion_default_instance_;
    new (ptr) ::common_msgs::Quaternion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Quaternion::InitAsDefaultInstance();
}

void InitDefaultsQuaternion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuaternionImpl);
}

void InitDefaultsVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_Vector3_default_instance_;
    new (ptr) ::common_msgs::Vector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Vector3::InitAsDefaultInstance();
}

void InitDefaultsVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector3Impl);
}

void InitDefaultsUnsurePointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  {
    void* ptr = &::common_msgs::_UnsurePoint_default_instance_;
    new (ptr) ::common_msgs::UnsurePoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::UnsurePoint::InitAsDefaultInstance();
}

void InitDefaultsUnsurePoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsurePointImpl);
}

void InitDefaultsUnsurePositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePoint();
  {
    void* ptr = &::common_msgs::_UnsurePosition_default_instance_;
    new (ptr) ::common_msgs::UnsurePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::UnsurePosition::InitAsDefaultInstance();
}

void InitDefaultsUnsurePosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnsurePositionImpl);
}

void InitDefaultsEulerWithCovarianceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  {
    void* ptr = &::common_msgs::_EulerWithCovariance_default_instance_;
    new (ptr) ::common_msgs::EulerWithCovariance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::EulerWithCovariance::InitAsDefaultInstance();
}

void InitDefaultsEulerWithCovariance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEulerWithCovarianceImpl);
}

void InitDefaultsPoseEulerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovariance();
  protobuf_common_5fmsgs_2eproto::InitDefaultsEulerWithCovariance();
  {
    void* ptr = &::common_msgs::_PoseEuler_default_instance_;
    new (ptr) ::common_msgs::PoseEuler();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::PoseEuler::InitAsDefaultInstance();
}

void InitDefaultsPoseEuler() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoseEulerImpl);
}

void InitDefaultsDRPoseWithTimeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsPoseEuler();
  {
    void* ptr = &::common_msgs::_DRPoseWithTime_default_instance_;
    new (ptr) ::common_msgs::DRPoseWithTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::DRPoseWithTime::InitAsDefaultInstance();
}

void InitDefaultsDRPoseWithTime() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDRPoseWithTimeImpl);
}

void InitDefaultsTwistImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovariance();
  {
    void* ptr = &::common_msgs::_Twist_default_instance_;
    new (ptr) ::common_msgs::Twist();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Twist::InitAsDefaultInstance();
}

void InitDefaultsTwist() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTwistImpl);
}

void InitDefaultsLLHImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  {
    void* ptr = &::common_msgs::_LLH_default_instance_;
    new (ptr) ::common_msgs::LLH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::LLH::InitAsDefaultInstance();
}

void InitDefaultsLLH() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLLHImpl);
}

void InitDefaultsNavStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_NavStatus_default_instance_;
    new (ptr) ::common_msgs::NavStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::NavStatus::InitAsDefaultInstance();
}

void InitDefaultsNavStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNavStatusImpl);
}

void InitDefaultsPoint2DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_Point2D_default_instance_;
    new (ptr) ::common_msgs::Point2D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Point2D::InitAsDefaultInstance();
}

void InitDefaultsPoint2D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint2DImpl);
}

void InitDefaultsPoint3DImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_Point3D_default_instance_;
    new (ptr) ::common_msgs::Point3D();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Point3D::InitAsDefaultInstance();
}

void InitDefaultsPoint3D() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoint3DImpl);
}

void InitDefaultsPointENUImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::common_msgs::_PointENU_default_instance_;
    new (ptr) ::common_msgs::PointENU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::PointENU::InitAsDefaultInstance();
}

void InitDefaultsPointENU() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPointENUImpl);
}

void InitDefaultsPoseQuaternionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovariance();
  protobuf_common_5fmsgs_2eproto::InitDefaultsQuaternion();
  protobuf_common_5fmsgs_2eproto::InitDefaultsVector3();
  {
    void* ptr = &::common_msgs::_PoseQuaternion_default_instance_;
    new (ptr) ::common_msgs::PoseQuaternion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::PoseQuaternion::InitAsDefaultInstance();
}

void InitDefaultsPoseQuaternion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoseQuaternionImpl);
}

void InitDefaultsPoseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsPoseEuler();
  protobuf_common_5fmsgs_2eproto::InitDefaultsPoseQuaternion();
  {
    void* ptr = &::common_msgs::_Pose_default_instance_;
    new (ptr) ::common_msgs::Pose();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::Pose::InitAsDefaultInstance();
}

void InitDefaultsPose() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPoseImpl);
}

void InitDefaultsWheelSpeedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePoint();
  {
    void* ptr = &::common_msgs::_WheelSpeed_default_instance_;
    new (ptr) ::common_msgs::WheelSpeed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common_msgs::WheelSpeed::InitAsDefaultInstance();
}

void InitDefaultsWheelSpeed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWheelSpeedImpl);
}

::google::protobuf::Metadata file_level_metadata[25];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatus, dtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatus, source_node_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatus, destination_node_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatistics, dev_time_status_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::TimeStatistics, sending_timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, timestamp_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, fault_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultInfo, fault_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultVec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultVec, info_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::FaultVec, module_fault_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, sequence_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, fault_vec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Header, time_statistics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosClock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosClock, day_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosClock, hour_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosClock, minute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosClock, second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosTime, time_enable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosTime, relative_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::AvosTime, absolute_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsureVar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsureVar, variable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsureVar, var_std_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3WithCovariance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3WithCovariance, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3WithCovariance, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3WithCovariance, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Quaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Quaternion, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Quaternion, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Quaternion, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Quaternion, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Vector3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePoint, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePoint, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePoint, rho_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePosition, parking_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::UnsurePosition, point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::EulerWithCovariance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::EulerWithCovariance, roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::EulerWithCovariance, pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::EulerWithCovariance, yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseEuler, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseEuler, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseEuler, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::DRPoseWithTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::DRPoseWithTime, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::DRPoseWithTime, utctime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::DRPoseWithTime, dr_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::DRPoseWithTime, pose_euler_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Twist, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Twist, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Twist, angular_velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::LLH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::LLH, lat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::LLH, lon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::LLH, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, utc_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, gps_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, pos_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, att_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, init_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, sate_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, hdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, pdop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::NavStatus, diff_age_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point2D, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Point3D, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PointENU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PointENU, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PointENU, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PointENU, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseQuaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseQuaternion, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseQuaternion, quaternion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::PoseQuaternion, rpy_covariance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Pose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Pose, pose_euler_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Pose, pose_quaternion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::Pose, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::WheelSpeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::WheelSpeed, front_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::WheelSpeed, front_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::WheelSpeed, rear_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common_msgs::WheelSpeed, rear_right_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common_msgs::TimeStatus)},
  { 8, -1, sizeof(::common_msgs::TimeStatistics)},
  { 15, -1, sizeof(::common_msgs::FaultInfo)},
  { 27, -1, sizeof(::common_msgs::FaultVec)},
  { 34, -1, sizeof(::common_msgs::Header)},
  { 45, -1, sizeof(::common_msgs::AvosClock)},
  { 54, -1, sizeof(::common_msgs::AvosTime)},
  { 62, -1, sizeof(::common_msgs::UnsureVar)},
  { 69, -1, sizeof(::common_msgs::Vector3WithCovariance)},
  { 77, -1, sizeof(::common_msgs::Quaternion)},
  { 86, -1, sizeof(::common_msgs::Vector3)},
  { 94, -1, sizeof(::common_msgs::UnsurePoint)},
  { 103, -1, sizeof(::common_msgs::UnsurePosition)},
  { 110, -1, sizeof(::common_msgs::EulerWithCovariance)},
  { 118, -1, sizeof(::common_msgs::PoseEuler)},
  { 125, -1, sizeof(::common_msgs::DRPoseWithTime)},
  { 134, -1, sizeof(::common_msgs::Twist)},
  { 141, -1, sizeof(::common_msgs::LLH)},
  { 149, -1, sizeof(::common_msgs::NavStatus)},
  { 163, -1, sizeof(::common_msgs::Point2D)},
  { 170, -1, sizeof(::common_msgs::Point3D)},
  { 178, -1, sizeof(::common_msgs::PointENU)},
  { 186, -1, sizeof(::common_msgs::PoseQuaternion)},
  { 194, -1, sizeof(::common_msgs::Pose)},
  { 202, -1, sizeof(::common_msgs::WheelSpeed)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_TimeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_TimeStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_FaultInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_FaultVec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_AvosClock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_AvosTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_UnsureVar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Vector3WithCovariance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Quaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Vector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_UnsurePoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_UnsurePosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_EulerWithCovariance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_PoseEuler_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_DRPoseWithTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Twist_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_LLH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_NavStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Point2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Point3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_PointENU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_PoseQuaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_Pose_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common_msgs::_WheelSpeed_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "common_msgs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021common_msgs.proto\022\013common_msgs\"T\n\nTime"
      "Status\022\r\n\005dtime\030\001 \001(\001\022\030\n\020source_node_nam"
      "e\030\002 \001(\t\022\035\n\025destination_node_name\030\003 \001(\t\"a"
      "\n\016TimeStatistics\0224\n\023dev_time_status_msg\030"
      "\001 \003(\0132\027.common_msgs.TimeStatus\022\031\n\021sendin"
      "g_timestamp\030\002 \001(\001\"\222\001\n\tFaultInfo\022\025\n\rtimes"
      "tamp_sec\030\001 \001(\001\022\023\n\013module_name\030\002 \001(\t\022\017\n\007v"
      "ersion\030\003 \001(\t\022\022\n\nerror_code\030\004 \001(\005\022\013\n\003msg\030"
      "\005 \001(\t\022\023\n\013fault_level\030\006 \001(\005\022\022\n\nfault_type"
      "\030\007 \001(\005\"P\n\010FaultVec\022(\n\010info_vec\030\001 \003(\0132\026.c"
      "ommon_msgs.FaultInfo\022\032\n\022module_fault_lev"
      "el\030\002 \001(\005\"\270\001\n\006Header\022\024\n\014sequence_num\030\001 \001("
      "\005\022\022\n\ntime_stamp\030\002 \001(\001\022\023\n\013module_name\030\003 \001"
      "(\t\022\017\n\007version\030\004 \001(\t\022(\n\tfault_vec\030\005 \001(\0132\025"
      ".common_msgs.FaultVec\0224\n\017time_statistics"
      "\030\006 \001(\0132\033.common_msgs.TimeStatistics\"F\n\tA"
      "vosClock\022\013\n\003day\030\001 \001(\005\022\014\n\004hour\030\002 \001(\005\022\016\n\006m"
      "inute\030\003 \001(\005\022\016\n\006second\030\004 \001(\005\"e\n\010AvosTime\022"
      "\023\n\013time_enable\030\001 \001(\010\022\025\n\rrelative_time\030\002 "
      "\001(\005\022-\n\rabsolute_time\030\003 \001(\0132\026.common_msgs"
      ".AvosClock\".\n\tUnsureVar\022\020\n\010variable\030\001 \001("
      "\001\022\017\n\007var_std\030\002 \001(\001\"\200\001\n\025Vector3WithCovari"
      "ance\022!\n\001x\030\001 \001(\0132\026.common_msgs.UnsureVar\022"
      "!\n\001y\030\002 \001(\0132\026.common_msgs.UnsureVar\022!\n\001z\030"
      "\003 \001(\0132\026.common_msgs.UnsureVar\"8\n\nQuatern"
      "ion\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\t\n\001"
      "w\030\004 \001(\001\"*\n\007Vector3\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001"
      "\022\t\n\001z\030\003 \001(\001\"\211\001\n\013UnsurePoint\022!\n\001x\030\001 \001(\0132\026"
      ".common_msgs.UnsureVar\022!\n\001y\030\002 \001(\0132\026.comm"
      "on_msgs.UnsureVar\022\'\n\007heading\030\003 \001(\0132\026.com"
      "mon_msgs.UnsureVar\022\013\n\003rho\030\004 \001(\001\"M\n\016Unsur"
      "ePosition\022\022\n\nparking_id\030\001 \001(\005\022\'\n\005point\030\002"
      " \001(\0132\030.common_msgs.UnsurePoint\"\207\001\n\023Euler"
      "WithCovariance\022$\n\004roll\030\001 \001(\0132\026.common_ms"
      "gs.UnsureVar\022%\n\005pitch\030\002 \001(\0132\026.common_msg"
      "s.UnsureVar\022#\n\003yaw\030\003 \001(\0132\026.common_msgs.U"
      "nsureVar\"u\n\tPoseEuler\0224\n\010position\030\001 \001(\0132"
      "\".common_msgs.Vector3WithCovariance\0222\n\010r"
      "otation\030\002 \001(\0132 .common_msgs.EulerWithCov"
      "ariance\"l\n\016DRPoseWithTime\022\014\n\004week\030\001 \001(\005\022"
      "\017\n\007utctime\030\002 \001(\001\022\017\n\007dr_time\030\003 \001(\001\022*\n\npos"
      "e_euler\030\004 \001(\0132\026.common_msgs.PoseEuler\"{\n"
      "\005Twist\0224\n\010velocity\030\001 \001(\0132\".common_msgs.V"
      "ector3WithCovariance\022<\n\020angular_velocity"
      "\030\002 \001(\0132\".common_msgs.Vector3WithCovarian"
      "ce\"w\n\003LLH\022#\n\003lat\030\001 \001(\0132\026.common_msgs.Uns"
      "ureVar\022#\n\003lon\030\002 \001(\0132\026.common_msgs.Unsure"
      "Var\022&\n\006height\030\003 \001(\0132\026.common_msgs.Unsure"
      "Var\"\256\001\n\tNavStatus\022\020\n\010utc_time\030\001 \001(\001\022\022\n\ng"
      "ps_status\030\002 \001(\005\022\022\n\npos_status\030\003 \001(\005\022\022\n\na"
      "tt_status\030\004 \001(\005\022\023\n\013init_status\030\005 \001(\005\022\020\n\010"
      "sate_num\030\006 \001(\005\022\014\n\004hdop\030\007 \001(\002\022\014\n\004pdop\030\010 \001"
      "(\002\022\020\n\010diff_age\030\t \001(\002\"\037\n\007Point2D\022\t\n\001x\030\001 \001"
      "(\001\022\t\n\001y\030\002 \001(\001\"*\n\007Point3D\022\t\n\001x\030\001 \001(\001\022\t\n\001y"
      "\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"+\n\010PointENU\022\t\n\001x\030\001 \001(\001"
      "\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"\241\001\n\016PoseQuaternio"
      "n\0224\n\010position\030\001 \001(\0132\".common_msgs.Vector"
      "3WithCovariance\022+\n\nquaternion\030\002 \001(\0132\027.co"
      "mmon_msgs.Quaternion\022,\n\016rpy_covariance\030\003"
      " \001(\0132\024.common_msgs.Vector3\"x\n\004Pose\022*\n\npo"
      "se_euler\030\001 \001(\0132\026.common_msgs.PoseEuler\0224"
      "\n\017pose_quaternion\030\002 \001(\0132\033.common_msgs.Po"
      "seQuaternion\022\016\n\006status\030\003 \001(\005\"\304\001\n\nWheelSp"
      "eed\022,\n\nfront_left\030\001 \001(\0132\030.common_msgs.Un"
      "surePoint\022-\n\013front_right\030\002 \001(\0132\030.common_"
      "msgs.UnsurePoint\022+\n\trear_left\030\003 \001(\0132\030.co"
      "mmon_msgs.UnsurePoint\022,\n\nrear_right\030\004 \001("
      "\0132\030.common_msgs.UnsurePointb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2715);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common_msgs.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_5fmsgs_2eproto
namespace common_msgs {

// ===================================================================

void TimeStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeStatus::kDtimeFieldNumber;
const int TimeStatus::kSourceNodeNameFieldNumber;
const int TimeStatus::kDestinationNodeNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeStatus::TimeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.TimeStatus)
}
TimeStatus::TimeStatus(const TimeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_node_name().size() > 0) {
    source_node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_node_name_);
  }
  destination_node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.destination_node_name().size() > 0) {
    destination_node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_node_name_);
  }
  dtime_ = from.dtime_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.TimeStatus)
}

void TimeStatus::SharedCtor() {
  source_node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtime_ = 0;
  _cached_size_ = 0;
}

TimeStatus::~TimeStatus() {
  // @@protoc_insertion_point(destructor:common_msgs.TimeStatus)
  SharedDtor();
}

void TimeStatus::SharedDtor() {
  source_node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TimeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeStatus::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeStatus& TimeStatus::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatus();
  return *internal_default_instance();
}

TimeStatus* TimeStatus::New(::google::protobuf::Arena* arena) const {
  TimeStatus* n = new TimeStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.TimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  destination_node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dtime_ = 0;
  _internal_metadata_.Clear();
}

bool TimeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.TimeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double dtime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_node_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_node_name().data(), static_cast<int>(this->source_node_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.TimeStatus.source_node_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_node_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_node_name().data(), static_cast<int>(this->destination_node_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.TimeStatus.destination_node_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.TimeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.TimeStatus)
  return false;
#undef DO_
}

void TimeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.TimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double dtime = 1;
  if (this->dtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->dtime(), output);
  }

  // string source_node_name = 2;
  if (this->source_node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_node_name().data(), static_cast<int>(this->source_node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.TimeStatus.source_node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_node_name(), output);
  }

  // string destination_node_name = 3;
  if (this->destination_node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_node_name().data(), static_cast<int>(this->destination_node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.TimeStatus.destination_node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->destination_node_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.TimeStatus)
}

::google::protobuf::uint8* TimeStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.TimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double dtime = 1;
  if (this->dtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->dtime(), target);
  }

  // string source_node_name = 2;
  if (this->source_node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_node_name().data(), static_cast<int>(this->source_node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.TimeStatus.source_node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_node_name(), target);
  }

  // string destination_node_name = 3;
  if (this->destination_node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_node_name().data(), static_cast<int>(this->destination_node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.TimeStatus.destination_node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->destination_node_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.TimeStatus)
  return target;
}

size_t TimeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.TimeStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string source_node_name = 2;
  if (this->source_node_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_node_name());
  }

  // string destination_node_name = 3;
  if (this->destination_node_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_node_name());
  }

  // double dtime = 1;
  if (this->dtime() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.TimeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.TimeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.TimeStatus)
    MergeFrom(*source);
  }
}

void TimeStatus::MergeFrom(const TimeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.TimeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_node_name().size() > 0) {

    source_node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_node_name_);
  }
  if (from.destination_node_name().size() > 0) {

    destination_node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_node_name_);
  }
  if (from.dtime() != 0) {
    set_dtime(from.dtime());
  }
}

void TimeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.TimeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeStatus::CopyFrom(const TimeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.TimeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeStatus::IsInitialized() const {
  return true;
}

void TimeStatus::Swap(TimeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeStatus::InternalSwap(TimeStatus* other) {
  using std::swap;
  source_node_name_.Swap(&other->source_node_name_);
  destination_node_name_.Swap(&other->destination_node_name_);
  swap(dtime_, other->dtime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeStatus::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeStatistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeStatistics::kDevTimeStatusMsgFieldNumber;
const int TimeStatistics::kSendingTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeStatistics::TimeStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatistics();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.TimeStatistics)
}
TimeStatistics::TimeStatistics(const TimeStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dev_time_status_msg_(from.dev_time_status_msg_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sending_timestamp_ = from.sending_timestamp_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.TimeStatistics)
}

void TimeStatistics::SharedCtor() {
  sending_timestamp_ = 0;
  _cached_size_ = 0;
}

TimeStatistics::~TimeStatistics() {
  // @@protoc_insertion_point(destructor:common_msgs.TimeStatistics)
  SharedDtor();
}

void TimeStatistics::SharedDtor() {
}

void TimeStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeStatistics::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeStatistics& TimeStatistics::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatistics();
  return *internal_default_instance();
}

TimeStatistics* TimeStatistics::New(::google::protobuf::Arena* arena) const {
  TimeStatistics* n = new TimeStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.TimeStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dev_time_status_msg_.Clear();
  sending_timestamp_ = 0;
  _internal_metadata_.Clear();
}

bool TimeStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.TimeStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_dev_time_status_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sending_timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sending_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.TimeStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.TimeStatistics)
  return false;
#undef DO_
}

void TimeStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.TimeStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dev_time_status_msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dev_time_status_msg(static_cast<int>(i)), output);
  }

  // double sending_timestamp = 2;
  if (this->sending_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->sending_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.TimeStatistics)
}

::google::protobuf::uint8* TimeStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.TimeStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dev_time_status_msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->dev_time_status_msg(static_cast<int>(i)), deterministic, target);
  }

  // double sending_timestamp = 2;
  if (this->sending_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->sending_timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.TimeStatistics)
  return target;
}

size_t TimeStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.TimeStatistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->dev_time_status_msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dev_time_status_msg(static_cast<int>(i)));
    }
  }

  // double sending_timestamp = 2;
  if (this->sending_timestamp() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.TimeStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.TimeStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.TimeStatistics)
    MergeFrom(*source);
  }
}

void TimeStatistics::MergeFrom(const TimeStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.TimeStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dev_time_status_msg_.MergeFrom(from.dev_time_status_msg_);
  if (from.sending_timestamp() != 0) {
    set_sending_timestamp(from.sending_timestamp());
  }
}

void TimeStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.TimeStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeStatistics::CopyFrom(const TimeStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.TimeStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeStatistics::IsInitialized() const {
  return true;
}

void TimeStatistics::Swap(TimeStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeStatistics::InternalSwap(TimeStatistics* other) {
  using std::swap;
  dev_time_status_msg_.InternalSwap(&other->dev_time_status_msg_);
  swap(sending_timestamp_, other->sending_timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeStatistics::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaultInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaultInfo::kTimestampSecFieldNumber;
const int FaultInfo::kModuleNameFieldNumber;
const int FaultInfo::kVersionFieldNumber;
const int FaultInfo::kErrorCodeFieldNumber;
const int FaultInfo::kMsgFieldNumber;
const int FaultInfo::kFaultLevelFieldNumber;
const int FaultInfo::kFaultTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaultInfo::FaultInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.FaultInfo)
}
FaultInfo::FaultInfo(const FaultInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module_name().size() > 0) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&timestamp_sec_, &from.timestamp_sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&fault_type_) -
    reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.FaultInfo)
}

void FaultInfo::SharedCtor() {
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fault_type_) -
      reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
  _cached_size_ = 0;
}

FaultInfo::~FaultInfo() {
  // @@protoc_insertion_point(destructor:common_msgs.FaultInfo)
  SharedDtor();
}

void FaultInfo::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaultInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaultInfo::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaultInfo& FaultInfo::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultInfo();
  return *internal_default_instance();
}

FaultInfo* FaultInfo::New(::google::protobuf::Arena* arena) const {
  FaultInfo* n = new FaultInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaultInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fault_type_) -
      reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
  _internal_metadata_.Clear();
}

bool FaultInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.FaultInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double timestamp_sec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.FaultInfo.module_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.FaultInfo.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 error_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.FaultInfo.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fault_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fault_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 fault_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fault_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.FaultInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.FaultInfo)
  return false;
#undef DO_
}

void FaultInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp_sec = 1;
  if (this->timestamp_sec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp_sec(), output);
  }

  // string module_name = 2;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->module_name(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // int32 error_code = 4;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->error_code(), output);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  // int32 fault_level = 6;
  if (this->fault_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fault_level(), output);
  }

  // int32 fault_type = 7;
  if (this->fault_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fault_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.FaultInfo)
}

::google::protobuf::uint8* FaultInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp_sec = 1;
  if (this->timestamp_sec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp_sec(), target);
  }

  // string module_name = 2;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->module_name(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // int32 error_code = 4;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->error_code(), target);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.FaultInfo.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  // int32 fault_level = 6;
  if (this->fault_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fault_level(), target);
  }

  // int32 fault_type = 7;
  if (this->fault_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fault_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.FaultInfo)
  return target;
}

size_t FaultInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.FaultInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string module_name = 2;
  if (this->module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_name());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // double timestamp_sec = 1;
  if (this->timestamp_sec() != 0) {
    total_size += 1 + 8;
  }

  // int32 error_code = 4;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->error_code());
  }

  // int32 fault_level = 6;
  if (this->fault_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fault_level());
  }

  // int32 fault_type = 7;
  if (this->fault_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fault_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaultInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.FaultInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FaultInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaultInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.FaultInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.FaultInfo)
    MergeFrom(*source);
  }
}

void FaultInfo::MergeFrom(const FaultInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.FaultInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_name().size() > 0) {

    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.timestamp_sec() != 0) {
    set_timestamp_sec(from.timestamp_sec());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.fault_level() != 0) {
    set_fault_level(from.fault_level());
  }
  if (from.fault_type() != 0) {
    set_fault_type(from.fault_type());
  }
}

void FaultInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.FaultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaultInfo::CopyFrom(const FaultInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.FaultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaultInfo::IsInitialized() const {
  return true;
}

void FaultInfo::Swap(FaultInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaultInfo::InternalSwap(FaultInfo* other) {
  using std::swap;
  module_name_.Swap(&other->module_name_);
  version_.Swap(&other->version_);
  msg_.Swap(&other->msg_);
  swap(timestamp_sec_, other->timestamp_sec_);
  swap(error_code_, other->error_code_);
  swap(fault_level_, other->fault_level_);
  swap(fault_type_, other->fault_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaultInfo::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaultVec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaultVec::kInfoVecFieldNumber;
const int FaultVec::kModuleFaultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaultVec::FaultVec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultVec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.FaultVec)
}
FaultVec::FaultVec(const FaultVec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      info_vec_(from.info_vec_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_fault_level_ = from.module_fault_level_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.FaultVec)
}

void FaultVec::SharedCtor() {
  module_fault_level_ = 0;
  _cached_size_ = 0;
}

FaultVec::~FaultVec() {
  // @@protoc_insertion_point(destructor:common_msgs.FaultVec)
  SharedDtor();
}

void FaultVec::SharedDtor() {
}

void FaultVec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaultVec::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaultVec& FaultVec::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultVec();
  return *internal_default_instance();
}

FaultVec* FaultVec::New(::google::protobuf::Arena* arena) const {
  FaultVec* n = new FaultVec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaultVec::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.FaultVec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_vec_.Clear();
  module_fault_level_ = 0;
  _internal_metadata_.Clear();
}

bool FaultVec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.FaultVec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common_msgs.FaultInfo info_vec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_info_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 module_fault_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &module_fault_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.FaultVec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.FaultVec)
  return false;
#undef DO_
}

void FaultVec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.FaultVec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common_msgs.FaultInfo info_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_vec_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->info_vec(static_cast<int>(i)), output);
  }

  // int32 module_fault_level = 2;
  if (this->module_fault_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->module_fault_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.FaultVec)
}

::google::protobuf::uint8* FaultVec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.FaultVec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common_msgs.FaultInfo info_vec = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->info_vec_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->info_vec(static_cast<int>(i)), deterministic, target);
  }

  // int32 module_fault_level = 2;
  if (this->module_fault_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->module_fault_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.FaultVec)
  return target;
}

size_t FaultVec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.FaultVec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common_msgs.FaultInfo info_vec = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->info_vec_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->info_vec(static_cast<int>(i)));
    }
  }

  // int32 module_fault_level = 2;
  if (this->module_fault_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->module_fault_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaultVec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.FaultVec)
  GOOGLE_DCHECK_NE(&from, this);
  const FaultVec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaultVec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.FaultVec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.FaultVec)
    MergeFrom(*source);
  }
}

void FaultVec::MergeFrom(const FaultVec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.FaultVec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_vec_.MergeFrom(from.info_vec_);
  if (from.module_fault_level() != 0) {
    set_module_fault_level(from.module_fault_level());
  }
}

void FaultVec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.FaultVec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaultVec::CopyFrom(const FaultVec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.FaultVec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaultVec::IsInitialized() const {
  return true;
}

void FaultVec::Swap(FaultVec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaultVec::InternalSwap(FaultVec* other) {
  using std::swap;
  info_vec_.InternalSwap(&other->info_vec_);
  swap(module_fault_level_, other->module_fault_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaultVec::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Header::InitAsDefaultInstance() {
  ::common_msgs::_Header_default_instance_._instance.get_mutable()->fault_vec_ = const_cast< ::common_msgs::FaultVec*>(
      ::common_msgs::FaultVec::internal_default_instance());
  ::common_msgs::_Header_default_instance_._instance.get_mutable()->time_statistics_ = const_cast< ::common_msgs::TimeStatistics*>(
      ::common_msgs::TimeStatistics::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Header::kSequenceNumFieldNumber;
const int Header::kTimeStampFieldNumber;
const int Header::kModuleNameFieldNumber;
const int Header::kVersionFieldNumber;
const int Header::kFaultVecFieldNumber;
const int Header::kTimeStatisticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Header::Header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Header)
}
Header::Header(const Header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module_name().size() > 0) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_fault_vec()) {
    fault_vec_ = new ::common_msgs::FaultVec(*from.fault_vec_);
  } else {
    fault_vec_ = NULL;
  }
  if (from.has_time_statistics()) {
    time_statistics_ = new ::common_msgs::TimeStatistics(*from.time_statistics_);
  } else {
    time_statistics_ = NULL;
  }
  ::memcpy(&time_stamp_, &from.time_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&sequence_num_) -
    reinterpret_cast<char*>(&time_stamp_)) + sizeof(sequence_num_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.Header)
}

void Header::SharedCtor() {
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fault_vec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_num_) -
      reinterpret_cast<char*>(&fault_vec_)) + sizeof(sequence_num_));
  _cached_size_ = 0;
}

Header::~Header() {
  // @@protoc_insertion_point(destructor:common_msgs.Header)
  SharedDtor();
}

void Header::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fault_vec_;
  if (this != internal_default_instance()) delete time_statistics_;
}

void Header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Header::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Header& Header::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsHeader();
  return *internal_default_instance();
}

Header* Header::New(::google::protobuf::Arena* arena) const {
  Header* n = new Header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && fault_vec_ != NULL) {
    delete fault_vec_;
  }
  fault_vec_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_statistics_ != NULL) {
    delete time_statistics_;
  }
  time_statistics_ = NULL;
  ::memset(&time_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_num_) -
      reinterpret_cast<char*>(&time_stamp_)) + sizeof(sequence_num_));
  _internal_metadata_.Clear();
}

bool Header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sequence_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string module_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.Header.module_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common_msgs.Header.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.FaultVec fault_vec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fault_vec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.TimeStatistics time_statistics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Header)
  return false;
#undef DO_
}

void Header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence_num = 1;
  if (this->sequence_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sequence_num(), output);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time_stamp(), output);
  }

  // string module_name = 3;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.Header.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->module_name(), output);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.Header.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // .common_msgs.FaultVec fault_vec = 5;
  if (this->has_fault_vec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->fault_vec_, output);
  }

  // .common_msgs.TimeStatistics time_statistics = 6;
  if (this->has_time_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->time_statistics_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Header)
}

::google::protobuf::uint8* Header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence_num = 1;
  if (this->sequence_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sequence_num(), target);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time_stamp(), target);
  }

  // string module_name = 3;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.Header.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->module_name(), target);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common_msgs.Header.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // .common_msgs.FaultVec fault_vec = 5;
  if (this->has_fault_vec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->fault_vec_, deterministic, target);
  }

  // .common_msgs.TimeStatistics time_statistics = 6;
  if (this->has_time_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->time_statistics_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Header)
  return target;
}

size_t Header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string module_name = 3;
  if (this->module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_name());
  }

  // string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .common_msgs.FaultVec fault_vec = 5;
  if (this->has_fault_vec()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fault_vec_);
  }

  // .common_msgs.TimeStatistics time_statistics = 6;
  if (this->has_time_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_statistics_);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    total_size += 1 + 8;
  }

  // int32 sequence_num = 1;
  if (this->sequence_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Header)
  GOOGLE_DCHECK_NE(&from, this);
  const Header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Header)
    MergeFrom(*source);
  }
}

void Header::MergeFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.module_name().size() > 0) {

    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_fault_vec()) {
    mutable_fault_vec()->::common_msgs::FaultVec::MergeFrom(from.fault_vec());
  }
  if (from.has_time_statistics()) {
    mutable_time_statistics()->::common_msgs::TimeStatistics::MergeFrom(from.time_statistics());
  }
  if (from.time_stamp() != 0) {
    set_time_stamp(from.time_stamp());
  }
  if (from.sequence_num() != 0) {
    set_sequence_num(from.sequence_num());
  }
}

void Header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Header::IsInitialized() const {
  return true;
}

void Header::Swap(Header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Header::InternalSwap(Header* other) {
  using std::swap;
  module_name_.Swap(&other->module_name_);
  version_.Swap(&other->version_);
  swap(fault_vec_, other->fault_vec_);
  swap(time_statistics_, other->time_statistics_);
  swap(time_stamp_, other->time_stamp_);
  swap(sequence_num_, other->sequence_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Header::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AvosClock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvosClock::kDayFieldNumber;
const int AvosClock::kHourFieldNumber;
const int AvosClock::kMinuteFieldNumber;
const int AvosClock::kSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvosClock::AvosClock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosClock();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.AvosClock)
}
AvosClock::AvosClock(const AvosClock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&day_, &from.day_,
    static_cast<size_t>(reinterpret_cast<char*>(&second_) -
    reinterpret_cast<char*>(&day_)) + sizeof(second_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.AvosClock)
}

void AvosClock::SharedCtor() {
  ::memset(&day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_) -
      reinterpret_cast<char*>(&day_)) + sizeof(second_));
  _cached_size_ = 0;
}

AvosClock::~AvosClock() {
  // @@protoc_insertion_point(destructor:common_msgs.AvosClock)
  SharedDtor();
}

void AvosClock::SharedDtor() {
}

void AvosClock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvosClock::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvosClock& AvosClock::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosClock();
  return *internal_default_instance();
}

AvosClock* AvosClock::New(::google::protobuf::Arena* arena) const {
  AvosClock* n = new AvosClock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvosClock::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.AvosClock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&day_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_) -
      reinterpret_cast<char*>(&day_)) + sizeof(second_));
  _internal_metadata_.Clear();
}

bool AvosClock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.AvosClock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 day = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hour = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hour_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minute = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 second = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.AvosClock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.AvosClock)
  return false;
#undef DO_
}

void AvosClock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.AvosClock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 day = 1;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->day(), output);
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hour(), output);
  }

  // int32 minute = 3;
  if (this->minute() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minute(), output);
  }

  // int32 second = 4;
  if (this->second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.AvosClock)
}

::google::protobuf::uint8* AvosClock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.AvosClock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 day = 1;
  if (this->day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->day(), target);
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hour(), target);
  }

  // int32 minute = 3;
  if (this->minute() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minute(), target);
  }

  // int32 second = 4;
  if (this->second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.AvosClock)
  return target;
}

size_t AvosClock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.AvosClock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 day = 1;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->day());
  }

  // int32 hour = 2;
  if (this->hour() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hour());
  }

  // int32 minute = 3;
  if (this->minute() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minute());
  }

  // int32 second = 4;
  if (this->second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->second());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvosClock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.AvosClock)
  GOOGLE_DCHECK_NE(&from, this);
  const AvosClock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvosClock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.AvosClock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.AvosClock)
    MergeFrom(*source);
  }
}

void AvosClock::MergeFrom(const AvosClock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.AvosClock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.day() != 0) {
    set_day(from.day());
  }
  if (from.hour() != 0) {
    set_hour(from.hour());
  }
  if (from.minute() != 0) {
    set_minute(from.minute());
  }
  if (from.second() != 0) {
    set_second(from.second());
  }
}

void AvosClock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.AvosClock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvosClock::CopyFrom(const AvosClock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.AvosClock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvosClock::IsInitialized() const {
  return true;
}

void AvosClock::Swap(AvosClock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvosClock::InternalSwap(AvosClock* other) {
  using std::swap;
  swap(day_, other->day_);
  swap(hour_, other->hour_);
  swap(minute_, other->minute_);
  swap(second_, other->second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvosClock::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AvosTime::InitAsDefaultInstance() {
  ::common_msgs::_AvosTime_default_instance_._instance.get_mutable()->absolute_time_ = const_cast< ::common_msgs::AvosClock*>(
      ::common_msgs::AvosClock::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvosTime::kTimeEnableFieldNumber;
const int AvosTime::kRelativeTimeFieldNumber;
const int AvosTime::kAbsoluteTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvosTime::AvosTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosTime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.AvosTime)
}
AvosTime::AvosTime(const AvosTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_absolute_time()) {
    absolute_time_ = new ::common_msgs::AvosClock(*from.absolute_time_);
  } else {
    absolute_time_ = NULL;
  }
  ::memcpy(&time_enable_, &from.time_enable_,
    static_cast<size_t>(reinterpret_cast<char*>(&relative_time_) -
    reinterpret_cast<char*>(&time_enable_)) + sizeof(relative_time_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.AvosTime)
}

void AvosTime::SharedCtor() {
  ::memset(&absolute_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_time_) -
      reinterpret_cast<char*>(&absolute_time_)) + sizeof(relative_time_));
  _cached_size_ = 0;
}

AvosTime::~AvosTime() {
  // @@protoc_insertion_point(destructor:common_msgs.AvosTime)
  SharedDtor();
}

void AvosTime::SharedDtor() {
  if (this != internal_default_instance()) delete absolute_time_;
}

void AvosTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvosTime::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvosTime& AvosTime::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosTime();
  return *internal_default_instance();
}

AvosTime* AvosTime::New(::google::protobuf::Arena* arena) const {
  AvosTime* n = new AvosTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvosTime::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.AvosTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && absolute_time_ != NULL) {
    delete absolute_time_;
  }
  absolute_time_ = NULL;
  ::memset(&time_enable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_time_) -
      reinterpret_cast<char*>(&time_enable_)) + sizeof(relative_time_));
  _internal_metadata_.Clear();
}

bool AvosTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.AvosTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool time_enable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &time_enable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 relative_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relative_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.AvosClock absolute_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absolute_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.AvosTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.AvosTime)
  return false;
#undef DO_
}

void AvosTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.AvosTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool time_enable = 1;
  if (this->time_enable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->time_enable(), output);
  }

  // int32 relative_time = 2;
  if (this->relative_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->relative_time(), output);
  }

  // .common_msgs.AvosClock absolute_time = 3;
  if (this->has_absolute_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->absolute_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.AvosTime)
}

::google::protobuf::uint8* AvosTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.AvosTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool time_enable = 1;
  if (this->time_enable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->time_enable(), target);
  }

  // int32 relative_time = 2;
  if (this->relative_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->relative_time(), target);
  }

  // .common_msgs.AvosClock absolute_time = 3;
  if (this->has_absolute_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->absolute_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.AvosTime)
  return target;
}

size_t AvosTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.AvosTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.AvosClock absolute_time = 3;
  if (this->has_absolute_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->absolute_time_);
  }

  // bool time_enable = 1;
  if (this->time_enable() != 0) {
    total_size += 1 + 1;
  }

  // int32 relative_time = 2;
  if (this->relative_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->relative_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvosTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.AvosTime)
  GOOGLE_DCHECK_NE(&from, this);
  const AvosTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvosTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.AvosTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.AvosTime)
    MergeFrom(*source);
  }
}

void AvosTime::MergeFrom(const AvosTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.AvosTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_absolute_time()) {
    mutable_absolute_time()->::common_msgs::AvosClock::MergeFrom(from.absolute_time());
  }
  if (from.time_enable() != 0) {
    set_time_enable(from.time_enable());
  }
  if (from.relative_time() != 0) {
    set_relative_time(from.relative_time());
  }
}

void AvosTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.AvosTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvosTime::CopyFrom(const AvosTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.AvosTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvosTime::IsInitialized() const {
  return true;
}

void AvosTime::Swap(AvosTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvosTime::InternalSwap(AvosTime* other) {
  using std::swap;
  swap(absolute_time_, other->absolute_time_);
  swap(time_enable_, other->time_enable_);
  swap(relative_time_, other->relative_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvosTime::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsureVar::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsureVar::kVariableFieldNumber;
const int UnsureVar::kVarStdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsureVar::UnsureVar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.UnsureVar)
}
UnsureVar::UnsureVar(const UnsureVar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&variable_, &from.variable_,
    static_cast<size_t>(reinterpret_cast<char*>(&var_std_) -
    reinterpret_cast<char*>(&variable_)) + sizeof(var_std_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.UnsureVar)
}

void UnsureVar::SharedCtor() {
  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&var_std_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(var_std_));
  _cached_size_ = 0;
}

UnsureVar::~UnsureVar() {
  // @@protoc_insertion_point(destructor:common_msgs.UnsureVar)
  SharedDtor();
}

void UnsureVar::SharedDtor() {
}

void UnsureVar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsureVar::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsureVar& UnsureVar::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVar();
  return *internal_default_instance();
}

UnsureVar* UnsureVar::New(::google::protobuf::Arena* arena) const {
  UnsureVar* n = new UnsureVar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsureVar::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.UnsureVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&variable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&var_std_) -
      reinterpret_cast<char*>(&variable_)) + sizeof(var_std_));
  _internal_metadata_.Clear();
}

bool UnsureVar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.UnsureVar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double variable = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &variable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double var_std = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &var_std_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.UnsureVar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.UnsureVar)
  return false;
#undef DO_
}

void UnsureVar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.UnsureVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double variable = 1;
  if (this->variable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->variable(), output);
  }

  // double var_std = 2;
  if (this->var_std() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->var_std(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.UnsureVar)
}

::google::protobuf::uint8* UnsureVar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.UnsureVar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double variable = 1;
  if (this->variable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->variable(), target);
  }

  // double var_std = 2;
  if (this->var_std() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->var_std(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.UnsureVar)
  return target;
}

size_t UnsureVar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.UnsureVar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double variable = 1;
  if (this->variable() != 0) {
    total_size += 1 + 8;
  }

  // double var_std = 2;
  if (this->var_std() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsureVar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.UnsureVar)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsureVar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsureVar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.UnsureVar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.UnsureVar)
    MergeFrom(*source);
  }
}

void UnsureVar::MergeFrom(const UnsureVar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.UnsureVar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.variable() != 0) {
    set_variable(from.variable());
  }
  if (from.var_std() != 0) {
    set_var_std(from.var_std());
  }
}

void UnsureVar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.UnsureVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsureVar::CopyFrom(const UnsureVar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.UnsureVar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsureVar::IsInitialized() const {
  return true;
}

void UnsureVar::Swap(UnsureVar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsureVar::InternalSwap(UnsureVar* other) {
  using std::swap;
  swap(variable_, other->variable_);
  swap(var_std_, other->var_std_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsureVar::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3WithCovariance::InitAsDefaultInstance() {
  ::common_msgs::_Vector3WithCovariance_default_instance_._instance.get_mutable()->x_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_Vector3WithCovariance_default_instance_._instance.get_mutable()->y_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_Vector3WithCovariance_default_instance_._instance.get_mutable()->z_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3WithCovariance::kXFieldNumber;
const int Vector3WithCovariance::kYFieldNumber;
const int Vector3WithCovariance::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3WithCovariance::Vector3WithCovariance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovariance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Vector3WithCovariance)
}
Vector3WithCovariance::Vector3WithCovariance(const Vector3WithCovariance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_x()) {
    x_ = new ::common_msgs::UnsureVar(*from.x_);
  } else {
    x_ = NULL;
  }
  if (from.has_y()) {
    y_ = new ::common_msgs::UnsureVar(*from.y_);
  } else {
    y_ = NULL;
  }
  if (from.has_z()) {
    z_ = new ::common_msgs::UnsureVar(*from.z_);
  } else {
    z_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.Vector3WithCovariance)
}

void Vector3WithCovariance::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector3WithCovariance::~Vector3WithCovariance() {
  // @@protoc_insertion_point(destructor:common_msgs.Vector3WithCovariance)
  SharedDtor();
}

void Vector3WithCovariance::SharedDtor() {
  if (this != internal_default_instance()) delete x_;
  if (this != internal_default_instance()) delete y_;
  if (this != internal_default_instance()) delete z_;
}

void Vector3WithCovariance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3WithCovariance::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3WithCovariance& Vector3WithCovariance::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovariance();
  return *internal_default_instance();
}

Vector3WithCovariance* Vector3WithCovariance::New(::google::protobuf::Arena* arena) const {
  Vector3WithCovariance* n = new Vector3WithCovariance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3WithCovariance::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Vector3WithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && x_ != NULL) {
    delete x_;
  }
  x_ = NULL;
  if (GetArenaNoVirtual() == NULL && y_ != NULL) {
    delete y_;
  }
  y_ = NULL;
  if (GetArenaNoVirtual() == NULL && z_ != NULL) {
    delete z_;
  }
  z_ = NULL;
  _internal_metadata_.Clear();
}

bool Vector3WithCovariance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Vector3WithCovariance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.UnsureVar x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_z()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Vector3WithCovariance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Vector3WithCovariance)
  return false;
#undef DO_
}

void Vector3WithCovariance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Vector3WithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->x_, output);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->y_, output);
  }

  // .common_msgs.UnsureVar z = 3;
  if (this->has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->z_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Vector3WithCovariance)
}

::google::protobuf::uint8* Vector3WithCovariance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Vector3WithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->x_, deterministic, target);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->y_, deterministic, target);
  }

  // .common_msgs.UnsureVar z = 3;
  if (this->has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->z_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Vector3WithCovariance)
  return target;
}

size_t Vector3WithCovariance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Vector3WithCovariance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->x_);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->y_);
  }

  // .common_msgs.UnsureVar z = 3;
  if (this->has_z()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->z_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3WithCovariance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Vector3WithCovariance)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3WithCovariance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3WithCovariance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Vector3WithCovariance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Vector3WithCovariance)
    MergeFrom(*source);
  }
}

void Vector3WithCovariance::MergeFrom(const Vector3WithCovariance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Vector3WithCovariance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_x()) {
    mutable_x()->::common_msgs::UnsureVar::MergeFrom(from.x());
  }
  if (from.has_y()) {
    mutable_y()->::common_msgs::UnsureVar::MergeFrom(from.y());
  }
  if (from.has_z()) {
    mutable_z()->::common_msgs::UnsureVar::MergeFrom(from.z());
  }
}

void Vector3WithCovariance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Vector3WithCovariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3WithCovariance::CopyFrom(const Vector3WithCovariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Vector3WithCovariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3WithCovariance::IsInitialized() const {
  return true;
}

void Vector3WithCovariance::Swap(Vector3WithCovariance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3WithCovariance::InternalSwap(Vector3WithCovariance* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3WithCovariance::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quaternion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quaternion::kXFieldNumber;
const int Quaternion::kYFieldNumber;
const int Quaternion::kZFieldNumber;
const int Quaternion::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quaternion::Quaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsQuaternion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Quaternion)
}
Quaternion::Quaternion(const Quaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.Quaternion)
}

void Quaternion::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _cached_size_ = 0;
}

Quaternion::~Quaternion() {
  // @@protoc_insertion_point(destructor:common_msgs.Quaternion)
  SharedDtor();
}

void Quaternion::SharedDtor() {
}

void Quaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quaternion::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quaternion& Quaternion::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsQuaternion();
  return *internal_default_instance();
}

Quaternion* Quaternion::New(::google::protobuf::Arena* arena) const {
  Quaternion* n = new Quaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _internal_metadata_.Clear();
}

bool Quaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Quaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Quaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Quaternion)
  return false;
#undef DO_
}

void Quaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // double w = 4;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->w(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Quaternion)
}

::google::protobuf::uint8* Quaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Quaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // double w = 4;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->w(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Quaternion)
  return target;
}

size_t Quaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Quaternion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // double w = 4;
  if (this->w() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const Quaternion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Quaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Quaternion)
    MergeFrom(*source);
  }
}

void Quaternion::MergeFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Quaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
}

void Quaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quaternion::CopyFrom(const Quaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Quaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quaternion::IsInitialized() const {
  return true;
}

void Quaternion::Swap(Quaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quaternion::InternalSwap(Quaternion* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(w_, other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quaternion::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3::kXFieldNumber;
const int Vector3::kYFieldNumber;
const int Vector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3::Vector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Vector3)
}
Vector3::Vector3(const Vector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.Vector3)
}

void Vector3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:common_msgs.Vector3)
  SharedDtor();
}

void Vector3::SharedDtor() {
}

void Vector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3& Vector3::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3();
  return *internal_default_instance();
}

Vector3* Vector3::New(::google::protobuf::Arena* arena) const {
  Vector3* n = new Vector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Vector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Vector3)
  return false;
#undef DO_
}

void Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Vector3)
}

::google::protobuf::uint8* Vector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Vector3)
  return target;
}

size_t Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Vector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Vector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Vector3)
    MergeFrom(*source);
  }
}

void Vector3::MergeFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3::IsInitialized() const {
  return true;
}

void Vector3::Swap(Vector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3::InternalSwap(Vector3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsurePoint::InitAsDefaultInstance() {
  ::common_msgs::_UnsurePoint_default_instance_._instance.get_mutable()->x_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_UnsurePoint_default_instance_._instance.get_mutable()->y_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_UnsurePoint_default_instance_._instance.get_mutable()->heading_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsurePoint::kXFieldNumber;
const int UnsurePoint::kYFieldNumber;
const int UnsurePoint::kHeadingFieldNumber;
const int UnsurePoint::kRhoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsurePoint::UnsurePoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.UnsurePoint)
}
UnsurePoint::UnsurePoint(const UnsurePoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_x()) {
    x_ = new ::common_msgs::UnsureVar(*from.x_);
  } else {
    x_ = NULL;
  }
  if (from.has_y()) {
    y_ = new ::common_msgs::UnsureVar(*from.y_);
  } else {
    y_ = NULL;
  }
  if (from.has_heading()) {
    heading_ = new ::common_msgs::UnsureVar(*from.heading_);
  } else {
    heading_ = NULL;
  }
  rho_ = from.rho_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.UnsurePoint)
}

void UnsurePoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rho_) -
      reinterpret_cast<char*>(&x_)) + sizeof(rho_));
  _cached_size_ = 0;
}

UnsurePoint::~UnsurePoint() {
  // @@protoc_insertion_point(destructor:common_msgs.UnsurePoint)
  SharedDtor();
}

void UnsurePoint::SharedDtor() {
  if (this != internal_default_instance()) delete x_;
  if (this != internal_default_instance()) delete y_;
  if (this != internal_default_instance()) delete heading_;
}

void UnsurePoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsurePoint::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsurePoint& UnsurePoint::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePoint();
  return *internal_default_instance();
}

UnsurePoint* UnsurePoint::New(::google::protobuf::Arena* arena) const {
  UnsurePoint* n = new UnsurePoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsurePoint::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.UnsurePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && x_ != NULL) {
    delete x_;
  }
  x_ = NULL;
  if (GetArenaNoVirtual() == NULL && y_ != NULL) {
    delete y_;
  }
  y_ = NULL;
  if (GetArenaNoVirtual() == NULL && heading_ != NULL) {
    delete heading_;
  }
  heading_ = NULL;
  rho_ = 0;
  _internal_metadata_.Clear();
}

bool UnsurePoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.UnsurePoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.UnsureVar x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_y()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar heading = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_heading()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double rho = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rho_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.UnsurePoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.UnsurePoint)
  return false;
#undef DO_
}

void UnsurePoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.UnsurePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->x_, output);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->y_, output);
  }

  // .common_msgs.UnsureVar heading = 3;
  if (this->has_heading()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->heading_, output);
  }

  // double rho = 4;
  if (this->rho() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->rho(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.UnsurePoint)
}

::google::protobuf::uint8* UnsurePoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.UnsurePoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->x_, deterministic, target);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->y_, deterministic, target);
  }

  // .common_msgs.UnsureVar heading = 3;
  if (this->has_heading()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->heading_, deterministic, target);
  }

  // double rho = 4;
  if (this->rho() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->rho(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.UnsurePoint)
  return target;
}

size_t UnsurePoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.UnsurePoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsureVar x = 1;
  if (this->has_x()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->x_);
  }

  // .common_msgs.UnsureVar y = 2;
  if (this->has_y()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->y_);
  }

  // .common_msgs.UnsureVar heading = 3;
  if (this->has_heading()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->heading_);
  }

  // double rho = 4;
  if (this->rho() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsurePoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.UnsurePoint)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsurePoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsurePoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.UnsurePoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.UnsurePoint)
    MergeFrom(*source);
  }
}

void UnsurePoint::MergeFrom(const UnsurePoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.UnsurePoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_x()) {
    mutable_x()->::common_msgs::UnsureVar::MergeFrom(from.x());
  }
  if (from.has_y()) {
    mutable_y()->::common_msgs::UnsureVar::MergeFrom(from.y());
  }
  if (from.has_heading()) {
    mutable_heading()->::common_msgs::UnsureVar::MergeFrom(from.heading());
  }
  if (from.rho() != 0) {
    set_rho(from.rho());
  }
}

void UnsurePoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.UnsurePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsurePoint::CopyFrom(const UnsurePoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.UnsurePoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsurePoint::IsInitialized() const {
  return true;
}

void UnsurePoint::Swap(UnsurePoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsurePoint::InternalSwap(UnsurePoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(heading_, other->heading_);
  swap(rho_, other->rho_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsurePoint::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnsurePosition::InitAsDefaultInstance() {
  ::common_msgs::_UnsurePosition_default_instance_._instance.get_mutable()->point_ = const_cast< ::common_msgs::UnsurePoint*>(
      ::common_msgs::UnsurePoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnsurePosition::kParkingIdFieldNumber;
const int UnsurePosition::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnsurePosition::UnsurePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.UnsurePosition)
}
UnsurePosition::UnsurePosition(const UnsurePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_point()) {
    point_ = new ::common_msgs::UnsurePoint(*from.point_);
  } else {
    point_ = NULL;
  }
  parking_id_ = from.parking_id_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.UnsurePosition)
}

void UnsurePosition::SharedCtor() {
  ::memset(&point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&parking_id_) -
      reinterpret_cast<char*>(&point_)) + sizeof(parking_id_));
  _cached_size_ = 0;
}

UnsurePosition::~UnsurePosition() {
  // @@protoc_insertion_point(destructor:common_msgs.UnsurePosition)
  SharedDtor();
}

void UnsurePosition::SharedDtor() {
  if (this != internal_default_instance()) delete point_;
}

void UnsurePosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnsurePosition::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnsurePosition& UnsurePosition::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePosition();
  return *internal_default_instance();
}

UnsurePosition* UnsurePosition::New(::google::protobuf::Arena* arena) const {
  UnsurePosition* n = new UnsurePosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnsurePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.UnsurePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
  parking_id_ = 0;
  _internal_metadata_.Clear();
}

bool UnsurePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.UnsurePosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 parking_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parking_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsurePoint point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.UnsurePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.UnsurePosition)
  return false;
#undef DO_
}

void UnsurePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.UnsurePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parking_id = 1;
  if (this->parking_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->parking_id(), output);
  }

  // .common_msgs.UnsurePoint point = 2;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->point_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.UnsurePosition)
}

::google::protobuf::uint8* UnsurePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.UnsurePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parking_id = 1;
  if (this->parking_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->parking_id(), target);
  }

  // .common_msgs.UnsurePoint point = 2;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->point_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.UnsurePosition)
  return target;
}

size_t UnsurePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.UnsurePosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsurePoint point = 2;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->point_);
  }

  // int32 parking_id = 1;
  if (this->parking_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parking_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnsurePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.UnsurePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const UnsurePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnsurePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.UnsurePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.UnsurePosition)
    MergeFrom(*source);
  }
}

void UnsurePosition::MergeFrom(const UnsurePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.UnsurePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_point()) {
    mutable_point()->::common_msgs::UnsurePoint::MergeFrom(from.point());
  }
  if (from.parking_id() != 0) {
    set_parking_id(from.parking_id());
  }
}

void UnsurePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.UnsurePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnsurePosition::CopyFrom(const UnsurePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.UnsurePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnsurePosition::IsInitialized() const {
  return true;
}

void UnsurePosition::Swap(UnsurePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnsurePosition::InternalSwap(UnsurePosition* other) {
  using std::swap;
  swap(point_, other->point_);
  swap(parking_id_, other->parking_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnsurePosition::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EulerWithCovariance::InitAsDefaultInstance() {
  ::common_msgs::_EulerWithCovariance_default_instance_._instance.get_mutable()->roll_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_EulerWithCovariance_default_instance_._instance.get_mutable()->pitch_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_EulerWithCovariance_default_instance_._instance.get_mutable()->yaw_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EulerWithCovariance::kRollFieldNumber;
const int EulerWithCovariance::kPitchFieldNumber;
const int EulerWithCovariance::kYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EulerWithCovariance::EulerWithCovariance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsEulerWithCovariance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.EulerWithCovariance)
}
EulerWithCovariance::EulerWithCovariance(const EulerWithCovariance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roll()) {
    roll_ = new ::common_msgs::UnsureVar(*from.roll_);
  } else {
    roll_ = NULL;
  }
  if (from.has_pitch()) {
    pitch_ = new ::common_msgs::UnsureVar(*from.pitch_);
  } else {
    pitch_ = NULL;
  }
  if (from.has_yaw()) {
    yaw_ = new ::common_msgs::UnsureVar(*from.yaw_);
  } else {
    yaw_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.EulerWithCovariance)
}

void EulerWithCovariance::SharedCtor() {
  ::memset(&roll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_) -
      reinterpret_cast<char*>(&roll_)) + sizeof(yaw_));
  _cached_size_ = 0;
}

EulerWithCovariance::~EulerWithCovariance() {
  // @@protoc_insertion_point(destructor:common_msgs.EulerWithCovariance)
  SharedDtor();
}

void EulerWithCovariance::SharedDtor() {
  if (this != internal_default_instance()) delete roll_;
  if (this != internal_default_instance()) delete pitch_;
  if (this != internal_default_instance()) delete yaw_;
}

void EulerWithCovariance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EulerWithCovariance::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EulerWithCovariance& EulerWithCovariance::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsEulerWithCovariance();
  return *internal_default_instance();
}

EulerWithCovariance* EulerWithCovariance::New(::google::protobuf::Arena* arena) const {
  EulerWithCovariance* n = new EulerWithCovariance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EulerWithCovariance::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.EulerWithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && roll_ != NULL) {
    delete roll_;
  }
  roll_ = NULL;
  if (GetArenaNoVirtual() == NULL && pitch_ != NULL) {
    delete pitch_;
  }
  pitch_ = NULL;
  if (GetArenaNoVirtual() == NULL && yaw_ != NULL) {
    delete yaw_;
  }
  yaw_ = NULL;
  _internal_metadata_.Clear();
}

bool EulerWithCovariance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.EulerWithCovariance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.UnsureVar roll = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roll()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar pitch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pitch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar yaw = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yaw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.EulerWithCovariance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.EulerWithCovariance)
  return false;
#undef DO_
}

void EulerWithCovariance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.EulerWithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar roll = 1;
  if (this->has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->roll_, output);
  }

  // .common_msgs.UnsureVar pitch = 2;
  if (this->has_pitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pitch_, output);
  }

  // .common_msgs.UnsureVar yaw = 3;
  if (this->has_yaw()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->yaw_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.EulerWithCovariance)
}

::google::protobuf::uint8* EulerWithCovariance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.EulerWithCovariance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar roll = 1;
  if (this->has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->roll_, deterministic, target);
  }

  // .common_msgs.UnsureVar pitch = 2;
  if (this->has_pitch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pitch_, deterministic, target);
  }

  // .common_msgs.UnsureVar yaw = 3;
  if (this->has_yaw()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->yaw_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.EulerWithCovariance)
  return target;
}

size_t EulerWithCovariance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.EulerWithCovariance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsureVar roll = 1;
  if (this->has_roll()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->roll_);
  }

  // .common_msgs.UnsureVar pitch = 2;
  if (this->has_pitch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pitch_);
  }

  // .common_msgs.UnsureVar yaw = 3;
  if (this->has_yaw()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->yaw_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EulerWithCovariance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.EulerWithCovariance)
  GOOGLE_DCHECK_NE(&from, this);
  const EulerWithCovariance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EulerWithCovariance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.EulerWithCovariance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.EulerWithCovariance)
    MergeFrom(*source);
  }
}

void EulerWithCovariance::MergeFrom(const EulerWithCovariance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.EulerWithCovariance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roll()) {
    mutable_roll()->::common_msgs::UnsureVar::MergeFrom(from.roll());
  }
  if (from.has_pitch()) {
    mutable_pitch()->::common_msgs::UnsureVar::MergeFrom(from.pitch());
  }
  if (from.has_yaw()) {
    mutable_yaw()->::common_msgs::UnsureVar::MergeFrom(from.yaw());
  }
}

void EulerWithCovariance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.EulerWithCovariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EulerWithCovariance::CopyFrom(const EulerWithCovariance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.EulerWithCovariance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EulerWithCovariance::IsInitialized() const {
  return true;
}

void EulerWithCovariance::Swap(EulerWithCovariance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EulerWithCovariance::InternalSwap(EulerWithCovariance* other) {
  using std::swap;
  swap(roll_, other->roll_);
  swap(pitch_, other->pitch_);
  swap(yaw_, other->yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EulerWithCovariance::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoseEuler::InitAsDefaultInstance() {
  ::common_msgs::_PoseEuler_default_instance_._instance.get_mutable()->position_ = const_cast< ::common_msgs::Vector3WithCovariance*>(
      ::common_msgs::Vector3WithCovariance::internal_default_instance());
  ::common_msgs::_PoseEuler_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::common_msgs::EulerWithCovariance*>(
      ::common_msgs::EulerWithCovariance::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseEuler::kPositionFieldNumber;
const int PoseEuler::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseEuler::PoseEuler()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseEuler();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.PoseEuler)
}
PoseEuler::PoseEuler(const PoseEuler& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::common_msgs::Vector3WithCovariance(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::common_msgs::EulerWithCovariance(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.PoseEuler)
}

void PoseEuler::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rotation_));
  _cached_size_ = 0;
}

PoseEuler::~PoseEuler() {
  // @@protoc_insertion_point(destructor:common_msgs.PoseEuler)
  SharedDtor();
}

void PoseEuler::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void PoseEuler::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PoseEuler::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseEuler& PoseEuler::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseEuler();
  return *internal_default_instance();
}

PoseEuler* PoseEuler::New(::google::protobuf::Arena* arena) const {
  PoseEuler* n = new PoseEuler;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PoseEuler::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.PoseEuler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  _internal_metadata_.Clear();
}

bool PoseEuler::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.PoseEuler)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Vector3WithCovariance position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.EulerWithCovariance rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.PoseEuler)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.PoseEuler)
  return false;
#undef DO_
}

void PoseEuler::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.PoseEuler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // .common_msgs.EulerWithCovariance rotation = 2;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rotation_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.PoseEuler)
}

::google::protobuf::uint8* PoseEuler::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.PoseEuler)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->position_, deterministic, target);
  }

  // .common_msgs.EulerWithCovariance rotation = 2;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->rotation_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.PoseEuler)
  return target;
}

size_t PoseEuler::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.PoseEuler)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .common_msgs.EulerWithCovariance rotation = 2;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rotation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PoseEuler::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.PoseEuler)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseEuler* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseEuler>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.PoseEuler)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.PoseEuler)
    MergeFrom(*source);
  }
}

void PoseEuler::MergeFrom(const PoseEuler& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.PoseEuler)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::common_msgs::Vector3WithCovariance::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::common_msgs::EulerWithCovariance::MergeFrom(from.rotation());
  }
}

void PoseEuler::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.PoseEuler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseEuler::CopyFrom(const PoseEuler& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.PoseEuler)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseEuler::IsInitialized() const {
  return true;
}

void PoseEuler::Swap(PoseEuler* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseEuler::InternalSwap(PoseEuler* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PoseEuler::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DRPoseWithTime::InitAsDefaultInstance() {
  ::common_msgs::_DRPoseWithTime_default_instance_._instance.get_mutable()->pose_euler_ = const_cast< ::common_msgs::PoseEuler*>(
      ::common_msgs::PoseEuler::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DRPoseWithTime::kWeekFieldNumber;
const int DRPoseWithTime::kUtctimeFieldNumber;
const int DRPoseWithTime::kDrTimeFieldNumber;
const int DRPoseWithTime::kPoseEulerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DRPoseWithTime::DRPoseWithTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsDRPoseWithTime();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.DRPoseWithTime)
}
DRPoseWithTime::DRPoseWithTime(const DRPoseWithTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose_euler()) {
    pose_euler_ = new ::common_msgs::PoseEuler(*from.pose_euler_);
  } else {
    pose_euler_ = NULL;
  }
  ::memcpy(&utctime_, &from.utctime_,
    static_cast<size_t>(reinterpret_cast<char*>(&week_) -
    reinterpret_cast<char*>(&utctime_)) + sizeof(week_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.DRPoseWithTime)
}

void DRPoseWithTime::SharedCtor() {
  ::memset(&pose_euler_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&pose_euler_)) + sizeof(week_));
  _cached_size_ = 0;
}

DRPoseWithTime::~DRPoseWithTime() {
  // @@protoc_insertion_point(destructor:common_msgs.DRPoseWithTime)
  SharedDtor();
}

void DRPoseWithTime::SharedDtor() {
  if (this != internal_default_instance()) delete pose_euler_;
}

void DRPoseWithTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DRPoseWithTime::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DRPoseWithTime& DRPoseWithTime::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsDRPoseWithTime();
  return *internal_default_instance();
}

DRPoseWithTime* DRPoseWithTime::New(::google::protobuf::Arena* arena) const {
  DRPoseWithTime* n = new DRPoseWithTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DRPoseWithTime::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.DRPoseWithTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pose_euler_ != NULL) {
    delete pose_euler_;
  }
  pose_euler_ = NULL;
  ::memset(&utctime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&utctime_)) + sizeof(week_));
  _internal_metadata_.Clear();
}

bool DRPoseWithTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.DRPoseWithTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 week = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double utctime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &utctime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dr_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dr_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.PoseEuler pose_euler = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose_euler()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.DRPoseWithTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.DRPoseWithTime)
  return false;
#undef DO_
}

void DRPoseWithTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.DRPoseWithTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 week = 1;
  if (this->week() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->week(), output);
  }

  // double utctime = 2;
  if (this->utctime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->utctime(), output);
  }

  // double dr_time = 3;
  if (this->dr_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->dr_time(), output);
  }

  // .common_msgs.PoseEuler pose_euler = 4;
  if (this->has_pose_euler()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pose_euler_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.DRPoseWithTime)
}

::google::protobuf::uint8* DRPoseWithTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.DRPoseWithTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 week = 1;
  if (this->week() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->week(), target);
  }

  // double utctime = 2;
  if (this->utctime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->utctime(), target);
  }

  // double dr_time = 3;
  if (this->dr_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->dr_time(), target);
  }

  // .common_msgs.PoseEuler pose_euler = 4;
  if (this->has_pose_euler()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->pose_euler_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.DRPoseWithTime)
  return target;
}

size_t DRPoseWithTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.DRPoseWithTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.PoseEuler pose_euler = 4;
  if (this->has_pose_euler()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pose_euler_);
  }

  // double utctime = 2;
  if (this->utctime() != 0) {
    total_size += 1 + 8;
  }

  // double dr_time = 3;
  if (this->dr_time() != 0) {
    total_size += 1 + 8;
  }

  // int32 week = 1;
  if (this->week() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->week());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DRPoseWithTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.DRPoseWithTime)
  GOOGLE_DCHECK_NE(&from, this);
  const DRPoseWithTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DRPoseWithTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.DRPoseWithTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.DRPoseWithTime)
    MergeFrom(*source);
  }
}

void DRPoseWithTime::MergeFrom(const DRPoseWithTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.DRPoseWithTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pose_euler()) {
    mutable_pose_euler()->::common_msgs::PoseEuler::MergeFrom(from.pose_euler());
  }
  if (from.utctime() != 0) {
    set_utctime(from.utctime());
  }
  if (from.dr_time() != 0) {
    set_dr_time(from.dr_time());
  }
  if (from.week() != 0) {
    set_week(from.week());
  }
}

void DRPoseWithTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.DRPoseWithTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DRPoseWithTime::CopyFrom(const DRPoseWithTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.DRPoseWithTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DRPoseWithTime::IsInitialized() const {
  return true;
}

void DRPoseWithTime::Swap(DRPoseWithTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DRPoseWithTime::InternalSwap(DRPoseWithTime* other) {
  using std::swap;
  swap(pose_euler_, other->pose_euler_);
  swap(utctime_, other->utctime_);
  swap(dr_time_, other->dr_time_);
  swap(week_, other->week_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DRPoseWithTime::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Twist::InitAsDefaultInstance() {
  ::common_msgs::_Twist_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::common_msgs::Vector3WithCovariance*>(
      ::common_msgs::Vector3WithCovariance::internal_default_instance());
  ::common_msgs::_Twist_default_instance_._instance.get_mutable()->angular_velocity_ = const_cast< ::common_msgs::Vector3WithCovariance*>(
      ::common_msgs::Vector3WithCovariance::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Twist::kVelocityFieldNumber;
const int Twist::kAngularVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Twist::Twist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsTwist();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Twist)
}
Twist::Twist(const Twist& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_velocity()) {
    velocity_ = new ::common_msgs::Vector3WithCovariance(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_angular_velocity()) {
    angular_velocity_ = new ::common_msgs::Vector3WithCovariance(*from.angular_velocity_);
  } else {
    angular_velocity_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.Twist)
}

void Twist::SharedCtor() {
  ::memset(&velocity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_) -
      reinterpret_cast<char*>(&velocity_)) + sizeof(angular_velocity_));
  _cached_size_ = 0;
}

Twist::~Twist() {
  // @@protoc_insertion_point(destructor:common_msgs.Twist)
  SharedDtor();
}

void Twist::SharedDtor() {
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete angular_velocity_;
}

void Twist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Twist::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Twist& Twist::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsTwist();
  return *internal_default_instance();
}

Twist* Twist::New(::google::protobuf::Arena* arena) const {
  Twist* n = new Twist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Twist::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && angular_velocity_ != NULL) {
    delete angular_velocity_;
  }
  angular_velocity_ = NULL;
  _internal_metadata_.Clear();
}

bool Twist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Twist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Vector3WithCovariance velocity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.Vector3WithCovariance angular_velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Twist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Twist)
  return false;
#undef DO_
}

void Twist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance velocity = 1;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->velocity_, output);
  }

  // .common_msgs.Vector3WithCovariance angular_velocity = 2;
  if (this->has_angular_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->angular_velocity_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Twist)
}

::google::protobuf::uint8* Twist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Twist)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance velocity = 1;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->velocity_, deterministic, target);
  }

  // .common_msgs.Vector3WithCovariance angular_velocity = 2;
  if (this->has_angular_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->angular_velocity_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Twist)
  return target;
}

size_t Twist::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Twist)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.Vector3WithCovariance velocity = 1;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->velocity_);
  }

  // .common_msgs.Vector3WithCovariance angular_velocity = 2;
  if (this->has_angular_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->angular_velocity_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Twist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Twist)
  GOOGLE_DCHECK_NE(&from, this);
  const Twist* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Twist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Twist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Twist)
    MergeFrom(*source);
  }
}

void Twist::MergeFrom(const Twist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Twist)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_velocity()) {
    mutable_velocity()->::common_msgs::Vector3WithCovariance::MergeFrom(from.velocity());
  }
  if (from.has_angular_velocity()) {
    mutable_angular_velocity()->::common_msgs::Vector3WithCovariance::MergeFrom(from.angular_velocity());
  }
}

void Twist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Twist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Twist::CopyFrom(const Twist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Twist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Twist::IsInitialized() const {
  return true;
}

void Twist::Swap(Twist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Twist::InternalSwap(Twist* other) {
  using std::swap;
  swap(velocity_, other->velocity_);
  swap(angular_velocity_, other->angular_velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Twist::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LLH::InitAsDefaultInstance() {
  ::common_msgs::_LLH_default_instance_._instance.get_mutable()->lat_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_LLH_default_instance_._instance.get_mutable()->lon_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
  ::common_msgs::_LLH_default_instance_._instance.get_mutable()->height_ = const_cast< ::common_msgs::UnsureVar*>(
      ::common_msgs::UnsureVar::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LLH::kLatFieldNumber;
const int LLH::kLonFieldNumber;
const int LLH::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LLH::LLH()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsLLH();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.LLH)
}
LLH::LLH(const LLH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lat()) {
    lat_ = new ::common_msgs::UnsureVar(*from.lat_);
  } else {
    lat_ = NULL;
  }
  if (from.has_lon()) {
    lon_ = new ::common_msgs::UnsureVar(*from.lon_);
  } else {
    lon_ = NULL;
  }
  if (from.has_height()) {
    height_ = new ::common_msgs::UnsureVar(*from.height_);
  } else {
    height_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.LLH)
}

void LLH::SharedCtor() {
  ::memset(&lat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&lat_)) + sizeof(height_));
  _cached_size_ = 0;
}

LLH::~LLH() {
  // @@protoc_insertion_point(destructor:common_msgs.LLH)
  SharedDtor();
}

void LLH::SharedDtor() {
  if (this != internal_default_instance()) delete lat_;
  if (this != internal_default_instance()) delete lon_;
  if (this != internal_default_instance()) delete height_;
}

void LLH::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LLH::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LLH& LLH::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsLLH();
  return *internal_default_instance();
}

LLH* LLH::New(::google::protobuf::Arena* arena) const {
  LLH* n = new LLH;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LLH::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.LLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lat_ != NULL) {
    delete lat_;
  }
  lat_ = NULL;
  if (GetArenaNoVirtual() == NULL && lon_ != NULL) {
    delete lon_;
  }
  lon_ = NULL;
  if (GetArenaNoVirtual() == NULL && height_ != NULL) {
    delete height_;
  }
  height_ = NULL;
  _internal_metadata_.Clear();
}

bool LLH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.LLH)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.UnsureVar lat = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar lon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsureVar height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_height()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.LLH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.LLH)
  return false;
#undef DO_
}

void LLH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.LLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar lat = 1;
  if (this->has_lat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lat_, output);
  }

  // .common_msgs.UnsureVar lon = 2;
  if (this->has_lon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lon_, output);
  }

  // .common_msgs.UnsureVar height = 3;
  if (this->has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->height_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.LLH)
}

::google::protobuf::uint8* LLH::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.LLH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsureVar lat = 1;
  if (this->has_lat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->lat_, deterministic, target);
  }

  // .common_msgs.UnsureVar lon = 2;
  if (this->has_lon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->lon_, deterministic, target);
  }

  // .common_msgs.UnsureVar height = 3;
  if (this->has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->height_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.LLH)
  return target;
}

size_t LLH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.LLH)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsureVar lat = 1;
  if (this->has_lat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lat_);
  }

  // .common_msgs.UnsureVar lon = 2;
  if (this->has_lon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lon_);
  }

  // .common_msgs.UnsureVar height = 3;
  if (this->has_height()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->height_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LLH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.LLH)
  GOOGLE_DCHECK_NE(&from, this);
  const LLH* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LLH>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.LLH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.LLH)
    MergeFrom(*source);
  }
}

void LLH::MergeFrom(const LLH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.LLH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lat()) {
    mutable_lat()->::common_msgs::UnsureVar::MergeFrom(from.lat());
  }
  if (from.has_lon()) {
    mutable_lon()->::common_msgs::UnsureVar::MergeFrom(from.lon());
  }
  if (from.has_height()) {
    mutable_height()->::common_msgs::UnsureVar::MergeFrom(from.height());
  }
}

void LLH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.LLH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LLH::CopyFrom(const LLH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.LLH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LLH::IsInitialized() const {
  return true;
}

void LLH::Swap(LLH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LLH::InternalSwap(LLH* other) {
  using std::swap;
  swap(lat_, other->lat_);
  swap(lon_, other->lon_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LLH::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NavStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NavStatus::kUtcTimeFieldNumber;
const int NavStatus::kGpsStatusFieldNumber;
const int NavStatus::kPosStatusFieldNumber;
const int NavStatus::kAttStatusFieldNumber;
const int NavStatus::kInitStatusFieldNumber;
const int NavStatus::kSateNumFieldNumber;
const int NavStatus::kHdopFieldNumber;
const int NavStatus::kPdopFieldNumber;
const int NavStatus::kDiffAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NavStatus::NavStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsNavStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.NavStatus)
}
NavStatus::NavStatus(const NavStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&utc_time_, &from.utc_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&diff_age_) -
    reinterpret_cast<char*>(&utc_time_)) + sizeof(diff_age_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.NavStatus)
}

void NavStatus::SharedCtor() {
  ::memset(&utc_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diff_age_) -
      reinterpret_cast<char*>(&utc_time_)) + sizeof(diff_age_));
  _cached_size_ = 0;
}

NavStatus::~NavStatus() {
  // @@protoc_insertion_point(destructor:common_msgs.NavStatus)
  SharedDtor();
}

void NavStatus::SharedDtor() {
}

void NavStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NavStatus::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NavStatus& NavStatus::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsNavStatus();
  return *internal_default_instance();
}

NavStatus* NavStatus::New(::google::protobuf::Arena* arena) const {
  NavStatus* n = new NavStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NavStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.NavStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&utc_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diff_age_) -
      reinterpret_cast<char*>(&utc_time_)) + sizeof(diff_age_));
  _internal_metadata_.Clear();
}

bool NavStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.NavStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double utc_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &utc_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gps_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gps_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 pos_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 att_status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &att_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 init_status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &init_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sate_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sate_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hdop = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float pdop = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pdop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float diff_age = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &diff_age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.NavStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.NavStatus)
  return false;
#undef DO_
}

void NavStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.NavStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double utc_time = 1;
  if (this->utc_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->utc_time(), output);
  }

  // int32 gps_status = 2;
  if (this->gps_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gps_status(), output);
  }

  // int32 pos_status = 3;
  if (this->pos_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_status(), output);
  }

  // int32 att_status = 4;
  if (this->att_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->att_status(), output);
  }

  // int32 init_status = 5;
  if (this->init_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->init_status(), output);
  }

  // int32 sate_num = 6;
  if (this->sate_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sate_num(), output);
  }

  // float hdop = 7;
  if (this->hdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->hdop(), output);
  }

  // float pdop = 8;
  if (this->pdop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->pdop(), output);
  }

  // float diff_age = 9;
  if (this->diff_age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->diff_age(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.NavStatus)
}

::google::protobuf::uint8* NavStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.NavStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double utc_time = 1;
  if (this->utc_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->utc_time(), target);
  }

  // int32 gps_status = 2;
  if (this->gps_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gps_status(), target);
  }

  // int32 pos_status = 3;
  if (this->pos_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_status(), target);
  }

  // int32 att_status = 4;
  if (this->att_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->att_status(), target);
  }

  // int32 init_status = 5;
  if (this->init_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->init_status(), target);
  }

  // int32 sate_num = 6;
  if (this->sate_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sate_num(), target);
  }

  // float hdop = 7;
  if (this->hdop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->hdop(), target);
  }

  // float pdop = 8;
  if (this->pdop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->pdop(), target);
  }

  // float diff_age = 9;
  if (this->diff_age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->diff_age(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.NavStatus)
  return target;
}

size_t NavStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.NavStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double utc_time = 1;
  if (this->utc_time() != 0) {
    total_size += 1 + 8;
  }

  // int32 gps_status = 2;
  if (this->gps_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gps_status());
  }

  // int32 pos_status = 3;
  if (this->pos_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos_status());
  }

  // int32 att_status = 4;
  if (this->att_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->att_status());
  }

  // int32 init_status = 5;
  if (this->init_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->init_status());
  }

  // int32 sate_num = 6;
  if (this->sate_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sate_num());
  }

  // float hdop = 7;
  if (this->hdop() != 0) {
    total_size += 1 + 4;
  }

  // float pdop = 8;
  if (this->pdop() != 0) {
    total_size += 1 + 4;
  }

  // float diff_age = 9;
  if (this->diff_age() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NavStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.NavStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const NavStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NavStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.NavStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.NavStatus)
    MergeFrom(*source);
  }
}

void NavStatus::MergeFrom(const NavStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.NavStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.utc_time() != 0) {
    set_utc_time(from.utc_time());
  }
  if (from.gps_status() != 0) {
    set_gps_status(from.gps_status());
  }
  if (from.pos_status() != 0) {
    set_pos_status(from.pos_status());
  }
  if (from.att_status() != 0) {
    set_att_status(from.att_status());
  }
  if (from.init_status() != 0) {
    set_init_status(from.init_status());
  }
  if (from.sate_num() != 0) {
    set_sate_num(from.sate_num());
  }
  if (from.hdop() != 0) {
    set_hdop(from.hdop());
  }
  if (from.pdop() != 0) {
    set_pdop(from.pdop());
  }
  if (from.diff_age() != 0) {
    set_diff_age(from.diff_age());
  }
}

void NavStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.NavStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NavStatus::CopyFrom(const NavStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.NavStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NavStatus::IsInitialized() const {
  return true;
}

void NavStatus::Swap(NavStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NavStatus::InternalSwap(NavStatus* other) {
  using std::swap;
  swap(utc_time_, other->utc_time_);
  swap(gps_status_, other->gps_status_);
  swap(pos_status_, other->pos_status_);
  swap(att_status_, other->att_status_);
  swap(init_status_, other->init_status_);
  swap(sate_num_, other->sate_num_);
  swap(hdop_, other->hdop_);
  swap(pdop_, other->pdop_);
  swap(diff_age_, other->diff_age_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NavStatus::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point2D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2D::kXFieldNumber;
const int Point2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2D::Point2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint2D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Point2D)
}
Point2D::Point2D(const Point2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.Point2D)
}

void Point2D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

Point2D::~Point2D() {
  // @@protoc_insertion_point(destructor:common_msgs.Point2D)
  SharedDtor();
}

void Point2D::SharedDtor() {
}

void Point2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point2D::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2D& Point2D::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint2D();
  return *internal_default_instance();
}

Point2D* Point2D::New(::google::protobuf::Arena* arena) const {
  Point2D* n = new Point2D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point2D::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Point2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Point2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Point2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Point2D)
  return false;
#undef DO_
}

void Point2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Point2D)
}

::google::protobuf::uint8* Point2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Point2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Point2D)
  return target;
}

size_t Point2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Point2D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Point2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Point2D)
    MergeFrom(*source);
  }
}

void Point2D::MergeFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Point2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Point2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2D::CopyFrom(const Point2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Point2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2D::IsInitialized() const {
  return true;
}

void Point2D::Swap(Point2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2D::InternalSwap(Point2D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point2D::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point3D::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3D::kXFieldNumber;
const int Point3D::kYFieldNumber;
const int Point3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3D::Point3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint3D();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Point3D)
}
Point3D::Point3D(const Point3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.Point3D)
}

void Point3D::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Point3D::~Point3D() {
  // @@protoc_insertion_point(destructor:common_msgs.Point3D)
  SharedDtor();
}

void Point3D::SharedDtor() {
}

void Point3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3D::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3D& Point3D::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint3D();
  return *internal_default_instance();
}

Point3D* Point3D::New(::google::protobuf::Arena* arena) const {
  Point3D* n = new Point3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3D::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Point3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Point3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Point3D)
  return false;
#undef DO_
}

void Point3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Point3D)
}

::google::protobuf::uint8* Point3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Point3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Point3D)
  return target;
}

size_t Point3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Point3D)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Point3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Point3D)
    MergeFrom(*source);
  }
}

void Point3D::MergeFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Point3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3D::CopyFrom(const Point3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Point3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3D::IsInitialized() const {
  return true;
}

void Point3D::Swap(Point3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3D::InternalSwap(Point3D* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3D::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointENU::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointENU::kXFieldNumber;
const int PointENU::kYFieldNumber;
const int PointENU::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointENU::PointENU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPointENU();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.PointENU)
}
PointENU::PointENU(const PointENU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:common_msgs.PointENU)
}

void PointENU::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

PointENU::~PointENU() {
  // @@protoc_insertion_point(destructor:common_msgs.PointENU)
  SharedDtor();
}

void PointENU::SharedDtor() {
}

void PointENU::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PointENU::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointENU& PointENU::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPointENU();
  return *internal_default_instance();
}

PointENU* PointENU::New(::google::protobuf::Arena* arena) const {
  PointENU* n = new PointENU;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PointENU::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PointENU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.PointENU)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.PointENU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.PointENU)
  return false;
#undef DO_
}

void PointENU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.PointENU)
}

::google::protobuf::uint8* PointENU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.PointENU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.PointENU)
  return target;
}

size_t PointENU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.PointENU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PointENU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.PointENU)
  GOOGLE_DCHECK_NE(&from, this);
  const PointENU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointENU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.PointENU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.PointENU)
    MergeFrom(*source);
  }
}

void PointENU::MergeFrom(const PointENU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.PointENU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PointENU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.PointENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointENU::CopyFrom(const PointENU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.PointENU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointENU::IsInitialized() const {
  return true;
}

void PointENU::Swap(PointENU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointENU::InternalSwap(PointENU* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PointENU::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoseQuaternion::InitAsDefaultInstance() {
  ::common_msgs::_PoseQuaternion_default_instance_._instance.get_mutable()->position_ = const_cast< ::common_msgs::Vector3WithCovariance*>(
      ::common_msgs::Vector3WithCovariance::internal_default_instance());
  ::common_msgs::_PoseQuaternion_default_instance_._instance.get_mutable()->quaternion_ = const_cast< ::common_msgs::Quaternion*>(
      ::common_msgs::Quaternion::internal_default_instance());
  ::common_msgs::_PoseQuaternion_default_instance_._instance.get_mutable()->rpy_covariance_ = const_cast< ::common_msgs::Vector3*>(
      ::common_msgs::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseQuaternion::kPositionFieldNumber;
const int PoseQuaternion::kQuaternionFieldNumber;
const int PoseQuaternion::kRpyCovarianceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseQuaternion::PoseQuaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseQuaternion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.PoseQuaternion)
}
PoseQuaternion::PoseQuaternion(const PoseQuaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::common_msgs::Vector3WithCovariance(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_quaternion()) {
    quaternion_ = new ::common_msgs::Quaternion(*from.quaternion_);
  } else {
    quaternion_ = NULL;
  }
  if (from.has_rpy_covariance()) {
    rpy_covariance_ = new ::common_msgs::Vector3(*from.rpy_covariance_);
  } else {
    rpy_covariance_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.PoseQuaternion)
}

void PoseQuaternion::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rpy_covariance_) -
      reinterpret_cast<char*>(&position_)) + sizeof(rpy_covariance_));
  _cached_size_ = 0;
}

PoseQuaternion::~PoseQuaternion() {
  // @@protoc_insertion_point(destructor:common_msgs.PoseQuaternion)
  SharedDtor();
}

void PoseQuaternion::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete quaternion_;
  if (this != internal_default_instance()) delete rpy_covariance_;
}

void PoseQuaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PoseQuaternion::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseQuaternion& PoseQuaternion::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseQuaternion();
  return *internal_default_instance();
}

PoseQuaternion* PoseQuaternion::New(::google::protobuf::Arena* arena) const {
  PoseQuaternion* n = new PoseQuaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PoseQuaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.PoseQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && quaternion_ != NULL) {
    delete quaternion_;
  }
  quaternion_ = NULL;
  if (GetArenaNoVirtual() == NULL && rpy_covariance_ != NULL) {
    delete rpy_covariance_;
  }
  rpy_covariance_ = NULL;
  _internal_metadata_.Clear();
}

bool PoseQuaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.PoseQuaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.Vector3WithCovariance position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.Quaternion quaternion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quaternion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.Vector3 rpy_covariance = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpy_covariance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.PoseQuaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.PoseQuaternion)
  return false;
#undef DO_
}

void PoseQuaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.PoseQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // .common_msgs.Quaternion quaternion = 2;
  if (this->has_quaternion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->quaternion_, output);
  }

  // .common_msgs.Vector3 rpy_covariance = 3;
  if (this->has_rpy_covariance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rpy_covariance_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.PoseQuaternion)
}

::google::protobuf::uint8* PoseQuaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.PoseQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->position_, deterministic, target);
  }

  // .common_msgs.Quaternion quaternion = 2;
  if (this->has_quaternion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->quaternion_, deterministic, target);
  }

  // .common_msgs.Vector3 rpy_covariance = 3;
  if (this->has_rpy_covariance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->rpy_covariance_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.PoseQuaternion)
  return target;
}

size_t PoseQuaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.PoseQuaternion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.Vector3WithCovariance position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .common_msgs.Quaternion quaternion = 2;
  if (this->has_quaternion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->quaternion_);
  }

  // .common_msgs.Vector3 rpy_covariance = 3;
  if (this->has_rpy_covariance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rpy_covariance_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PoseQuaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.PoseQuaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseQuaternion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseQuaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.PoseQuaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.PoseQuaternion)
    MergeFrom(*source);
  }
}

void PoseQuaternion::MergeFrom(const PoseQuaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.PoseQuaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::common_msgs::Vector3WithCovariance::MergeFrom(from.position());
  }
  if (from.has_quaternion()) {
    mutable_quaternion()->::common_msgs::Quaternion::MergeFrom(from.quaternion());
  }
  if (from.has_rpy_covariance()) {
    mutable_rpy_covariance()->::common_msgs::Vector3::MergeFrom(from.rpy_covariance());
  }
}

void PoseQuaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.PoseQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseQuaternion::CopyFrom(const PoseQuaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.PoseQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseQuaternion::IsInitialized() const {
  return true;
}

void PoseQuaternion::Swap(PoseQuaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseQuaternion::InternalSwap(PoseQuaternion* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(quaternion_, other->quaternion_);
  swap(rpy_covariance_, other->rpy_covariance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PoseQuaternion::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pose::InitAsDefaultInstance() {
  ::common_msgs::_Pose_default_instance_._instance.get_mutable()->pose_euler_ = const_cast< ::common_msgs::PoseEuler*>(
      ::common_msgs::PoseEuler::internal_default_instance());
  ::common_msgs::_Pose_default_instance_._instance.get_mutable()->pose_quaternion_ = const_cast< ::common_msgs::PoseQuaternion*>(
      ::common_msgs::PoseQuaternion::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pose::kPoseEulerFieldNumber;
const int Pose::kPoseQuaternionFieldNumber;
const int Pose::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pose::Pose()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsPose();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.Pose)
}
Pose::Pose(const Pose& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose_euler()) {
    pose_euler_ = new ::common_msgs::PoseEuler(*from.pose_euler_);
  } else {
    pose_euler_ = NULL;
  }
  if (from.has_pose_quaternion()) {
    pose_quaternion_ = new ::common_msgs::PoseQuaternion(*from.pose_quaternion_);
  } else {
    pose_quaternion_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:common_msgs.Pose)
}

void Pose::SharedCtor() {
  ::memset(&pose_euler_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&pose_euler_)) + sizeof(status_));
  _cached_size_ = 0;
}

Pose::~Pose() {
  // @@protoc_insertion_point(destructor:common_msgs.Pose)
  SharedDtor();
}

void Pose::SharedDtor() {
  if (this != internal_default_instance()) delete pose_euler_;
  if (this != internal_default_instance()) delete pose_quaternion_;
}

void Pose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pose::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pose& Pose::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsPose();
  return *internal_default_instance();
}

Pose* Pose::New(::google::protobuf::Arena* arena) const {
  Pose* n = new Pose;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pose::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pose_euler_ != NULL) {
    delete pose_euler_;
  }
  pose_euler_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_quaternion_ != NULL) {
    delete pose_quaternion_;
  }
  pose_quaternion_ = NULL;
  status_ = 0;
  _internal_metadata_.Clear();
}

bool Pose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.Pose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.PoseEuler pose_euler = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose_euler()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.PoseQuaternion pose_quaternion = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose_quaternion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.Pose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.Pose)
  return false;
#undef DO_
}

void Pose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.PoseEuler pose_euler = 1;
  if (this->has_pose_euler()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pose_euler_, output);
  }

  // .common_msgs.PoseQuaternion pose_quaternion = 2;
  if (this->has_pose_quaternion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pose_quaternion_, output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.Pose)
}

::google::protobuf::uint8* Pose::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.Pose)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.PoseEuler pose_euler = 1;
  if (this->has_pose_euler()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->pose_euler_, deterministic, target);
  }

  // .common_msgs.PoseQuaternion pose_quaternion = 2;
  if (this->has_pose_quaternion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->pose_quaternion_, deterministic, target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.Pose)
  return target;
}

size_t Pose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.Pose)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.PoseEuler pose_euler = 1;
  if (this->has_pose_euler()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pose_euler_);
  }

  // .common_msgs.PoseQuaternion pose_quaternion = 2;
  if (this->has_pose_quaternion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->pose_quaternion_);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pose::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  const Pose* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pose>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.Pose)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.Pose)
    MergeFrom(*source);
  }
}

void Pose::MergeFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.Pose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pose_euler()) {
    mutable_pose_euler()->::common_msgs::PoseEuler::MergeFrom(from.pose_euler());
  }
  if (from.has_pose_quaternion()) {
    mutable_pose_quaternion()->::common_msgs::PoseQuaternion::MergeFrom(from.pose_quaternion());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Pose::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pose::CopyFrom(const Pose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.Pose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pose::IsInitialized() const {
  return true;
}

void Pose::Swap(Pose* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pose::InternalSwap(Pose* other) {
  using std::swap;
  swap(pose_euler_, other->pose_euler_);
  swap(pose_quaternion_, other->pose_quaternion_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pose::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WheelSpeed::InitAsDefaultInstance() {
  ::common_msgs::_WheelSpeed_default_instance_._instance.get_mutable()->front_left_ = const_cast< ::common_msgs::UnsurePoint*>(
      ::common_msgs::UnsurePoint::internal_default_instance());
  ::common_msgs::_WheelSpeed_default_instance_._instance.get_mutable()->front_right_ = const_cast< ::common_msgs::UnsurePoint*>(
      ::common_msgs::UnsurePoint::internal_default_instance());
  ::common_msgs::_WheelSpeed_default_instance_._instance.get_mutable()->rear_left_ = const_cast< ::common_msgs::UnsurePoint*>(
      ::common_msgs::UnsurePoint::internal_default_instance());
  ::common_msgs::_WheelSpeed_default_instance_._instance.get_mutable()->rear_right_ = const_cast< ::common_msgs::UnsurePoint*>(
      ::common_msgs::UnsurePoint::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WheelSpeed::kFrontLeftFieldNumber;
const int WheelSpeed::kFrontRightFieldNumber;
const int WheelSpeed::kRearLeftFieldNumber;
const int WheelSpeed::kRearRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WheelSpeed::WheelSpeed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_common_5fmsgs_2eproto::InitDefaultsWheelSpeed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:common_msgs.WheelSpeed)
}
WheelSpeed::WheelSpeed(const WheelSpeed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_front_left()) {
    front_left_ = new ::common_msgs::UnsurePoint(*from.front_left_);
  } else {
    front_left_ = NULL;
  }
  if (from.has_front_right()) {
    front_right_ = new ::common_msgs::UnsurePoint(*from.front_right_);
  } else {
    front_right_ = NULL;
  }
  if (from.has_rear_left()) {
    rear_left_ = new ::common_msgs::UnsurePoint(*from.rear_left_);
  } else {
    rear_left_ = NULL;
  }
  if (from.has_rear_right()) {
    rear_right_ = new ::common_msgs::UnsurePoint(*from.rear_right_);
  } else {
    rear_right_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common_msgs.WheelSpeed)
}

void WheelSpeed::SharedCtor() {
  ::memset(&front_left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rear_right_) -
      reinterpret_cast<char*>(&front_left_)) + sizeof(rear_right_));
  _cached_size_ = 0;
}

WheelSpeed::~WheelSpeed() {
  // @@protoc_insertion_point(destructor:common_msgs.WheelSpeed)
  SharedDtor();
}

void WheelSpeed::SharedDtor() {
  if (this != internal_default_instance()) delete front_left_;
  if (this != internal_default_instance()) delete front_right_;
  if (this != internal_default_instance()) delete rear_left_;
  if (this != internal_default_instance()) delete rear_right_;
}

void WheelSpeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WheelSpeed::descriptor() {
  ::protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WheelSpeed& WheelSpeed::default_instance() {
  ::protobuf_common_5fmsgs_2eproto::InitDefaultsWheelSpeed();
  return *internal_default_instance();
}

WheelSpeed* WheelSpeed::New(::google::protobuf::Arena* arena) const {
  WheelSpeed* n = new WheelSpeed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WheelSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:common_msgs.WheelSpeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && front_left_ != NULL) {
    delete front_left_;
  }
  front_left_ = NULL;
  if (GetArenaNoVirtual() == NULL && front_right_ != NULL) {
    delete front_right_;
  }
  front_right_ = NULL;
  if (GetArenaNoVirtual() == NULL && rear_left_ != NULL) {
    delete rear_left_;
  }
  rear_left_ = NULL;
  if (GetArenaNoVirtual() == NULL && rear_right_ != NULL) {
    delete rear_right_;
  }
  rear_right_ = NULL;
  _internal_metadata_.Clear();
}

bool WheelSpeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common_msgs.WheelSpeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common_msgs.UnsurePoint front_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_front_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsurePoint front_right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_front_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsurePoint rear_left = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rear_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common_msgs.UnsurePoint rear_right = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rear_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common_msgs.WheelSpeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common_msgs.WheelSpeed)
  return false;
#undef DO_
}

void WheelSpeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common_msgs.WheelSpeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsurePoint front_left = 1;
  if (this->has_front_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->front_left_, output);
  }

  // .common_msgs.UnsurePoint front_right = 2;
  if (this->has_front_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->front_right_, output);
  }

  // .common_msgs.UnsurePoint rear_left = 3;
  if (this->has_rear_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rear_left_, output);
  }

  // .common_msgs.UnsurePoint rear_right = 4;
  if (this->has_rear_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rear_right_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common_msgs.WheelSpeed)
}

::google::protobuf::uint8* WheelSpeed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common_msgs.WheelSpeed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common_msgs.UnsurePoint front_left = 1;
  if (this->has_front_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->front_left_, deterministic, target);
  }

  // .common_msgs.UnsurePoint front_right = 2;
  if (this->has_front_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->front_right_, deterministic, target);
  }

  // .common_msgs.UnsurePoint rear_left = 3;
  if (this->has_rear_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->rear_left_, deterministic, target);
  }

  // .common_msgs.UnsurePoint rear_right = 4;
  if (this->has_rear_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->rear_right_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common_msgs.WheelSpeed)
  return target;
}

size_t WheelSpeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common_msgs.WheelSpeed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common_msgs.UnsurePoint front_left = 1;
  if (this->has_front_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->front_left_);
  }

  // .common_msgs.UnsurePoint front_right = 2;
  if (this->has_front_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->front_right_);
  }

  // .common_msgs.UnsurePoint rear_left = 3;
  if (this->has_rear_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rear_left_);
  }

  // .common_msgs.UnsurePoint rear_right = 4;
  if (this->has_rear_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rear_right_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WheelSpeed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common_msgs.WheelSpeed)
  GOOGLE_DCHECK_NE(&from, this);
  const WheelSpeed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WheelSpeed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common_msgs.WheelSpeed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common_msgs.WheelSpeed)
    MergeFrom(*source);
  }
}

void WheelSpeed::MergeFrom(const WheelSpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common_msgs.WheelSpeed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_front_left()) {
    mutable_front_left()->::common_msgs::UnsurePoint::MergeFrom(from.front_left());
  }
  if (from.has_front_right()) {
    mutable_front_right()->::common_msgs::UnsurePoint::MergeFrom(from.front_right());
  }
  if (from.has_rear_left()) {
    mutable_rear_left()->::common_msgs::UnsurePoint::MergeFrom(from.rear_left());
  }
  if (from.has_rear_right()) {
    mutable_rear_right()->::common_msgs::UnsurePoint::MergeFrom(from.rear_right());
  }
}

void WheelSpeed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common_msgs.WheelSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WheelSpeed::CopyFrom(const WheelSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common_msgs.WheelSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WheelSpeed::IsInitialized() const {
  return true;
}

void WheelSpeed::Swap(WheelSpeed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WheelSpeed::InternalSwap(WheelSpeed* other) {
  using std::swap;
  swap(front_left_, other->front_left_);
  swap(front_right_, other->front_right_);
  swap(rear_left_, other->rear_left_);
  swap(rear_right_, other->rear_right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WheelSpeed::GetMetadata() const {
  protobuf_common_5fmsgs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_5fmsgs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common_msgs

// @@protoc_insertion_point(global_scope)
