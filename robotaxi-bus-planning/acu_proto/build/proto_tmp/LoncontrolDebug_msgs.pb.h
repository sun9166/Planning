// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoncontrolDebug_msgs.proto

#ifndef PROTOBUF_LoncontrolDebug_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_LoncontrolDebug_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_LoncontrolDebug_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCellImpl();
void InitDefaultsCell();
void InitDefaultsObjectImpl();
void InitDefaultsObject();
void InitDefaultsObstaclesImpl();
void InitDefaultsObstacles();
void InitDefaultsLoncontrolDebugImpl();
void InitDefaultsLoncontrolDebug();
inline void InitDefaults() {
  InitDefaultsCell();
  InitDefaultsObject();
  InitDefaultsObstacles();
  InitDefaultsLoncontrolDebug();
}
}  // namespace protobuf_LoncontrolDebug_5fmsgs_2eproto
namespace LoncontrolDebug_msgs {
class Cell;
class CellDefaultTypeInternal;
extern CellDefaultTypeInternal _Cell_default_instance_;
class LoncontrolDebug;
class LoncontrolDebugDefaultTypeInternal;
extern LoncontrolDebugDefaultTypeInternal _LoncontrolDebug_default_instance_;
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class Obstacles;
class ObstaclesDefaultTypeInternal;
extern ObstaclesDefaultTypeInternal _Obstacles_default_instance_;
}  // namespace LoncontrolDebug_msgs
namespace LoncontrolDebug_msgs {

// ===================================================================

class Cell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoncontrolDebug_msgs.Cell) */ {
 public:
  Cell();
  virtual ~Cell();

  Cell(const Cell& from);

  inline Cell& operator=(const Cell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Cell(Cell&& from) noexcept
    : Cell() {
    *this = ::std::move(from);
  }

  inline Cell& operator=(Cell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Cell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cell* internal_default_instance() {
    return reinterpret_cast<const Cell*>(
               &_Cell_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Cell* other);
  friend void swap(Cell& a, Cell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Cell* New() const PROTOBUF_FINAL { return New(NULL); }

  Cell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cell& from);
  void MergeFrom(const Cell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 idc = 1;
  void clear_idc();
  static const int kIdcFieldNumber = 1;
  ::google::protobuf::uint32 idc() const;
  void set_idc(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // float x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // float y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // float xg = 5;
  void clear_xg();
  static const int kXgFieldNumber = 5;
  float xg() const;
  void set_xg(float value);

  // float yg = 6;
  void clear_yg();
  static const int kYgFieldNumber = 6;
  float yg() const;
  void set_yg(float value);

  // @@protoc_insertion_point(class_scope:LoncontrolDebug_msgs.Cell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 idc_;
  ::google::protobuf::uint32 type_;
  float x_;
  float y_;
  float xg_;
  float yg_;
  mutable int _cached_size_;
  friend struct ::protobuf_LoncontrolDebug_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_LoncontrolDebug_5fmsgs_2eproto::InitDefaultsCellImpl();
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoncontrolDebug_msgs.Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const PROTOBUF_FINAL { return New(NULL); }

  Object* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LoncontrolDebug_msgs.Cell cells = 14;
  bool has_cells() const;
  void clear_cells();
  static const int kCellsFieldNumber = 14;
  const ::LoncontrolDebug_msgs::Cell& cells() const;
  ::LoncontrolDebug_msgs::Cell* release_cells();
  ::LoncontrolDebug_msgs::Cell* mutable_cells();
  void set_allocated_cells(::LoncontrolDebug_msgs::Cell* cells);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float vxrel = 4;
  void clear_vxrel();
  static const int kVxrelFieldNumber = 4;
  float vxrel() const;
  void set_vxrel(float value);

  // float vyrel = 5;
  void clear_vyrel();
  static const int kVyrelFieldNumber = 5;
  float vyrel() const;
  void set_vyrel(float value);

  // float vxabs = 6;
  void clear_vxabs();
  static const int kVxabsFieldNumber = 6;
  float vxabs() const;
  void set_vxabs(float value);

  // float vyabs = 7;
  void clear_vyabs();
  static const int kVyabsFieldNumber = 7;
  float vyabs() const;
  void set_vyabs(float value);

  // float acceleration = 8;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 8;
  float acceleration() const;
  void set_acceleration(float value);

  // float width = 9;
  void clear_width();
  static const int kWidthFieldNumber = 9;
  float width() const;
  void set_width(float value);

  // float length = 10;
  void clear_length();
  static const int kLengthFieldNumber = 10;
  float length() const;
  void set_length(float value);

  // float heading = 11;
  void clear_heading();
  static const int kHeadingFieldNumber = 11;
  float heading() const;
  void set_heading(float value);

  // float speed = 12;
  void clear_speed();
  static const int kSpeedFieldNumber = 12;
  float speed() const;
  void set_speed(float value);

  // uint32 type = 13;
  void clear_type();
  static const int kTypeFieldNumber = 13;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LoncontrolDebug_msgs.Object)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LoncontrolDebug_msgs::Cell* cells_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float vxrel_;
  float vyrel_;
  float vxabs_;
  float vyabs_;
  float acceleration_;
  float width_;
  float length_;
  float heading_;
  float speed_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LoncontrolDebug_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_LoncontrolDebug_5fmsgs_2eproto::InitDefaultsObjectImpl();
};
// -------------------------------------------------------------------

class Obstacles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoncontrolDebug_msgs.Obstacles) */ {
 public:
  Obstacles();
  virtual ~Obstacles();

  Obstacles(const Obstacles& from);

  inline Obstacles& operator=(const Obstacles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Obstacles(Obstacles&& from) noexcept
    : Obstacles() {
    *this = ::std::move(from);
  }

  inline Obstacles& operator=(Obstacles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Obstacles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Obstacles* internal_default_instance() {
    return reinterpret_cast<const Obstacles*>(
               &_Obstacles_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Obstacles* other);
  friend void swap(Obstacles& a, Obstacles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Obstacles* New() const PROTOBUF_FINAL { return New(NULL); }

  Obstacles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Obstacles& from);
  void MergeFrom(const Obstacles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Obstacles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LoncontrolDebug_msgs.Object objects = 1;
  bool has_objects() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 1;
  const ::LoncontrolDebug_msgs::Object& objects() const;
  ::LoncontrolDebug_msgs::Object* release_objects();
  ::LoncontrolDebug_msgs::Object* mutable_objects();
  void set_allocated_objects(::LoncontrolDebug_msgs::Object* objects);

  // .LoncontrolDebug_msgs.Cell Cells = 2;
  bool has_cells() const;
  void clear_cells();
  static const int kCellsFieldNumber = 2;
  const ::LoncontrolDebug_msgs::Cell& cells() const;
  ::LoncontrolDebug_msgs::Cell* release_cells();
  ::LoncontrolDebug_msgs::Cell* mutable_cells();
  void set_allocated_cells(::LoncontrolDebug_msgs::Cell* cells);

  // @@protoc_insertion_point(class_scope:LoncontrolDebug_msgs.Obstacles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LoncontrolDebug_msgs::Object* objects_;
  ::LoncontrolDebug_msgs::Cell* cells_;
  mutable int _cached_size_;
  friend struct ::protobuf_LoncontrolDebug_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_LoncontrolDebug_5fmsgs_2eproto::InitDefaultsObstaclesImpl();
};
// -------------------------------------------------------------------

class LoncontrolDebug : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoncontrolDebug_msgs.LoncontrolDebug) */ {
 public:
  LoncontrolDebug();
  virtual ~LoncontrolDebug();

  LoncontrolDebug(const LoncontrolDebug& from);

  inline LoncontrolDebug& operator=(const LoncontrolDebug& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoncontrolDebug(LoncontrolDebug&& from) noexcept
    : LoncontrolDebug() {
    *this = ::std::move(from);
  }

  inline LoncontrolDebug& operator=(LoncontrolDebug&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoncontrolDebug& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoncontrolDebug* internal_default_instance() {
    return reinterpret_cast<const LoncontrolDebug*>(
               &_LoncontrolDebug_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoncontrolDebug* other);
  friend void swap(LoncontrolDebug& a, LoncontrolDebug& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoncontrolDebug* New() const PROTOBUF_FINAL { return New(NULL); }

  LoncontrolDebug* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoncontrolDebug& from);
  void MergeFrom(const LoncontrolDebug& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoncontrolDebug* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LoncontrolDebug_msgs.Obstacles path_filter_obs = 1;
  bool has_path_filter_obs() const;
  void clear_path_filter_obs();
  static const int kPathFilterObsFieldNumber = 1;
  const ::LoncontrolDebug_msgs::Obstacles& path_filter_obs() const;
  ::LoncontrolDebug_msgs::Obstacles* release_path_filter_obs();
  ::LoncontrolDebug_msgs::Obstacles* mutable_path_filter_obs();
  void set_allocated_path_filter_obs(::LoncontrolDebug_msgs::Obstacles* path_filter_obs);

  // .LoncontrolDebug_msgs.Obstacles predict_carpos_filter_obs = 2;
  bool has_predict_carpos_filter_obs() const;
  void clear_predict_carpos_filter_obs();
  static const int kPredictCarposFilterObsFieldNumber = 2;
  const ::LoncontrolDebug_msgs::Obstacles& predict_carpos_filter_obs() const;
  ::LoncontrolDebug_msgs::Obstacles* release_predict_carpos_filter_obs();
  ::LoncontrolDebug_msgs::Obstacles* mutable_predict_carpos_filter_obs();
  void set_allocated_predict_carpos_filter_obs(::LoncontrolDebug_msgs::Obstacles* predict_carpos_filter_obs);

  // .LoncontrolDebug_msgs.Obstacles dangerous_obs = 3;
  bool has_dangerous_obs() const;
  void clear_dangerous_obs();
  static const int kDangerousObsFieldNumber = 3;
  const ::LoncontrolDebug_msgs::Obstacles& dangerous_obs() const;
  ::LoncontrolDebug_msgs::Obstacles* release_dangerous_obs();
  ::LoncontrolDebug_msgs::Obstacles* mutable_dangerous_obs();
  void set_allocated_dangerous_obs(::LoncontrolDebug_msgs::Obstacles* dangerous_obs);

  // double sbj_speed = 4;
  void clear_sbj_speed();
  static const int kSbjSpeedFieldNumber = 4;
  double sbj_speed() const;
  void set_sbj_speed(double value);

  // double virtual_speed = 5;
  void clear_virtual_speed();
  static const int kVirtualSpeedFieldNumber = 5;
  double virtual_speed() const;
  void set_virtual_speed(double value);

  // double target_speed_lag = 6;
  void clear_target_speed_lag();
  static const int kTargetSpeedLagFieldNumber = 6;
  double target_speed_lag() const;
  void set_target_speed_lag(double value);

  // double point_zero_velocity = 7;
  void clear_point_zero_velocity();
  static const int kPointZeroVelocityFieldNumber = 7;
  double point_zero_velocity() const;
  void set_point_zero_velocity(double value);

  // double speed_p = 8;
  void clear_speed_p();
  static const int kSpeedPFieldNumber = 8;
  double speed_p() const;
  void set_speed_p(double value);

  // double speed_i = 9;
  void clear_speed_i();
  static const int kSpeedIFieldNumber = 9;
  double speed_i() const;
  void set_speed_i(double value);

  // double target_acel = 10;
  void clear_target_acel();
  static const int kTargetAcelFieldNumber = 10;
  double target_acel() const;
  void set_target_acel(double value);

  // double acel_real_raw = 11;
  void clear_acel_real_raw();
  static const int kAcelRealRawFieldNumber = 11;
  double acel_real_raw() const;
  void set_acel_real_raw(double value);

  // double sbj_acel = 12;
  void clear_sbj_acel();
  static const int kSbjAcelFieldNumber = 12;
  double sbj_acel() const;
  void set_sbj_acel(double value);

  // double acel_p = 13;
  void clear_acel_p();
  static const int kAcelPFieldNumber = 13;
  double acel_p() const;
  void set_acel_p(double value);

  // double acel_i = 14;
  void clear_acel_i();
  static const int kAcelIFieldNumber = 14;
  double acel_i() const;
  void set_acel_i(double value);

  // double torque = 15;
  void clear_torque();
  static const int kTorqueFieldNumber = 15;
  double torque() const;
  void set_torque(double value);

  // double pressure = 16;
  void clear_pressure();
  static const int kPressureFieldNumber = 16;
  double pressure() const;
  void set_pressure(double value);

  // double point_zero_length = 17;
  void clear_point_zero_length();
  static const int kPointZeroLengthFieldNumber = 17;
  double point_zero_length() const;
  void set_point_zero_length(double value);

  // double path_length = 18;
  void clear_path_length();
  static const int kPathLengthFieldNumber = 18;
  double path_length() const;
  void set_path_length(double value);

  // double preview_distance = 19;
  void clear_preview_distance();
  static const int kPreviewDistanceFieldNumber = 19;
  double preview_distance() const;
  void set_preview_distance(double value);

  // double real_steer_angle = 20;
  void clear_real_steer_angle();
  static const int kRealSteerAngleFieldNumber = 20;
  double real_steer_angle() const;
  void set_real_steer_angle(double value);

  // double lat_error = 21;
  void clear_lat_error();
  static const int kLatErrorFieldNumber = 21;
  double lat_error() const;
  void set_lat_error(double value);

  // double pitch = 22;
  void clear_pitch();
  static const int kPitchFieldNumber = 22;
  double pitch() const;
  void set_pitch(double value);

  // double preview_acel = 23;
  void clear_preview_acel();
  static const int kPreviewAcelFieldNumber = 23;
  double preview_acel() const;
  void set_preview_acel(double value);

  // double acel_pitch_offset = 24;
  void clear_acel_pitch_offset();
  static const int kAcelPitchOffsetFieldNumber = 24;
  double acel_pitch_offset() const;
  void set_acel_pitch_offset(double value);

  // double acel_dis_offset = 25;
  void clear_acel_dis_offset();
  static const int kAcelDisOffsetFieldNumber = 25;
  double acel_dis_offset() const;
  void set_acel_dis_offset(double value);

  // double speed_error = 26;
  void clear_speed_error();
  static const int kSpeedErrorFieldNumber = 26;
  double speed_error() const;
  void set_speed_error(double value);

  // double station_error = 27;
  void clear_station_error();
  static const int kStationErrorFieldNumber = 27;
  double station_error() const;
  void set_station_error(double value);

  // double pos_matched_length = 28;
  void clear_pos_matched_length();
  static const int kPosMatchedLengthFieldNumber = 28;
  double pos_matched_length() const;
  void set_pos_matched_length(double value);

  // double time_matched_length = 29;
  void clear_time_matched_length();
  static const int kTimeMatchedLengthFieldNumber = 29;
  double time_matched_length() const;
  void set_time_matched_length(double value);

  // double accuracy_dis = 30;
  void clear_accuracy_dis();
  static const int kAccuracyDisFieldNumber = 30;
  double accuracy_dis() const;
  void set_accuracy_dis(double value);

  // double ego_velocity_prediction = 31;
  void clear_ego_velocity_prediction();
  static const int kEgoVelocityPredictionFieldNumber = 31;
  double ego_velocity_prediction() const;
  void set_ego_velocity_prediction(double value);

  // double ego_station_prediction = 32;
  void clear_ego_station_prediction();
  static const int kEgoStationPredictionFieldNumber = 32;
  double ego_station_prediction() const;
  void set_ego_station_prediction(double value);

  // double time_prev_matched_length = 33;
  void clear_time_prev_matched_length();
  static const int kTimePrevMatchedLengthFieldNumber = 33;
  double time_prev_matched_length() const;
  void set_time_prev_matched_length(double value);

  // double jerk = 34;
  void clear_jerk();
  static const int kJerkFieldNumber = 34;
  double jerk() const;
  void set_jerk(double value);

  // double station_p = 35;
  void clear_station_p();
  static const int kStationPFieldNumber = 35;
  double station_p() const;
  void set_station_p(double value);

  // double station_i = 36;
  void clear_station_i();
  static const int kStationIFieldNumber = 36;
  double station_i() const;
  void set_station_i(double value);

  // int32 pre_zero_velocity_flag = 37;
  void clear_pre_zero_velocity_flag();
  static const int kPreZeroVelocityFlagFieldNumber = 37;
  ::google::protobuf::int32 pre_zero_velocity_flag() const;
  void set_pre_zero_velocity_flag(::google::protobuf::int32 value);

  // int32 end_length_openloop_flag = 38;
  void clear_end_length_openloop_flag();
  static const int kEndLengthOpenloopFlagFieldNumber = 38;
  ::google::protobuf::int32 end_length_openloop_flag() const;
  void set_end_length_openloop_flag(::google::protobuf::int32 value);

  // int32 path_direction = 39;
  void clear_path_direction();
  static const int kPathDirectionFieldNumber = 39;
  ::google::protobuf::int32 path_direction() const;
  void set_path_direction(::google::protobuf::int32 value);

  // int32 emergency_obstacle = 40;
  void clear_emergency_obstacle();
  static const int kEmergencyObstacleFieldNumber = 40;
  ::google::protobuf::int32 emergency_obstacle() const;
  void set_emergency_obstacle(::google::protobuf::int32 value);

  // int32 slow_aeb_mode = 41;
  void clear_slow_aeb_mode();
  static const int kSlowAebModeFieldNumber = 41;
  ::google::protobuf::int32 slow_aeb_mode() const;
  void set_slow_aeb_mode(::google::protobuf::int32 value);

  // int32 is_shift_position = 42;
  void clear_is_shift_position();
  static const int kIsShiftPositionFieldNumber = 42;
  ::google::protobuf::int32 is_shift_position() const;
  void set_is_shift_position(::google::protobuf::int32 value);

  // int32 real_shift_position = 43;
  void clear_real_shift_position();
  static const int kRealShiftPositionFieldNumber = 43;
  ::google::protobuf::int32 real_shift_position() const;
  void set_real_shift_position(::google::protobuf::int32 value);

  // int32 shift_position = 44;
  void clear_shift_position();
  static const int kShiftPositionFieldNumber = 44;
  ::google::protobuf::int32 shift_position() const;
  void set_shift_position(::google::protobuf::int32 value);

  // double temp1 = 46;
  void clear_temp1();
  static const int kTemp1FieldNumber = 46;
  double temp1() const;
  void set_temp1(double value);

  // double temp2 = 47;
  void clear_temp2();
  static const int kTemp2FieldNumber = 47;
  double temp2() const;
  void set_temp2(double value);

  // int32 car_fault_level = 45;
  void clear_car_fault_level();
  static const int kCarFaultLevelFieldNumber = 45;
  ::google::protobuf::int32 car_fault_level() const;
  void set_car_fault_level(::google::protobuf::int32 value);

  // int32 emergency_flag = 49;
  void clear_emergency_flag();
  static const int kEmergencyFlagFieldNumber = 49;
  ::google::protobuf::int32 emergency_flag() const;
  void set_emergency_flag(::google::protobuf::int32 value);

  // double temp3 = 48;
  void clear_temp3();
  static const int kTemp3FieldNumber = 48;
  double temp3() const;
  void set_temp3(double value);

  // float acc_dis_car_to_obj = 50;
  void clear_acc_dis_car_to_obj();
  static const int kAccDisCarToObjFieldNumber = 50;
  float acc_dis_car_to_obj() const;
  void set_acc_dis_car_to_obj(float value);

  // float acc_obj_velocity = 51;
  void clear_acc_obj_velocity();
  static const int kAccObjVelocityFieldNumber = 51;
  float acc_obj_velocity() const;
  void set_acc_obj_velocity(float value);

  // float acc_desired_dis = 52;
  void clear_acc_desired_dis();
  static const int kAccDesiredDisFieldNumber = 52;
  float acc_desired_dis() const;
  void set_acc_desired_dis(float value);

  // float acc_delt_dis = 53;
  void clear_acc_delt_dis();
  static const int kAccDeltDisFieldNumber = 53;
  float acc_delt_dis() const;
  void set_acc_delt_dis(float value);

  // float acc_delt_v = 54;
  void clear_acc_delt_v();
  static const int kAccDeltVFieldNumber = 54;
  float acc_delt_v() const;
  void set_acc_delt_v(float value);

  // float acc_dis_error_accel = 55;
  void clear_acc_dis_error_accel();
  static const int kAccDisErrorAccelFieldNumber = 55;
  float acc_dis_error_accel() const;
  void set_acc_dis_error_accel(float value);

  // float acc_v_error_accel = 56;
  void clear_acc_v_error_accel();
  static const int kAccVErrorAccelFieldNumber = 56;
  float acc_v_error_accel() const;
  void set_acc_v_error_accel(float value);

  // float acc_accel = 57;
  void clear_acc_accel();
  static const int kAccAccelFieldNumber = 57;
  float acc_accel() const;
  void set_acc_accel(float value);

  // float accel_finally = 58;
  void clear_accel_finally();
  static const int kAccelFinallyFieldNumber = 58;
  float accel_finally() const;
  void set_accel_finally(float value);

  // float safe_dis_base_path = 59;
  void clear_safe_dis_base_path();
  static const int kSafeDisBasePathFieldNumber = 59;
  float safe_dis_base_path() const;
  void set_safe_dis_base_path(float value);

  // float loc_yaw = 60;
  void clear_loc_yaw();
  static const int kLocYawFieldNumber = 60;
  float loc_yaw() const;
  void set_loc_yaw(float value);

  // float theta_abs = 61;
  void clear_theta_abs();
  static const int kThetaAbsFieldNumber = 61;
  float theta_abs() const;
  void set_theta_abs(float value);

  // float a_obs = 62;
  void clear_a_obs();
  static const int kAObsFieldNumber = 62;
  float a_obs() const;
  void set_a_obs(float value);

  // float object_speed = 63;
  void clear_object_speed();
  static const int kObjectSpeedFieldNumber = 63;
  float object_speed() const;
  void set_object_speed(float value);

  // float s_safe = 64;
  void clear_s_safe();
  static const int kSSafeFieldNumber = 64;
  float s_safe() const;
  void set_s_safe(float value);

  // float pred_time = 65;
  void clear_pred_time();
  static const int kPredTimeFieldNumber = 65;
  float pred_time() const;
  void set_pred_time(float value);

  // double neareat_cell_dis_to_car_ = 67;
  void clear_neareat_cell_dis_to_car_();
  static const int kNeareatCellDisToCarFieldNumber = 67;
  double neareat_cell_dis_to_car_() const;
  void set_neareat_cell_dis_to_car_(double value);

  // float nearest_obs_dis_to_car = 66;
  void clear_nearest_obs_dis_to_car();
  static const int kNearestObsDisToCarFieldNumber = 66;
  float nearest_obs_dis_to_car() const;
  void set_nearest_obs_dis_to_car(float value);

  // float collision_obj_x = 68;
  void clear_collision_obj_x();
  static const int kCollisionObjXFieldNumber = 68;
  float collision_obj_x() const;
  void set_collision_obj_x(float value);

  // float collision_obj_y = 69;
  void clear_collision_obj_y();
  static const int kCollisionObjYFieldNumber = 69;
  float collision_obj_y() const;
  void set_collision_obj_y(float value);

  // float collision_cell_x = 70;
  void clear_collision_cell_x();
  static const int kCollisionCellXFieldNumber = 70;
  float collision_cell_x() const;
  void set_collision_cell_x(float value);

  // float collision_cell_y = 71;
  void clear_collision_cell_y();
  static const int kCollisionCellYFieldNumber = 71;
  float collision_cell_y() const;
  void set_collision_cell_y(float value);

  // @@protoc_insertion_point(class_scope:LoncontrolDebug_msgs.LoncontrolDebug)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LoncontrolDebug_msgs::Obstacles* path_filter_obs_;
  ::LoncontrolDebug_msgs::Obstacles* predict_carpos_filter_obs_;
  ::LoncontrolDebug_msgs::Obstacles* dangerous_obs_;
  double sbj_speed_;
  double virtual_speed_;
  double target_speed_lag_;
  double point_zero_velocity_;
  double speed_p_;
  double speed_i_;
  double target_acel_;
  double acel_real_raw_;
  double sbj_acel_;
  double acel_p_;
  double acel_i_;
  double torque_;
  double pressure_;
  double point_zero_length_;
  double path_length_;
  double preview_distance_;
  double real_steer_angle_;
  double lat_error_;
  double pitch_;
  double preview_acel_;
  double acel_pitch_offset_;
  double acel_dis_offset_;
  double speed_error_;
  double station_error_;
  double pos_matched_length_;
  double time_matched_length_;
  double accuracy_dis_;
  double ego_velocity_prediction_;
  double ego_station_prediction_;
  double time_prev_matched_length_;
  double jerk_;
  double station_p_;
  double station_i_;
  ::google::protobuf::int32 pre_zero_velocity_flag_;
  ::google::protobuf::int32 end_length_openloop_flag_;
  ::google::protobuf::int32 path_direction_;
  ::google::protobuf::int32 emergency_obstacle_;
  ::google::protobuf::int32 slow_aeb_mode_;
  ::google::protobuf::int32 is_shift_position_;
  ::google::protobuf::int32 real_shift_position_;
  ::google::protobuf::int32 shift_position_;
  double temp1_;
  double temp2_;
  ::google::protobuf::int32 car_fault_level_;
  ::google::protobuf::int32 emergency_flag_;
  double temp3_;
  float acc_dis_car_to_obj_;
  float acc_obj_velocity_;
  float acc_desired_dis_;
  float acc_delt_dis_;
  float acc_delt_v_;
  float acc_dis_error_accel_;
  float acc_v_error_accel_;
  float acc_accel_;
  float accel_finally_;
  float safe_dis_base_path_;
  float loc_yaw_;
  float theta_abs_;
  float a_obs_;
  float object_speed_;
  float s_safe_;
  float pred_time_;
  double neareat_cell_dis_to_car__;
  float nearest_obs_dis_to_car_;
  float collision_obj_x_;
  float collision_obj_y_;
  float collision_cell_x_;
  float collision_cell_y_;
  mutable int _cached_size_;
  friend struct ::protobuf_LoncontrolDebug_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_LoncontrolDebug_5fmsgs_2eproto::InitDefaultsLoncontrolDebugImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Cell

// uint32 idc = 1;
inline void Cell::clear_idc() {
  idc_ = 0u;
}
inline ::google::protobuf::uint32 Cell::idc() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.idc)
  return idc_;
}
inline void Cell::set_idc(::google::protobuf::uint32 value) {
  
  idc_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.idc)
}

// uint32 type = 2;
inline void Cell::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Cell::type() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.type)
  return type_;
}
inline void Cell::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.type)
}

// float x = 3;
inline void Cell::clear_x() {
  x_ = 0;
}
inline float Cell::x() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.x)
  return x_;
}
inline void Cell::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.x)
}

// float y = 4;
inline void Cell::clear_y() {
  y_ = 0;
}
inline float Cell::y() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.y)
  return y_;
}
inline void Cell::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.y)
}

// float xg = 5;
inline void Cell::clear_xg() {
  xg_ = 0;
}
inline float Cell::xg() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.xg)
  return xg_;
}
inline void Cell::set_xg(float value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.xg)
}

// float yg = 6;
inline void Cell::clear_yg() {
  yg_ = 0;
}
inline float Cell::yg() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Cell.yg)
  return yg_;
}
inline void Cell::set_yg(float value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Cell.yg)
}

// -------------------------------------------------------------------

// Object

// uint32 id = 1;
inline void Object::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Object::id() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.id)
  return id_;
}
inline void Object::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.id)
}

// float x = 2;
inline void Object::clear_x() {
  x_ = 0;
}
inline float Object::x() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.x)
  return x_;
}
inline void Object::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.x)
}

// float y = 3;
inline void Object::clear_y() {
  y_ = 0;
}
inline float Object::y() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.y)
  return y_;
}
inline void Object::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.y)
}

// float vxrel = 4;
inline void Object::clear_vxrel() {
  vxrel_ = 0;
}
inline float Object::vxrel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.vxrel)
  return vxrel_;
}
inline void Object::set_vxrel(float value) {
  
  vxrel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.vxrel)
}

// float vyrel = 5;
inline void Object::clear_vyrel() {
  vyrel_ = 0;
}
inline float Object::vyrel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.vyrel)
  return vyrel_;
}
inline void Object::set_vyrel(float value) {
  
  vyrel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.vyrel)
}

// float vxabs = 6;
inline void Object::clear_vxabs() {
  vxabs_ = 0;
}
inline float Object::vxabs() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.vxabs)
  return vxabs_;
}
inline void Object::set_vxabs(float value) {
  
  vxabs_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.vxabs)
}

// float vyabs = 7;
inline void Object::clear_vyabs() {
  vyabs_ = 0;
}
inline float Object::vyabs() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.vyabs)
  return vyabs_;
}
inline void Object::set_vyabs(float value) {
  
  vyabs_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.vyabs)
}

// float acceleration = 8;
inline void Object::clear_acceleration() {
  acceleration_ = 0;
}
inline float Object::acceleration() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.acceleration)
  return acceleration_;
}
inline void Object::set_acceleration(float value) {
  
  acceleration_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.acceleration)
}

// float width = 9;
inline void Object::clear_width() {
  width_ = 0;
}
inline float Object::width() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.width)
  return width_;
}
inline void Object::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.width)
}

// float length = 10;
inline void Object::clear_length() {
  length_ = 0;
}
inline float Object::length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.length)
  return length_;
}
inline void Object::set_length(float value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.length)
}

// float heading = 11;
inline void Object::clear_heading() {
  heading_ = 0;
}
inline float Object::heading() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.heading)
  return heading_;
}
inline void Object::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.heading)
}

// float speed = 12;
inline void Object::clear_speed() {
  speed_ = 0;
}
inline float Object::speed() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.speed)
  return speed_;
}
inline void Object::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.speed)
}

// uint32 type = 13;
inline void Object::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Object::type() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.type)
  return type_;
}
inline void Object::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.Object.type)
}

// .LoncontrolDebug_msgs.Cell cells = 14;
inline bool Object::has_cells() const {
  return this != internal_default_instance() && cells_ != NULL;
}
inline void Object::clear_cells() {
  if (GetArenaNoVirtual() == NULL && cells_ != NULL) {
    delete cells_;
  }
  cells_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Cell& Object::cells() const {
  const ::LoncontrolDebug_msgs::Cell* p = cells_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Object.cells)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Cell*>(
      &::LoncontrolDebug_msgs::_Cell_default_instance_);
}
inline ::LoncontrolDebug_msgs::Cell* Object::release_cells() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.Object.cells)
  
  ::LoncontrolDebug_msgs::Cell* temp = cells_;
  cells_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Cell* Object::mutable_cells() {
  
  if (cells_ == NULL) {
    cells_ = new ::LoncontrolDebug_msgs::Cell;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.Object.cells)
  return cells_;
}
inline void Object::set_allocated_cells(::LoncontrolDebug_msgs::Cell* cells) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cells_;
  }
  if (cells) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cells = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cells, submessage_arena);
    }
    
  } else {
    
  }
  cells_ = cells;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.Object.cells)
}

// -------------------------------------------------------------------

// Obstacles

// .LoncontrolDebug_msgs.Object objects = 1;
inline bool Obstacles::has_objects() const {
  return this != internal_default_instance() && objects_ != NULL;
}
inline void Obstacles::clear_objects() {
  if (GetArenaNoVirtual() == NULL && objects_ != NULL) {
    delete objects_;
  }
  objects_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Object& Obstacles::objects() const {
  const ::LoncontrolDebug_msgs::Object* p = objects_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Obstacles.objects)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Object*>(
      &::LoncontrolDebug_msgs::_Object_default_instance_);
}
inline ::LoncontrolDebug_msgs::Object* Obstacles::release_objects() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.Obstacles.objects)
  
  ::LoncontrolDebug_msgs::Object* temp = objects_;
  objects_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Object* Obstacles::mutable_objects() {
  
  if (objects_ == NULL) {
    objects_ = new ::LoncontrolDebug_msgs::Object;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.Obstacles.objects)
  return objects_;
}
inline void Obstacles::set_allocated_objects(::LoncontrolDebug_msgs::Object* objects) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete objects_;
  }
  if (objects) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      objects = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, objects, submessage_arena);
    }
    
  } else {
    
  }
  objects_ = objects;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.Obstacles.objects)
}

// .LoncontrolDebug_msgs.Cell Cells = 2;
inline bool Obstacles::has_cells() const {
  return this != internal_default_instance() && cells_ != NULL;
}
inline void Obstacles::clear_cells() {
  if (GetArenaNoVirtual() == NULL && cells_ != NULL) {
    delete cells_;
  }
  cells_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Cell& Obstacles::cells() const {
  const ::LoncontrolDebug_msgs::Cell* p = cells_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.Obstacles.Cells)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Cell*>(
      &::LoncontrolDebug_msgs::_Cell_default_instance_);
}
inline ::LoncontrolDebug_msgs::Cell* Obstacles::release_cells() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.Obstacles.Cells)
  
  ::LoncontrolDebug_msgs::Cell* temp = cells_;
  cells_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Cell* Obstacles::mutable_cells() {
  
  if (cells_ == NULL) {
    cells_ = new ::LoncontrolDebug_msgs::Cell;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.Obstacles.Cells)
  return cells_;
}
inline void Obstacles::set_allocated_cells(::LoncontrolDebug_msgs::Cell* cells) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cells_;
  }
  if (cells) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cells = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cells, submessage_arena);
    }
    
  } else {
    
  }
  cells_ = cells;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.Obstacles.Cells)
}

// -------------------------------------------------------------------

// LoncontrolDebug

// .LoncontrolDebug_msgs.Obstacles path_filter_obs = 1;
inline bool LoncontrolDebug::has_path_filter_obs() const {
  return this != internal_default_instance() && path_filter_obs_ != NULL;
}
inline void LoncontrolDebug::clear_path_filter_obs() {
  if (GetArenaNoVirtual() == NULL && path_filter_obs_ != NULL) {
    delete path_filter_obs_;
  }
  path_filter_obs_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Obstacles& LoncontrolDebug::path_filter_obs() const {
  const ::LoncontrolDebug_msgs::Obstacles* p = path_filter_obs_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.path_filter_obs)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Obstacles*>(
      &::LoncontrolDebug_msgs::_Obstacles_default_instance_);
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::release_path_filter_obs() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.LoncontrolDebug.path_filter_obs)
  
  ::LoncontrolDebug_msgs::Obstacles* temp = path_filter_obs_;
  path_filter_obs_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::mutable_path_filter_obs() {
  
  if (path_filter_obs_ == NULL) {
    path_filter_obs_ = new ::LoncontrolDebug_msgs::Obstacles;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.LoncontrolDebug.path_filter_obs)
  return path_filter_obs_;
}
inline void LoncontrolDebug::set_allocated_path_filter_obs(::LoncontrolDebug_msgs::Obstacles* path_filter_obs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete path_filter_obs_;
  }
  if (path_filter_obs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path_filter_obs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path_filter_obs, submessage_arena);
    }
    
  } else {
    
  }
  path_filter_obs_ = path_filter_obs;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.LoncontrolDebug.path_filter_obs)
}

// .LoncontrolDebug_msgs.Obstacles predict_carpos_filter_obs = 2;
inline bool LoncontrolDebug::has_predict_carpos_filter_obs() const {
  return this != internal_default_instance() && predict_carpos_filter_obs_ != NULL;
}
inline void LoncontrolDebug::clear_predict_carpos_filter_obs() {
  if (GetArenaNoVirtual() == NULL && predict_carpos_filter_obs_ != NULL) {
    delete predict_carpos_filter_obs_;
  }
  predict_carpos_filter_obs_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Obstacles& LoncontrolDebug::predict_carpos_filter_obs() const {
  const ::LoncontrolDebug_msgs::Obstacles* p = predict_carpos_filter_obs_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.predict_carpos_filter_obs)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Obstacles*>(
      &::LoncontrolDebug_msgs::_Obstacles_default_instance_);
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::release_predict_carpos_filter_obs() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.LoncontrolDebug.predict_carpos_filter_obs)
  
  ::LoncontrolDebug_msgs::Obstacles* temp = predict_carpos_filter_obs_;
  predict_carpos_filter_obs_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::mutable_predict_carpos_filter_obs() {
  
  if (predict_carpos_filter_obs_ == NULL) {
    predict_carpos_filter_obs_ = new ::LoncontrolDebug_msgs::Obstacles;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.LoncontrolDebug.predict_carpos_filter_obs)
  return predict_carpos_filter_obs_;
}
inline void LoncontrolDebug::set_allocated_predict_carpos_filter_obs(::LoncontrolDebug_msgs::Obstacles* predict_carpos_filter_obs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete predict_carpos_filter_obs_;
  }
  if (predict_carpos_filter_obs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      predict_carpos_filter_obs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predict_carpos_filter_obs, submessage_arena);
    }
    
  } else {
    
  }
  predict_carpos_filter_obs_ = predict_carpos_filter_obs;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.LoncontrolDebug.predict_carpos_filter_obs)
}

// .LoncontrolDebug_msgs.Obstacles dangerous_obs = 3;
inline bool LoncontrolDebug::has_dangerous_obs() const {
  return this != internal_default_instance() && dangerous_obs_ != NULL;
}
inline void LoncontrolDebug::clear_dangerous_obs() {
  if (GetArenaNoVirtual() == NULL && dangerous_obs_ != NULL) {
    delete dangerous_obs_;
  }
  dangerous_obs_ = NULL;
}
inline const ::LoncontrolDebug_msgs::Obstacles& LoncontrolDebug::dangerous_obs() const {
  const ::LoncontrolDebug_msgs::Obstacles* p = dangerous_obs_;
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.dangerous_obs)
  return p != NULL ? *p : *reinterpret_cast<const ::LoncontrolDebug_msgs::Obstacles*>(
      &::LoncontrolDebug_msgs::_Obstacles_default_instance_);
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::release_dangerous_obs() {
  // @@protoc_insertion_point(field_release:LoncontrolDebug_msgs.LoncontrolDebug.dangerous_obs)
  
  ::LoncontrolDebug_msgs::Obstacles* temp = dangerous_obs_;
  dangerous_obs_ = NULL;
  return temp;
}
inline ::LoncontrolDebug_msgs::Obstacles* LoncontrolDebug::mutable_dangerous_obs() {
  
  if (dangerous_obs_ == NULL) {
    dangerous_obs_ = new ::LoncontrolDebug_msgs::Obstacles;
  }
  // @@protoc_insertion_point(field_mutable:LoncontrolDebug_msgs.LoncontrolDebug.dangerous_obs)
  return dangerous_obs_;
}
inline void LoncontrolDebug::set_allocated_dangerous_obs(::LoncontrolDebug_msgs::Obstacles* dangerous_obs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dangerous_obs_;
  }
  if (dangerous_obs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dangerous_obs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dangerous_obs, submessage_arena);
    }
    
  } else {
    
  }
  dangerous_obs_ = dangerous_obs;
  // @@protoc_insertion_point(field_set_allocated:LoncontrolDebug_msgs.LoncontrolDebug.dangerous_obs)
}

// double sbj_speed = 4;
inline void LoncontrolDebug::clear_sbj_speed() {
  sbj_speed_ = 0;
}
inline double LoncontrolDebug::sbj_speed() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.sbj_speed)
  return sbj_speed_;
}
inline void LoncontrolDebug::set_sbj_speed(double value) {
  
  sbj_speed_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.sbj_speed)
}

// double virtual_speed = 5;
inline void LoncontrolDebug::clear_virtual_speed() {
  virtual_speed_ = 0;
}
inline double LoncontrolDebug::virtual_speed() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.virtual_speed)
  return virtual_speed_;
}
inline void LoncontrolDebug::set_virtual_speed(double value) {
  
  virtual_speed_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.virtual_speed)
}

// double target_speed_lag = 6;
inline void LoncontrolDebug::clear_target_speed_lag() {
  target_speed_lag_ = 0;
}
inline double LoncontrolDebug::target_speed_lag() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.target_speed_lag)
  return target_speed_lag_;
}
inline void LoncontrolDebug::set_target_speed_lag(double value) {
  
  target_speed_lag_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.target_speed_lag)
}

// double point_zero_velocity = 7;
inline void LoncontrolDebug::clear_point_zero_velocity() {
  point_zero_velocity_ = 0;
}
inline double LoncontrolDebug::point_zero_velocity() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.point_zero_velocity)
  return point_zero_velocity_;
}
inline void LoncontrolDebug::set_point_zero_velocity(double value) {
  
  point_zero_velocity_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.point_zero_velocity)
}

// double speed_p = 8;
inline void LoncontrolDebug::clear_speed_p() {
  speed_p_ = 0;
}
inline double LoncontrolDebug::speed_p() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.speed_p)
  return speed_p_;
}
inline void LoncontrolDebug::set_speed_p(double value) {
  
  speed_p_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.speed_p)
}

// double speed_i = 9;
inline void LoncontrolDebug::clear_speed_i() {
  speed_i_ = 0;
}
inline double LoncontrolDebug::speed_i() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.speed_i)
  return speed_i_;
}
inline void LoncontrolDebug::set_speed_i(double value) {
  
  speed_i_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.speed_i)
}

// double target_acel = 10;
inline void LoncontrolDebug::clear_target_acel() {
  target_acel_ = 0;
}
inline double LoncontrolDebug::target_acel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.target_acel)
  return target_acel_;
}
inline void LoncontrolDebug::set_target_acel(double value) {
  
  target_acel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.target_acel)
}

// double acel_real_raw = 11;
inline void LoncontrolDebug::clear_acel_real_raw() {
  acel_real_raw_ = 0;
}
inline double LoncontrolDebug::acel_real_raw() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acel_real_raw)
  return acel_real_raw_;
}
inline void LoncontrolDebug::set_acel_real_raw(double value) {
  
  acel_real_raw_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acel_real_raw)
}

// double sbj_acel = 12;
inline void LoncontrolDebug::clear_sbj_acel() {
  sbj_acel_ = 0;
}
inline double LoncontrolDebug::sbj_acel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.sbj_acel)
  return sbj_acel_;
}
inline void LoncontrolDebug::set_sbj_acel(double value) {
  
  sbj_acel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.sbj_acel)
}

// double acel_p = 13;
inline void LoncontrolDebug::clear_acel_p() {
  acel_p_ = 0;
}
inline double LoncontrolDebug::acel_p() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acel_p)
  return acel_p_;
}
inline void LoncontrolDebug::set_acel_p(double value) {
  
  acel_p_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acel_p)
}

// double acel_i = 14;
inline void LoncontrolDebug::clear_acel_i() {
  acel_i_ = 0;
}
inline double LoncontrolDebug::acel_i() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acel_i)
  return acel_i_;
}
inline void LoncontrolDebug::set_acel_i(double value) {
  
  acel_i_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acel_i)
}

// double torque = 15;
inline void LoncontrolDebug::clear_torque() {
  torque_ = 0;
}
inline double LoncontrolDebug::torque() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.torque)
  return torque_;
}
inline void LoncontrolDebug::set_torque(double value) {
  
  torque_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.torque)
}

// double pressure = 16;
inline void LoncontrolDebug::clear_pressure() {
  pressure_ = 0;
}
inline double LoncontrolDebug::pressure() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.pressure)
  return pressure_;
}
inline void LoncontrolDebug::set_pressure(double value) {
  
  pressure_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.pressure)
}

// double point_zero_length = 17;
inline void LoncontrolDebug::clear_point_zero_length() {
  point_zero_length_ = 0;
}
inline double LoncontrolDebug::point_zero_length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.point_zero_length)
  return point_zero_length_;
}
inline void LoncontrolDebug::set_point_zero_length(double value) {
  
  point_zero_length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.point_zero_length)
}

// double path_length = 18;
inline void LoncontrolDebug::clear_path_length() {
  path_length_ = 0;
}
inline double LoncontrolDebug::path_length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.path_length)
  return path_length_;
}
inline void LoncontrolDebug::set_path_length(double value) {
  
  path_length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.path_length)
}

// double preview_distance = 19;
inline void LoncontrolDebug::clear_preview_distance() {
  preview_distance_ = 0;
}
inline double LoncontrolDebug::preview_distance() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.preview_distance)
  return preview_distance_;
}
inline void LoncontrolDebug::set_preview_distance(double value) {
  
  preview_distance_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.preview_distance)
}

// double real_steer_angle = 20;
inline void LoncontrolDebug::clear_real_steer_angle() {
  real_steer_angle_ = 0;
}
inline double LoncontrolDebug::real_steer_angle() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.real_steer_angle)
  return real_steer_angle_;
}
inline void LoncontrolDebug::set_real_steer_angle(double value) {
  
  real_steer_angle_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.real_steer_angle)
}

// double lat_error = 21;
inline void LoncontrolDebug::clear_lat_error() {
  lat_error_ = 0;
}
inline double LoncontrolDebug::lat_error() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.lat_error)
  return lat_error_;
}
inline void LoncontrolDebug::set_lat_error(double value) {
  
  lat_error_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.lat_error)
}

// double pitch = 22;
inline void LoncontrolDebug::clear_pitch() {
  pitch_ = 0;
}
inline double LoncontrolDebug::pitch() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.pitch)
  return pitch_;
}
inline void LoncontrolDebug::set_pitch(double value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.pitch)
}

// double preview_acel = 23;
inline void LoncontrolDebug::clear_preview_acel() {
  preview_acel_ = 0;
}
inline double LoncontrolDebug::preview_acel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.preview_acel)
  return preview_acel_;
}
inline void LoncontrolDebug::set_preview_acel(double value) {
  
  preview_acel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.preview_acel)
}

// double acel_pitch_offset = 24;
inline void LoncontrolDebug::clear_acel_pitch_offset() {
  acel_pitch_offset_ = 0;
}
inline double LoncontrolDebug::acel_pitch_offset() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acel_pitch_offset)
  return acel_pitch_offset_;
}
inline void LoncontrolDebug::set_acel_pitch_offset(double value) {
  
  acel_pitch_offset_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acel_pitch_offset)
}

// double acel_dis_offset = 25;
inline void LoncontrolDebug::clear_acel_dis_offset() {
  acel_dis_offset_ = 0;
}
inline double LoncontrolDebug::acel_dis_offset() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acel_dis_offset)
  return acel_dis_offset_;
}
inline void LoncontrolDebug::set_acel_dis_offset(double value) {
  
  acel_dis_offset_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acel_dis_offset)
}

// double speed_error = 26;
inline void LoncontrolDebug::clear_speed_error() {
  speed_error_ = 0;
}
inline double LoncontrolDebug::speed_error() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.speed_error)
  return speed_error_;
}
inline void LoncontrolDebug::set_speed_error(double value) {
  
  speed_error_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.speed_error)
}

// double station_error = 27;
inline void LoncontrolDebug::clear_station_error() {
  station_error_ = 0;
}
inline double LoncontrolDebug::station_error() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.station_error)
  return station_error_;
}
inline void LoncontrolDebug::set_station_error(double value) {
  
  station_error_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.station_error)
}

// double pos_matched_length = 28;
inline void LoncontrolDebug::clear_pos_matched_length() {
  pos_matched_length_ = 0;
}
inline double LoncontrolDebug::pos_matched_length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.pos_matched_length)
  return pos_matched_length_;
}
inline void LoncontrolDebug::set_pos_matched_length(double value) {
  
  pos_matched_length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.pos_matched_length)
}

// double time_matched_length = 29;
inline void LoncontrolDebug::clear_time_matched_length() {
  time_matched_length_ = 0;
}
inline double LoncontrolDebug::time_matched_length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.time_matched_length)
  return time_matched_length_;
}
inline void LoncontrolDebug::set_time_matched_length(double value) {
  
  time_matched_length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.time_matched_length)
}

// double accuracy_dis = 30;
inline void LoncontrolDebug::clear_accuracy_dis() {
  accuracy_dis_ = 0;
}
inline double LoncontrolDebug::accuracy_dis() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.accuracy_dis)
  return accuracy_dis_;
}
inline void LoncontrolDebug::set_accuracy_dis(double value) {
  
  accuracy_dis_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.accuracy_dis)
}

// double ego_velocity_prediction = 31;
inline void LoncontrolDebug::clear_ego_velocity_prediction() {
  ego_velocity_prediction_ = 0;
}
inline double LoncontrolDebug::ego_velocity_prediction() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.ego_velocity_prediction)
  return ego_velocity_prediction_;
}
inline void LoncontrolDebug::set_ego_velocity_prediction(double value) {
  
  ego_velocity_prediction_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.ego_velocity_prediction)
}

// double ego_station_prediction = 32;
inline void LoncontrolDebug::clear_ego_station_prediction() {
  ego_station_prediction_ = 0;
}
inline double LoncontrolDebug::ego_station_prediction() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.ego_station_prediction)
  return ego_station_prediction_;
}
inline void LoncontrolDebug::set_ego_station_prediction(double value) {
  
  ego_station_prediction_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.ego_station_prediction)
}

// double time_prev_matched_length = 33;
inline void LoncontrolDebug::clear_time_prev_matched_length() {
  time_prev_matched_length_ = 0;
}
inline double LoncontrolDebug::time_prev_matched_length() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.time_prev_matched_length)
  return time_prev_matched_length_;
}
inline void LoncontrolDebug::set_time_prev_matched_length(double value) {
  
  time_prev_matched_length_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.time_prev_matched_length)
}

// double jerk = 34;
inline void LoncontrolDebug::clear_jerk() {
  jerk_ = 0;
}
inline double LoncontrolDebug::jerk() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.jerk)
  return jerk_;
}
inline void LoncontrolDebug::set_jerk(double value) {
  
  jerk_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.jerk)
}

// double station_p = 35;
inline void LoncontrolDebug::clear_station_p() {
  station_p_ = 0;
}
inline double LoncontrolDebug::station_p() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.station_p)
  return station_p_;
}
inline void LoncontrolDebug::set_station_p(double value) {
  
  station_p_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.station_p)
}

// double station_i = 36;
inline void LoncontrolDebug::clear_station_i() {
  station_i_ = 0;
}
inline double LoncontrolDebug::station_i() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.station_i)
  return station_i_;
}
inline void LoncontrolDebug::set_station_i(double value) {
  
  station_i_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.station_i)
}

// int32 pre_zero_velocity_flag = 37;
inline void LoncontrolDebug::clear_pre_zero_velocity_flag() {
  pre_zero_velocity_flag_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::pre_zero_velocity_flag() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.pre_zero_velocity_flag)
  return pre_zero_velocity_flag_;
}
inline void LoncontrolDebug::set_pre_zero_velocity_flag(::google::protobuf::int32 value) {
  
  pre_zero_velocity_flag_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.pre_zero_velocity_flag)
}

// int32 end_length_openloop_flag = 38;
inline void LoncontrolDebug::clear_end_length_openloop_flag() {
  end_length_openloop_flag_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::end_length_openloop_flag() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.end_length_openloop_flag)
  return end_length_openloop_flag_;
}
inline void LoncontrolDebug::set_end_length_openloop_flag(::google::protobuf::int32 value) {
  
  end_length_openloop_flag_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.end_length_openloop_flag)
}

// int32 path_direction = 39;
inline void LoncontrolDebug::clear_path_direction() {
  path_direction_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::path_direction() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.path_direction)
  return path_direction_;
}
inline void LoncontrolDebug::set_path_direction(::google::protobuf::int32 value) {
  
  path_direction_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.path_direction)
}

// int32 emergency_obstacle = 40;
inline void LoncontrolDebug::clear_emergency_obstacle() {
  emergency_obstacle_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::emergency_obstacle() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.emergency_obstacle)
  return emergency_obstacle_;
}
inline void LoncontrolDebug::set_emergency_obstacle(::google::protobuf::int32 value) {
  
  emergency_obstacle_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.emergency_obstacle)
}

// int32 slow_aeb_mode = 41;
inline void LoncontrolDebug::clear_slow_aeb_mode() {
  slow_aeb_mode_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::slow_aeb_mode() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.slow_aeb_mode)
  return slow_aeb_mode_;
}
inline void LoncontrolDebug::set_slow_aeb_mode(::google::protobuf::int32 value) {
  
  slow_aeb_mode_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.slow_aeb_mode)
}

// int32 is_shift_position = 42;
inline void LoncontrolDebug::clear_is_shift_position() {
  is_shift_position_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::is_shift_position() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.is_shift_position)
  return is_shift_position_;
}
inline void LoncontrolDebug::set_is_shift_position(::google::protobuf::int32 value) {
  
  is_shift_position_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.is_shift_position)
}

// int32 real_shift_position = 43;
inline void LoncontrolDebug::clear_real_shift_position() {
  real_shift_position_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::real_shift_position() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.real_shift_position)
  return real_shift_position_;
}
inline void LoncontrolDebug::set_real_shift_position(::google::protobuf::int32 value) {
  
  real_shift_position_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.real_shift_position)
}

// int32 shift_position = 44;
inline void LoncontrolDebug::clear_shift_position() {
  shift_position_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::shift_position() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.shift_position)
  return shift_position_;
}
inline void LoncontrolDebug::set_shift_position(::google::protobuf::int32 value) {
  
  shift_position_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.shift_position)
}

// int32 car_fault_level = 45;
inline void LoncontrolDebug::clear_car_fault_level() {
  car_fault_level_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::car_fault_level() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.car_fault_level)
  return car_fault_level_;
}
inline void LoncontrolDebug::set_car_fault_level(::google::protobuf::int32 value) {
  
  car_fault_level_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.car_fault_level)
}

// double temp1 = 46;
inline void LoncontrolDebug::clear_temp1() {
  temp1_ = 0;
}
inline double LoncontrolDebug::temp1() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.temp1)
  return temp1_;
}
inline void LoncontrolDebug::set_temp1(double value) {
  
  temp1_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.temp1)
}

// double temp2 = 47;
inline void LoncontrolDebug::clear_temp2() {
  temp2_ = 0;
}
inline double LoncontrolDebug::temp2() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.temp2)
  return temp2_;
}
inline void LoncontrolDebug::set_temp2(double value) {
  
  temp2_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.temp2)
}

// double temp3 = 48;
inline void LoncontrolDebug::clear_temp3() {
  temp3_ = 0;
}
inline double LoncontrolDebug::temp3() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.temp3)
  return temp3_;
}
inline void LoncontrolDebug::set_temp3(double value) {
  
  temp3_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.temp3)
}

// int32 emergency_flag = 49;
inline void LoncontrolDebug::clear_emergency_flag() {
  emergency_flag_ = 0;
}
inline ::google::protobuf::int32 LoncontrolDebug::emergency_flag() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.emergency_flag)
  return emergency_flag_;
}
inline void LoncontrolDebug::set_emergency_flag(::google::protobuf::int32 value) {
  
  emergency_flag_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.emergency_flag)
}

// float acc_dis_car_to_obj = 50;
inline void LoncontrolDebug::clear_acc_dis_car_to_obj() {
  acc_dis_car_to_obj_ = 0;
}
inline float LoncontrolDebug::acc_dis_car_to_obj() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_dis_car_to_obj)
  return acc_dis_car_to_obj_;
}
inline void LoncontrolDebug::set_acc_dis_car_to_obj(float value) {
  
  acc_dis_car_to_obj_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_dis_car_to_obj)
}

// float acc_obj_velocity = 51;
inline void LoncontrolDebug::clear_acc_obj_velocity() {
  acc_obj_velocity_ = 0;
}
inline float LoncontrolDebug::acc_obj_velocity() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_obj_velocity)
  return acc_obj_velocity_;
}
inline void LoncontrolDebug::set_acc_obj_velocity(float value) {
  
  acc_obj_velocity_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_obj_velocity)
}

// float acc_desired_dis = 52;
inline void LoncontrolDebug::clear_acc_desired_dis() {
  acc_desired_dis_ = 0;
}
inline float LoncontrolDebug::acc_desired_dis() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_desired_dis)
  return acc_desired_dis_;
}
inline void LoncontrolDebug::set_acc_desired_dis(float value) {
  
  acc_desired_dis_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_desired_dis)
}

// float acc_delt_dis = 53;
inline void LoncontrolDebug::clear_acc_delt_dis() {
  acc_delt_dis_ = 0;
}
inline float LoncontrolDebug::acc_delt_dis() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_delt_dis)
  return acc_delt_dis_;
}
inline void LoncontrolDebug::set_acc_delt_dis(float value) {
  
  acc_delt_dis_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_delt_dis)
}

// float acc_delt_v = 54;
inline void LoncontrolDebug::clear_acc_delt_v() {
  acc_delt_v_ = 0;
}
inline float LoncontrolDebug::acc_delt_v() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_delt_v)
  return acc_delt_v_;
}
inline void LoncontrolDebug::set_acc_delt_v(float value) {
  
  acc_delt_v_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_delt_v)
}

// float acc_dis_error_accel = 55;
inline void LoncontrolDebug::clear_acc_dis_error_accel() {
  acc_dis_error_accel_ = 0;
}
inline float LoncontrolDebug::acc_dis_error_accel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_dis_error_accel)
  return acc_dis_error_accel_;
}
inline void LoncontrolDebug::set_acc_dis_error_accel(float value) {
  
  acc_dis_error_accel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_dis_error_accel)
}

// float acc_v_error_accel = 56;
inline void LoncontrolDebug::clear_acc_v_error_accel() {
  acc_v_error_accel_ = 0;
}
inline float LoncontrolDebug::acc_v_error_accel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_v_error_accel)
  return acc_v_error_accel_;
}
inline void LoncontrolDebug::set_acc_v_error_accel(float value) {
  
  acc_v_error_accel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_v_error_accel)
}

// float acc_accel = 57;
inline void LoncontrolDebug::clear_acc_accel() {
  acc_accel_ = 0;
}
inline float LoncontrolDebug::acc_accel() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.acc_accel)
  return acc_accel_;
}
inline void LoncontrolDebug::set_acc_accel(float value) {
  
  acc_accel_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.acc_accel)
}

// float accel_finally = 58;
inline void LoncontrolDebug::clear_accel_finally() {
  accel_finally_ = 0;
}
inline float LoncontrolDebug::accel_finally() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.accel_finally)
  return accel_finally_;
}
inline void LoncontrolDebug::set_accel_finally(float value) {
  
  accel_finally_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.accel_finally)
}

// float safe_dis_base_path = 59;
inline void LoncontrolDebug::clear_safe_dis_base_path() {
  safe_dis_base_path_ = 0;
}
inline float LoncontrolDebug::safe_dis_base_path() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.safe_dis_base_path)
  return safe_dis_base_path_;
}
inline void LoncontrolDebug::set_safe_dis_base_path(float value) {
  
  safe_dis_base_path_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.safe_dis_base_path)
}

// float loc_yaw = 60;
inline void LoncontrolDebug::clear_loc_yaw() {
  loc_yaw_ = 0;
}
inline float LoncontrolDebug::loc_yaw() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.loc_yaw)
  return loc_yaw_;
}
inline void LoncontrolDebug::set_loc_yaw(float value) {
  
  loc_yaw_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.loc_yaw)
}

// float theta_abs = 61;
inline void LoncontrolDebug::clear_theta_abs() {
  theta_abs_ = 0;
}
inline float LoncontrolDebug::theta_abs() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.theta_abs)
  return theta_abs_;
}
inline void LoncontrolDebug::set_theta_abs(float value) {
  
  theta_abs_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.theta_abs)
}

// float a_obs = 62;
inline void LoncontrolDebug::clear_a_obs() {
  a_obs_ = 0;
}
inline float LoncontrolDebug::a_obs() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.a_obs)
  return a_obs_;
}
inline void LoncontrolDebug::set_a_obs(float value) {
  
  a_obs_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.a_obs)
}

// float object_speed = 63;
inline void LoncontrolDebug::clear_object_speed() {
  object_speed_ = 0;
}
inline float LoncontrolDebug::object_speed() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.object_speed)
  return object_speed_;
}
inline void LoncontrolDebug::set_object_speed(float value) {
  
  object_speed_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.object_speed)
}

// float s_safe = 64;
inline void LoncontrolDebug::clear_s_safe() {
  s_safe_ = 0;
}
inline float LoncontrolDebug::s_safe() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.s_safe)
  return s_safe_;
}
inline void LoncontrolDebug::set_s_safe(float value) {
  
  s_safe_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.s_safe)
}

// float pred_time = 65;
inline void LoncontrolDebug::clear_pred_time() {
  pred_time_ = 0;
}
inline float LoncontrolDebug::pred_time() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.pred_time)
  return pred_time_;
}
inline void LoncontrolDebug::set_pred_time(float value) {
  
  pred_time_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.pred_time)
}

// float nearest_obs_dis_to_car = 66;
inline void LoncontrolDebug::clear_nearest_obs_dis_to_car() {
  nearest_obs_dis_to_car_ = 0;
}
inline float LoncontrolDebug::nearest_obs_dis_to_car() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.nearest_obs_dis_to_car)
  return nearest_obs_dis_to_car_;
}
inline void LoncontrolDebug::set_nearest_obs_dis_to_car(float value) {
  
  nearest_obs_dis_to_car_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.nearest_obs_dis_to_car)
}

// double neareat_cell_dis_to_car_ = 67;
inline void LoncontrolDebug::clear_neareat_cell_dis_to_car_() {
  neareat_cell_dis_to_car__ = 0;
}
inline double LoncontrolDebug::neareat_cell_dis_to_car_() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.neareat_cell_dis_to_car_)
  return neareat_cell_dis_to_car__;
}
inline void LoncontrolDebug::set_neareat_cell_dis_to_car_(double value) {
  
  neareat_cell_dis_to_car__ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.neareat_cell_dis_to_car_)
}

// float collision_obj_x = 68;
inline void LoncontrolDebug::clear_collision_obj_x() {
  collision_obj_x_ = 0;
}
inline float LoncontrolDebug::collision_obj_x() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.collision_obj_x)
  return collision_obj_x_;
}
inline void LoncontrolDebug::set_collision_obj_x(float value) {
  
  collision_obj_x_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.collision_obj_x)
}

// float collision_obj_y = 69;
inline void LoncontrolDebug::clear_collision_obj_y() {
  collision_obj_y_ = 0;
}
inline float LoncontrolDebug::collision_obj_y() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.collision_obj_y)
  return collision_obj_y_;
}
inline void LoncontrolDebug::set_collision_obj_y(float value) {
  
  collision_obj_y_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.collision_obj_y)
}

// float collision_cell_x = 70;
inline void LoncontrolDebug::clear_collision_cell_x() {
  collision_cell_x_ = 0;
}
inline float LoncontrolDebug::collision_cell_x() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.collision_cell_x)
  return collision_cell_x_;
}
inline void LoncontrolDebug::set_collision_cell_x(float value) {
  
  collision_cell_x_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.collision_cell_x)
}

// float collision_cell_y = 71;
inline void LoncontrolDebug::clear_collision_cell_y() {
  collision_cell_y_ = 0;
}
inline float LoncontrolDebug::collision_cell_y() const {
  // @@protoc_insertion_point(field_get:LoncontrolDebug_msgs.LoncontrolDebug.collision_cell_y)
  return collision_cell_y_;
}
inline void LoncontrolDebug::set_collision_cell_y(float value) {
  
  collision_cell_y_ = value;
  // @@protoc_insertion_point(field_set:LoncontrolDebug_msgs.LoncontrolDebug.collision_cell_y)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LoncontrolDebug_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LoncontrolDebug_5fmsgs_2eproto__INCLUDED
