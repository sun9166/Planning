// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prediction_msgs.proto

#ifndef PROTOBUF_prediction_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_prediction_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common_msgs.pb.h"
#include "perception_objects_msgs.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_prediction_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPredictionTrajectoryPointImpl();
void InitDefaultsPredictionTrajectoryPoint();
void InitDefaultsPredictionTrajectoryImpl();
void InitDefaultsPredictionTrajectory();
void InitDefaultsPredictionObjectImpl();
void InitDefaultsPredictionObject();
void InitDefaultsPredictionObjectsImpl();
void InitDefaultsPredictionObjects();
inline void InitDefaults() {
  InitDefaultsPredictionTrajectoryPoint();
  InitDefaultsPredictionTrajectory();
  InitDefaultsPredictionObject();
  InitDefaultsPredictionObjects();
}
}  // namespace protobuf_prediction_5fmsgs_2eproto
namespace prediction_msgs {
class PredictionObject;
class PredictionObjectDefaultTypeInternal;
extern PredictionObjectDefaultTypeInternal _PredictionObject_default_instance_;
class PredictionObjects;
class PredictionObjectsDefaultTypeInternal;
extern PredictionObjectsDefaultTypeInternal _PredictionObjects_default_instance_;
class PredictionTrajectory;
class PredictionTrajectoryDefaultTypeInternal;
extern PredictionTrajectoryDefaultTypeInternal _PredictionTrajectory_default_instance_;
class PredictionTrajectoryPoint;
class PredictionTrajectoryPointDefaultTypeInternal;
extern PredictionTrajectoryPointDefaultTypeInternal _PredictionTrajectoryPoint_default_instance_;
}  // namespace prediction_msgs
namespace prediction_msgs {

// ===================================================================

class PredictionTrajectoryPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prediction_msgs.PredictionTrajectoryPoint) */ {
 public:
  PredictionTrajectoryPoint();
  virtual ~PredictionTrajectoryPoint();

  PredictionTrajectoryPoint(const PredictionTrajectoryPoint& from);

  inline PredictionTrajectoryPoint& operator=(const PredictionTrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionTrajectoryPoint(PredictionTrajectoryPoint&& from) noexcept
    : PredictionTrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline PredictionTrajectoryPoint& operator=(PredictionTrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionTrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionTrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const PredictionTrajectoryPoint*>(
               &_PredictionTrajectoryPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PredictionTrajectoryPoint* other);
  friend void swap(PredictionTrajectoryPoint& a, PredictionTrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionTrajectoryPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionTrajectoryPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionTrajectoryPoint& from);
  void MergeFrom(const PredictionTrajectoryPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionTrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string lane_id = 10;
  void clear_lane_id();
  static const int kLaneIdFieldNumber = 10;
  const ::std::string& lane_id() const;
  void set_lane_id(const ::std::string& value);
  #if LANG_CXX11
  void set_lane_id(::std::string&& value);
  #endif
  void set_lane_id(const char* value);
  void set_lane_id(const char* value, size_t size);
  ::std::string* mutable_lane_id();
  ::std::string* release_lane_id();
  void set_allocated_lane_id(::std::string* lane_id);

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // double xg = 4;
  void clear_xg();
  static const int kXgFieldNumber = 4;
  double xg() const;
  void set_xg(double value);

  // float angle = 3;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  float angle() const;
  void set_angle(float value);

  // float globalangle = 6;
  void clear_globalangle();
  static const int kGlobalangleFieldNumber = 6;
  float globalangle() const;
  void set_globalangle(float value);

  // double yg = 5;
  void clear_yg();
  static const int kYgFieldNumber = 5;
  double yg() const;
  void set_yg(double value);

  // float v = 7;
  void clear_v();
  static const int kVFieldNumber = 7;
  float v() const;
  void set_v(float value);

  // float a = 8;
  void clear_a();
  static const int kAFieldNumber = 8;
  float a() const;
  void set_a(float value);

  // float t = 9;
  void clear_t();
  static const int kTFieldNumber = 9;
  float t() const;
  void set_t(float value);

  // @@protoc_insertion_point(class_scope:prediction_msgs.PredictionTrajectoryPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lane_id_;
  float x_;
  float y_;
  double xg_;
  float angle_;
  float globalangle_;
  double yg_;
  float v_;
  float a_;
  float t_;
  mutable int _cached_size_;
  friend struct ::protobuf_prediction_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectoryPointImpl();
};
// -------------------------------------------------------------------

class PredictionTrajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prediction_msgs.PredictionTrajectory) */ {
 public:
  PredictionTrajectory();
  virtual ~PredictionTrajectory();

  PredictionTrajectory(const PredictionTrajectory& from);

  inline PredictionTrajectory& operator=(const PredictionTrajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionTrajectory(PredictionTrajectory&& from) noexcept
    : PredictionTrajectory() {
    *this = ::std::move(from);
  }

  inline PredictionTrajectory& operator=(PredictionTrajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionTrajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionTrajectory* internal_default_instance() {
    return reinterpret_cast<const PredictionTrajectory*>(
               &_PredictionTrajectory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PredictionTrajectory* other);
  friend void swap(PredictionTrajectory& a, PredictionTrajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionTrajectory* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionTrajectory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionTrajectory& from);
  void MergeFrom(const PredictionTrajectory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionTrajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 9;
  const ::prediction_msgs::PredictionTrajectoryPoint& points(int index) const;
  ::prediction_msgs::PredictionTrajectoryPoint* mutable_points(int index);
  ::prediction_msgs::PredictionTrajectoryPoint* add_points();
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectoryPoint >*
      mutable_points();
  const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectoryPoint >&
      points() const;

  // repeated string lane_ids = 10;
  int lane_ids_size() const;
  void clear_lane_ids();
  static const int kLaneIdsFieldNumber = 10;
  const ::std::string& lane_ids(int index) const;
  ::std::string* mutable_lane_ids(int index);
  void set_lane_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_lane_ids(int index, ::std::string&& value);
  #endif
  void set_lane_ids(int index, const char* value);
  void set_lane_ids(int index, const char* value, size_t size);
  ::std::string* add_lane_ids();
  void add_lane_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_lane_ids(::std::string&& value);
  #endif
  void add_lane_ids(const char* value);
  void add_lane_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& lane_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_lane_ids();

  // string intentbylane = 8;
  void clear_intentbylane();
  static const int kIntentbylaneFieldNumber = 8;
  const ::std::string& intentbylane() const;
  void set_intentbylane(const ::std::string& value);
  #if LANG_CXX11
  void set_intentbylane(::std::string&& value);
  #endif
  void set_intentbylane(const char* value);
  void set_intentbylane(const char* value, size_t size);
  ::std::string* mutable_intentbylane();
  ::std::string* release_intentbylane();
  void set_allocated_intentbylane(::std::string* intentbylane);

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // double xg = 4;
  void clear_xg();
  static const int kXgFieldNumber = 4;
  double xg() const;
  void set_xg(double value);

  // float angle = 3;
  void clear_angle();
  static const int kAngleFieldNumber = 3;
  float angle() const;
  void set_angle(float value);

  // float globalangle = 6;
  void clear_globalangle();
  static const int kGlobalangleFieldNumber = 6;
  float globalangle() const;
  void set_globalangle(float value);

  // double yg = 5;
  void clear_yg();
  static const int kYgFieldNumber = 5;
  double yg() const;
  void set_yg(double value);

  // float probability = 7;
  void clear_probability();
  static const int kProbabilityFieldNumber = 7;
  float probability() const;
  void set_probability(float value);

  // @@protoc_insertion_point(class_scope:prediction_msgs.PredictionTrajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectoryPoint > points_;
  ::google::protobuf::RepeatedPtrField< ::std::string> lane_ids_;
  ::google::protobuf::internal::ArenaStringPtr intentbylane_;
  float x_;
  float y_;
  double xg_;
  float angle_;
  float globalangle_;
  double yg_;
  float probability_;
  mutable int _cached_size_;
  friend struct ::protobuf_prediction_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionTrajectoryImpl();
};
// -------------------------------------------------------------------

class PredictionObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prediction_msgs.PredictionObject) */ {
 public:
  PredictionObject();
  virtual ~PredictionObject();

  PredictionObject(const PredictionObject& from);

  inline PredictionObject& operator=(const PredictionObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionObject(PredictionObject&& from) noexcept
    : PredictionObject() {
    *this = ::std::move(from);
  }

  inline PredictionObject& operator=(PredictionObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionObject& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionObject* internal_default_instance() {
    return reinterpret_cast<const PredictionObject*>(
               &_PredictionObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PredictionObject* other);
  friend void swap(PredictionObject& a, PredictionObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionObject* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionObject& from);
  void MergeFrom(const PredictionObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
  int trajectories_size() const;
  void clear_trajectories();
  static const int kTrajectoriesFieldNumber = 13;
  const ::prediction_msgs::PredictionTrajectory& trajectories(int index) const;
  ::prediction_msgs::PredictionTrajectory* mutable_trajectories(int index);
  ::prediction_msgs::PredictionTrajectory* add_trajectories();
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectory >*
      mutable_trajectories();
  const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectory >&
      trajectories() const;

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string current_lane_id = 12;
  void clear_current_lane_id();
  static const int kCurrentLaneIdFieldNumber = 12;
  const ::std::string& current_lane_id() const;
  void set_current_lane_id(const ::std::string& value);
  #if LANG_CXX11
  void set_current_lane_id(::std::string&& value);
  #endif
  void set_current_lane_id(const char* value);
  void set_current_lane_id(const char* value, size_t size);
  ::std::string* mutable_current_lane_id();
  ::std::string* release_current_lane_id();
  void set_allocated_current_lane_id(::std::string* current_lane_id);

  // double timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 priority = 4;
  void clear_priority();
  static const int kPriorityFieldNumber = 4;
  ::google::protobuf::uint32 priority() const;
  void set_priority(::google::protobuf::uint32 value);

  // float predicted_period = 5;
  void clear_predicted_period();
  static const int kPredictedPeriodFieldNumber = 5;
  float predicted_period() const;
  void set_predicted_period(float value);

  // bool is_static = 6;
  void clear_is_static();
  static const int kIsStaticFieldNumber = 6;
  bool is_static() const;
  void set_is_static(bool value);

  // double xg = 8;
  void clear_xg();
  static const int kXgFieldNumber = 8;
  double xg() const;
  void set_xg(double value);

  // int32 is_ultra_static = 7;
  void clear_is_ultra_static();
  static const int kIsUltraStaticFieldNumber = 7;
  ::google::protobuf::int32 is_ultra_static() const;
  void set_is_ultra_static(::google::protobuf::int32 value);

  // float globalangle = 10;
  void clear_globalangle();
  static const int kGlobalangleFieldNumber = 10;
  float globalangle() const;
  void set_globalangle(float value);

  // double yg = 9;
  void clear_yg();
  static const int kYgFieldNumber = 9;
  double yg() const;
  void set_yg(double value);

  // float speed = 11;
  void clear_speed();
  static const int kSpeedFieldNumber = 11;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:prediction_msgs.PredictionObject)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectory > trajectories_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr current_lane_id_;
  double timestamp_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 priority_;
  float predicted_period_;
  bool is_static_;
  double xg_;
  ::google::protobuf::int32 is_ultra_static_;
  float globalangle_;
  double yg_;
  float speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_prediction_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObjectImpl();
};
// -------------------------------------------------------------------

class PredictionObjects : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:prediction_msgs.PredictionObjects) */ {
 public:
  PredictionObjects();
  virtual ~PredictionObjects();

  PredictionObjects(const PredictionObjects& from);

  inline PredictionObjects& operator=(const PredictionObjects& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionObjects(PredictionObjects&& from) noexcept
    : PredictionObjects() {
    *this = ::std::move(from);
  }

  inline PredictionObjects& operator=(PredictionObjects&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionObjects& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionObjects* internal_default_instance() {
    return reinterpret_cast<const PredictionObjects*>(
               &_PredictionObjects_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PredictionObjects* other);
  friend void swap(PredictionObjects& a, PredictionObjects& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionObjects* New() const PROTOBUF_FINAL { return New(NULL); }

  PredictionObjects* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PredictionObjects& from);
  void MergeFrom(const PredictionObjects& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PredictionObjects* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
  int prediction_obstacle_size() const;
  void clear_prediction_obstacle();
  static const int kPredictionObstacleFieldNumber = 3;
  const ::prediction_msgs::PredictionObject& prediction_obstacle(int index) const;
  ::prediction_msgs::PredictionObject* mutable_prediction_obstacle(int index);
  ::prediction_msgs::PredictionObject* add_prediction_obstacle();
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionObject >*
      mutable_prediction_obstacle();
  const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionObject >&
      prediction_obstacle() const;

  // .common_msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::common_msgs::Header& header() const;
  ::common_msgs::Header* release_header();
  ::common_msgs::Header* mutable_header();
  void set_allocated_header(::common_msgs::Header* header);

  // .PerceptionObjects perception_objects = 2;
  bool has_perception_objects() const;
  void clear_perception_objects();
  static const int kPerceptionObjectsFieldNumber = 2;
  const ::PerceptionObjects& perception_objects() const;
  ::PerceptionObjects* release_perception_objects();
  ::PerceptionObjects* mutable_perception_objects();
  void set_allocated_perception_objects(::PerceptionObjects* perception_objects);

  // double start_timestamp = 4;
  void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 4;
  double start_timestamp() const;
  void set_start_timestamp(double value);

  // double end_timestamp = 5;
  void clear_end_timestamp();
  static const int kEndTimestampFieldNumber = 5;
  double end_timestamp() const;
  void set_end_timestamp(double value);

  // @@protoc_insertion_point(class_scope:prediction_msgs.PredictionObjects)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionObject > prediction_obstacle_;
  ::common_msgs::Header* header_;
  ::PerceptionObjects* perception_objects_;
  double start_timestamp_;
  double end_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_prediction_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_prediction_5fmsgs_2eproto::InitDefaultsPredictionObjectsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PredictionTrajectoryPoint

// float x = 1;
inline void PredictionTrajectoryPoint::clear_x() {
  x_ = 0;
}
inline float PredictionTrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.x)
  return x_;
}
inline void PredictionTrajectoryPoint::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.x)
}

// float y = 2;
inline void PredictionTrajectoryPoint::clear_y() {
  y_ = 0;
}
inline float PredictionTrajectoryPoint::y() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.y)
  return y_;
}
inline void PredictionTrajectoryPoint::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.y)
}

// float angle = 3;
inline void PredictionTrajectoryPoint::clear_angle() {
  angle_ = 0;
}
inline float PredictionTrajectoryPoint::angle() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.angle)
  return angle_;
}
inline void PredictionTrajectoryPoint::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.angle)
}

// double xg = 4;
inline void PredictionTrajectoryPoint::clear_xg() {
  xg_ = 0;
}
inline double PredictionTrajectoryPoint::xg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.xg)
  return xg_;
}
inline void PredictionTrajectoryPoint::set_xg(double value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.xg)
}

// double yg = 5;
inline void PredictionTrajectoryPoint::clear_yg() {
  yg_ = 0;
}
inline double PredictionTrajectoryPoint::yg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.yg)
  return yg_;
}
inline void PredictionTrajectoryPoint::set_yg(double value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.yg)
}

// float globalangle = 6;
inline void PredictionTrajectoryPoint::clear_globalangle() {
  globalangle_ = 0;
}
inline float PredictionTrajectoryPoint::globalangle() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.globalangle)
  return globalangle_;
}
inline void PredictionTrajectoryPoint::set_globalangle(float value) {
  
  globalangle_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.globalangle)
}

// float v = 7;
inline void PredictionTrajectoryPoint::clear_v() {
  v_ = 0;
}
inline float PredictionTrajectoryPoint::v() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.v)
  return v_;
}
inline void PredictionTrajectoryPoint::set_v(float value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.v)
}

// float a = 8;
inline void PredictionTrajectoryPoint::clear_a() {
  a_ = 0;
}
inline float PredictionTrajectoryPoint::a() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.a)
  return a_;
}
inline void PredictionTrajectoryPoint::set_a(float value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.a)
}

// float t = 9;
inline void PredictionTrajectoryPoint::clear_t() {
  t_ = 0;
}
inline float PredictionTrajectoryPoint::t() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.t)
  return t_;
}
inline void PredictionTrajectoryPoint::set_t(float value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.t)
}

// string lane_id = 10;
inline void PredictionTrajectoryPoint::clear_lane_id() {
  lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionTrajectoryPoint::lane_id() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectoryPoint.lane_id)
  return lane_id_.GetNoArena();
}
inline void PredictionTrajectoryPoint::set_lane_id(const ::std::string& value) {
  
  lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectoryPoint.lane_id)
}
#if LANG_CXX11
inline void PredictionTrajectoryPoint::set_lane_id(::std::string&& value) {
  
  lane_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prediction_msgs.PredictionTrajectoryPoint.lane_id)
}
#endif
inline void PredictionTrajectoryPoint::set_lane_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prediction_msgs.PredictionTrajectoryPoint.lane_id)
}
inline void PredictionTrajectoryPoint::set_lane_id(const char* value, size_t size) {
  
  lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prediction_msgs.PredictionTrajectoryPoint.lane_id)
}
inline ::std::string* PredictionTrajectoryPoint::mutable_lane_id() {
  
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionTrajectoryPoint.lane_id)
  return lane_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionTrajectoryPoint::release_lane_id() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionTrajectoryPoint.lane_id)
  
  return lane_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionTrajectoryPoint::set_allocated_lane_id(::std::string* lane_id) {
  if (lane_id != NULL) {
    
  } else {
    
  }
  lane_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lane_id);
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionTrajectoryPoint.lane_id)
}

// -------------------------------------------------------------------

// PredictionTrajectory

// float x = 1;
inline void PredictionTrajectory::clear_x() {
  x_ = 0;
}
inline float PredictionTrajectory::x() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.x)
  return x_;
}
inline void PredictionTrajectory::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.x)
}

// float y = 2;
inline void PredictionTrajectory::clear_y() {
  y_ = 0;
}
inline float PredictionTrajectory::y() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.y)
  return y_;
}
inline void PredictionTrajectory::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.y)
}

// float angle = 3;
inline void PredictionTrajectory::clear_angle() {
  angle_ = 0;
}
inline float PredictionTrajectory::angle() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.angle)
  return angle_;
}
inline void PredictionTrajectory::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.angle)
}

// double xg = 4;
inline void PredictionTrajectory::clear_xg() {
  xg_ = 0;
}
inline double PredictionTrajectory::xg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.xg)
  return xg_;
}
inline void PredictionTrajectory::set_xg(double value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.xg)
}

// double yg = 5;
inline void PredictionTrajectory::clear_yg() {
  yg_ = 0;
}
inline double PredictionTrajectory::yg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.yg)
  return yg_;
}
inline void PredictionTrajectory::set_yg(double value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.yg)
}

// float globalangle = 6;
inline void PredictionTrajectory::clear_globalangle() {
  globalangle_ = 0;
}
inline float PredictionTrajectory::globalangle() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.globalangle)
  return globalangle_;
}
inline void PredictionTrajectory::set_globalangle(float value) {
  
  globalangle_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.globalangle)
}

// float probability = 7;
inline void PredictionTrajectory::clear_probability() {
  probability_ = 0;
}
inline float PredictionTrajectory::probability() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.probability)
  return probability_;
}
inline void PredictionTrajectory::set_probability(float value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.probability)
}

// string intentbylane = 8;
inline void PredictionTrajectory::clear_intentbylane() {
  intentbylane_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionTrajectory::intentbylane() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.intentbylane)
  return intentbylane_.GetNoArena();
}
inline void PredictionTrajectory::set_intentbylane(const ::std::string& value) {
  
  intentbylane_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.intentbylane)
}
#if LANG_CXX11
inline void PredictionTrajectory::set_intentbylane(::std::string&& value) {
  
  intentbylane_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prediction_msgs.PredictionTrajectory.intentbylane)
}
#endif
inline void PredictionTrajectory::set_intentbylane(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  intentbylane_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prediction_msgs.PredictionTrajectory.intentbylane)
}
inline void PredictionTrajectory::set_intentbylane(const char* value, size_t size) {
  
  intentbylane_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prediction_msgs.PredictionTrajectory.intentbylane)
}
inline ::std::string* PredictionTrajectory::mutable_intentbylane() {
  
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionTrajectory.intentbylane)
  return intentbylane_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionTrajectory::release_intentbylane() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionTrajectory.intentbylane)
  
  return intentbylane_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionTrajectory::set_allocated_intentbylane(::std::string* intentbylane) {
  if (intentbylane != NULL) {
    
  } else {
    
  }
  intentbylane_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), intentbylane);
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionTrajectory.intentbylane)
}

// repeated .prediction_msgs.PredictionTrajectoryPoint points = 9;
inline int PredictionTrajectory::points_size() const {
  return points_.size();
}
inline void PredictionTrajectory::clear_points() {
  points_.Clear();
}
inline const ::prediction_msgs::PredictionTrajectoryPoint& PredictionTrajectory::points(int index) const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.points)
  return points_.Get(index);
}
inline ::prediction_msgs::PredictionTrajectoryPoint* PredictionTrajectory::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionTrajectory.points)
  return points_.Mutable(index);
}
inline ::prediction_msgs::PredictionTrajectoryPoint* PredictionTrajectory::add_points() {
  // @@protoc_insertion_point(field_add:prediction_msgs.PredictionTrajectory.points)
  return points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectoryPoint >*
PredictionTrajectory::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:prediction_msgs.PredictionTrajectory.points)
  return &points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectoryPoint >&
PredictionTrajectory::points() const {
  // @@protoc_insertion_point(field_list:prediction_msgs.PredictionTrajectory.points)
  return points_;
}

// repeated string lane_ids = 10;
inline int PredictionTrajectory::lane_ids_size() const {
  return lane_ids_.size();
}
inline void PredictionTrajectory::clear_lane_ids() {
  lane_ids_.Clear();
}
inline const ::std::string& PredictionTrajectory::lane_ids(int index) const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionTrajectory.lane_ids)
  return lane_ids_.Get(index);
}
inline ::std::string* PredictionTrajectory::mutable_lane_ids(int index) {
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionTrajectory.lane_ids)
  return lane_ids_.Mutable(index);
}
inline void PredictionTrajectory::set_lane_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.lane_ids)
  lane_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PredictionTrajectory::set_lane_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionTrajectory.lane_ids)
  lane_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PredictionTrajectory::set_lane_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  lane_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:prediction_msgs.PredictionTrajectory.lane_ids)
}
inline void PredictionTrajectory::set_lane_ids(int index, const char* value, size_t size) {
  lane_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:prediction_msgs.PredictionTrajectory.lane_ids)
}
inline ::std::string* PredictionTrajectory::add_lane_ids() {
  // @@protoc_insertion_point(field_add_mutable:prediction_msgs.PredictionTrajectory.lane_ids)
  return lane_ids_.Add();
}
inline void PredictionTrajectory::add_lane_ids(const ::std::string& value) {
  lane_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:prediction_msgs.PredictionTrajectory.lane_ids)
}
#if LANG_CXX11
inline void PredictionTrajectory::add_lane_ids(::std::string&& value) {
  lane_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:prediction_msgs.PredictionTrajectory.lane_ids)
}
#endif
inline void PredictionTrajectory::add_lane_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  lane_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:prediction_msgs.PredictionTrajectory.lane_ids)
}
inline void PredictionTrajectory::add_lane_ids(const char* value, size_t size) {
  lane_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:prediction_msgs.PredictionTrajectory.lane_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PredictionTrajectory::lane_ids() const {
  // @@protoc_insertion_point(field_list:prediction_msgs.PredictionTrajectory.lane_ids)
  return lane_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PredictionTrajectory::mutable_lane_ids() {
  // @@protoc_insertion_point(field_mutable_list:prediction_msgs.PredictionTrajectory.lane_ids)
  return &lane_ids_;
}

// -------------------------------------------------------------------

// PredictionObject

// double timestamp = 1;
inline void PredictionObject::clear_timestamp() {
  timestamp_ = 0;
}
inline double PredictionObject::timestamp() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.timestamp)
  return timestamp_;
}
inline void PredictionObject::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.timestamp)
}

// uint32 id = 2;
inline void PredictionObject::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PredictionObject::id() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.id)
  return id_;
}
inline void PredictionObject::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.id)
}

// string type = 3;
inline void PredictionObject::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionObject::type() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.type)
  return type_.GetNoArena();
}
inline void PredictionObject::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.type)
}
#if LANG_CXX11
inline void PredictionObject::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prediction_msgs.PredictionObject.type)
}
#endif
inline void PredictionObject::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prediction_msgs.PredictionObject.type)
}
inline void PredictionObject::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prediction_msgs.PredictionObject.type)
}
inline ::std::string* PredictionObject::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObject.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionObject::release_type() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionObject.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionObject::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionObject.type)
}

// uint32 priority = 4;
inline void PredictionObject::clear_priority() {
  priority_ = 0u;
}
inline ::google::protobuf::uint32 PredictionObject::priority() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.priority)
  return priority_;
}
inline void PredictionObject::set_priority(::google::protobuf::uint32 value) {
  
  priority_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.priority)
}

// float predicted_period = 5;
inline void PredictionObject::clear_predicted_period() {
  predicted_period_ = 0;
}
inline float PredictionObject::predicted_period() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.predicted_period)
  return predicted_period_;
}
inline void PredictionObject::set_predicted_period(float value) {
  
  predicted_period_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.predicted_period)
}

// bool is_static = 6;
inline void PredictionObject::clear_is_static() {
  is_static_ = false;
}
inline bool PredictionObject::is_static() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.is_static)
  return is_static_;
}
inline void PredictionObject::set_is_static(bool value) {
  
  is_static_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.is_static)
}

// int32 is_ultra_static = 7;
inline void PredictionObject::clear_is_ultra_static() {
  is_ultra_static_ = 0;
}
inline ::google::protobuf::int32 PredictionObject::is_ultra_static() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.is_ultra_static)
  return is_ultra_static_;
}
inline void PredictionObject::set_is_ultra_static(::google::protobuf::int32 value) {
  
  is_ultra_static_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.is_ultra_static)
}

// double xg = 8;
inline void PredictionObject::clear_xg() {
  xg_ = 0;
}
inline double PredictionObject::xg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.xg)
  return xg_;
}
inline void PredictionObject::set_xg(double value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.xg)
}

// double yg = 9;
inline void PredictionObject::clear_yg() {
  yg_ = 0;
}
inline double PredictionObject::yg() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.yg)
  return yg_;
}
inline void PredictionObject::set_yg(double value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.yg)
}

// float globalangle = 10;
inline void PredictionObject::clear_globalangle() {
  globalangle_ = 0;
}
inline float PredictionObject::globalangle() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.globalangle)
  return globalangle_;
}
inline void PredictionObject::set_globalangle(float value) {
  
  globalangle_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.globalangle)
}

// float speed = 11;
inline void PredictionObject::clear_speed() {
  speed_ = 0;
}
inline float PredictionObject::speed() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.speed)
  return speed_;
}
inline void PredictionObject::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.speed)
}

// string current_lane_id = 12;
inline void PredictionObject::clear_current_lane_id() {
  current_lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PredictionObject::current_lane_id() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.current_lane_id)
  return current_lane_id_.GetNoArena();
}
inline void PredictionObject::set_current_lane_id(const ::std::string& value) {
  
  current_lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObject.current_lane_id)
}
#if LANG_CXX11
inline void PredictionObject::set_current_lane_id(::std::string&& value) {
  
  current_lane_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prediction_msgs.PredictionObject.current_lane_id)
}
#endif
inline void PredictionObject::set_current_lane_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  current_lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prediction_msgs.PredictionObject.current_lane_id)
}
inline void PredictionObject::set_current_lane_id(const char* value, size_t size) {
  
  current_lane_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prediction_msgs.PredictionObject.current_lane_id)
}
inline ::std::string* PredictionObject::mutable_current_lane_id() {
  
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObject.current_lane_id)
  return current_lane_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PredictionObject::release_current_lane_id() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionObject.current_lane_id)
  
  return current_lane_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PredictionObject::set_allocated_current_lane_id(::std::string* current_lane_id) {
  if (current_lane_id != NULL) {
    
  } else {
    
  }
  current_lane_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), current_lane_id);
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionObject.current_lane_id)
}

// repeated .prediction_msgs.PredictionTrajectory trajectories = 13;
inline int PredictionObject::trajectories_size() const {
  return trajectories_.size();
}
inline void PredictionObject::clear_trajectories() {
  trajectories_.Clear();
}
inline const ::prediction_msgs::PredictionTrajectory& PredictionObject::trajectories(int index) const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObject.trajectories)
  return trajectories_.Get(index);
}
inline ::prediction_msgs::PredictionTrajectory* PredictionObject::mutable_trajectories(int index) {
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObject.trajectories)
  return trajectories_.Mutable(index);
}
inline ::prediction_msgs::PredictionTrajectory* PredictionObject::add_trajectories() {
  // @@protoc_insertion_point(field_add:prediction_msgs.PredictionObject.trajectories)
  return trajectories_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectory >*
PredictionObject::mutable_trajectories() {
  // @@protoc_insertion_point(field_mutable_list:prediction_msgs.PredictionObject.trajectories)
  return &trajectories_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionTrajectory >&
PredictionObject::trajectories() const {
  // @@protoc_insertion_point(field_list:prediction_msgs.PredictionObject.trajectories)
  return trajectories_;
}

// -------------------------------------------------------------------

// PredictionObjects

// .common_msgs.Header header = 1;
inline bool PredictionObjects::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::common_msgs::Header& PredictionObjects::header() const {
  const ::common_msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObjects.header)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Header*>(
      &::common_msgs::_Header_default_instance_);
}
inline ::common_msgs::Header* PredictionObjects::release_header() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionObjects.header)
  
  ::common_msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::common_msgs::Header* PredictionObjects::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::common_msgs::Header;
  }
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObjects.header)
  return header_;
}
inline void PredictionObjects::set_allocated_header(::common_msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionObjects.header)
}

// .PerceptionObjects perception_objects = 2;
inline bool PredictionObjects::has_perception_objects() const {
  return this != internal_default_instance() && perception_objects_ != NULL;
}
inline const ::PerceptionObjects& PredictionObjects::perception_objects() const {
  const ::PerceptionObjects* p = perception_objects_;
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObjects.perception_objects)
  return p != NULL ? *p : *reinterpret_cast<const ::PerceptionObjects*>(
      &::_PerceptionObjects_default_instance_);
}
inline ::PerceptionObjects* PredictionObjects::release_perception_objects() {
  // @@protoc_insertion_point(field_release:prediction_msgs.PredictionObjects.perception_objects)
  
  ::PerceptionObjects* temp = perception_objects_;
  perception_objects_ = NULL;
  return temp;
}
inline ::PerceptionObjects* PredictionObjects::mutable_perception_objects() {
  
  if (perception_objects_ == NULL) {
    perception_objects_ = new ::PerceptionObjects;
  }
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObjects.perception_objects)
  return perception_objects_;
}
inline void PredictionObjects::set_allocated_perception_objects(::PerceptionObjects* perception_objects) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(perception_objects_);
  }
  if (perception_objects) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      perception_objects = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, perception_objects, submessage_arena);
    }
    
  } else {
    
  }
  perception_objects_ = perception_objects;
  // @@protoc_insertion_point(field_set_allocated:prediction_msgs.PredictionObjects.perception_objects)
}

// repeated .prediction_msgs.PredictionObject prediction_obstacle = 3;
inline int PredictionObjects::prediction_obstacle_size() const {
  return prediction_obstacle_.size();
}
inline void PredictionObjects::clear_prediction_obstacle() {
  prediction_obstacle_.Clear();
}
inline const ::prediction_msgs::PredictionObject& PredictionObjects::prediction_obstacle(int index) const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObjects.prediction_obstacle)
  return prediction_obstacle_.Get(index);
}
inline ::prediction_msgs::PredictionObject* PredictionObjects::mutable_prediction_obstacle(int index) {
  // @@protoc_insertion_point(field_mutable:prediction_msgs.PredictionObjects.prediction_obstacle)
  return prediction_obstacle_.Mutable(index);
}
inline ::prediction_msgs::PredictionObject* PredictionObjects::add_prediction_obstacle() {
  // @@protoc_insertion_point(field_add:prediction_msgs.PredictionObjects.prediction_obstacle)
  return prediction_obstacle_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionObject >*
PredictionObjects::mutable_prediction_obstacle() {
  // @@protoc_insertion_point(field_mutable_list:prediction_msgs.PredictionObjects.prediction_obstacle)
  return &prediction_obstacle_;
}
inline const ::google::protobuf::RepeatedPtrField< ::prediction_msgs::PredictionObject >&
PredictionObjects::prediction_obstacle() const {
  // @@protoc_insertion_point(field_list:prediction_msgs.PredictionObjects.prediction_obstacle)
  return prediction_obstacle_;
}

// double start_timestamp = 4;
inline void PredictionObjects::clear_start_timestamp() {
  start_timestamp_ = 0;
}
inline double PredictionObjects::start_timestamp() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObjects.start_timestamp)
  return start_timestamp_;
}
inline void PredictionObjects::set_start_timestamp(double value) {
  
  start_timestamp_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObjects.start_timestamp)
}

// double end_timestamp = 5;
inline void PredictionObjects::clear_end_timestamp() {
  end_timestamp_ = 0;
}
inline double PredictionObjects::end_timestamp() const {
  // @@protoc_insertion_point(field_get:prediction_msgs.PredictionObjects.end_timestamp)
  return end_timestamp_;
}
inline void PredictionObjects::set_end_timestamp(double value) {
  
  end_timestamp_ = value;
  // @@protoc_insertion_point(field_set:prediction_msgs.PredictionObjects.end_timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_prediction_5fmsgs_2eproto__INCLUDED
