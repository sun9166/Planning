// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Vehicle2Cloud.proto

#ifndef PROTOBUF_Vehicle2Cloud_2eproto__INCLUDED
#define PROTOBUF_Vehicle2Cloud_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Vehicle2Cloud_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPathPointImpl();
void InitDefaultsPathPoint();
void InitDefaultsVehicle2CloudImpl();
void InitDefaultsVehicle2Cloud();
inline void InitDefaults() {
  InitDefaultsPathPoint();
  InitDefaultsVehicle2Cloud();
}
}  // namespace protobuf_Vehicle2Cloud_2eproto
namespace v2c {
namespace proto {
class PathPoint;
class PathPointDefaultTypeInternal;
extern PathPointDefaultTypeInternal _PathPoint_default_instance_;
class Vehicle2Cloud;
class Vehicle2CloudDefaultTypeInternal;
extern Vehicle2CloudDefaultTypeInternal _Vehicle2Cloud_default_instance_;
}  // namespace proto
}  // namespace v2c
namespace v2c {
namespace proto {

// ===================================================================

class PathPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v2c.proto.PathPoint) */ {
 public:
  PathPoint();
  virtual ~PathPoint();

  PathPoint(const PathPoint& from);

  inline PathPoint& operator=(const PathPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PathPoint(PathPoint&& from) noexcept
    : PathPoint() {
    *this = ::std::move(from);
  }

  inline PathPoint& operator=(PathPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PathPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PathPoint* internal_default_instance() {
    return reinterpret_cast<const PathPoint*>(
               &_PathPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PathPoint* other);
  friend void swap(PathPoint& a, PathPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PathPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  PathPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PathPoint& from);
  void MergeFrom(const PathPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PathPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double lat = 1;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  double lat() const;
  void set_lat(double value);

  // double lon = 2;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  double lon() const;
  void set_lon(double value);

  // @@protoc_insertion_point(class_scope:v2c.proto.PathPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double lat_;
  double lon_;
  mutable int _cached_size_;
  friend struct ::protobuf_Vehicle2Cloud_2eproto::TableStruct;
  friend void ::protobuf_Vehicle2Cloud_2eproto::InitDefaultsPathPointImpl();
};
// -------------------------------------------------------------------

class Vehicle2Cloud : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:v2c.proto.Vehicle2Cloud) */ {
 public:
  Vehicle2Cloud();
  virtual ~Vehicle2Cloud();

  Vehicle2Cloud(const Vehicle2Cloud& from);

  inline Vehicle2Cloud& operator=(const Vehicle2Cloud& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vehicle2Cloud(Vehicle2Cloud&& from) noexcept
    : Vehicle2Cloud() {
    *this = ::std::move(from);
  }

  inline Vehicle2Cloud& operator=(Vehicle2Cloud&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vehicle2Cloud& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vehicle2Cloud* internal_default_instance() {
    return reinterpret_cast<const Vehicle2Cloud*>(
               &_Vehicle2Cloud_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Vehicle2Cloud* other);
  friend void swap(Vehicle2Cloud& a, Vehicle2Cloud& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vehicle2Cloud* New() const PROTOBUF_FINAL { return New(NULL); }

  Vehicle2Cloud* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vehicle2Cloud& from);
  void MergeFrom(const Vehicle2Cloud& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vehicle2Cloud* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .v2c.proto.PathPoint global_path = 9;
  int global_path_size() const;
  void clear_global_path();
  static const int kGlobalPathFieldNumber = 9;
  const ::v2c::proto::PathPoint& global_path(int index) const;
  ::v2c::proto::PathPoint* mutable_global_path(int index);
  ::v2c::proto::PathPoint* add_global_path();
  ::google::protobuf::RepeatedPtrField< ::v2c::proto::PathPoint >*
      mutable_global_path();
  const ::google::protobuf::RepeatedPtrField< ::v2c::proto::PathPoint >&
      global_path() const;

  // repeated int32 system_fault_code = 11;
  int system_fault_code_size() const;
  void clear_system_fault_code();
  static const int kSystemFaultCodeFieldNumber = 11;
  ::google::protobuf::int32 system_fault_code(int index) const;
  void set_system_fault_code(int index, ::google::protobuf::int32 value);
  void add_system_fault_code(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      system_fault_code() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_system_fault_code();

  // string vehicle_id = 2;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 2;
  const ::std::string& vehicle_id() const;
  void set_vehicle_id(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_id(::std::string&& value);
  #endif
  void set_vehicle_id(const char* value);
  void set_vehicle_id(const char* value, size_t size);
  ::std::string* mutable_vehicle_id();
  ::std::string* release_vehicle_id();
  void set_allocated_vehicle_id(::std::string* vehicle_id);

  // double timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // int32 vehicle_status = 3;
  void clear_vehicle_status();
  static const int kVehicleStatusFieldNumber = 3;
  ::google::protobuf::int32 vehicle_status() const;
  void set_vehicle_status(::google::protobuf::int32 value);

  // int32 task_status = 4;
  void clear_task_status();
  static const int kTaskStatusFieldNumber = 4;
  ::google::protobuf::int32 task_status() const;
  void set_task_status(::google::protobuf::int32 value);

  // double task_total_mileage = 5;
  void clear_task_total_mileage();
  static const int kTaskTotalMileageFieldNumber = 5;
  double task_total_mileage() const;
  void set_task_total_mileage(double value);

  // double task_remain_mileage = 6;
  void clear_task_remain_mileage();
  static const int kTaskRemainMileageFieldNumber = 6;
  double task_remain_mileage() const;
  void set_task_remain_mileage(double value);

  // double vehicle_loc_lat = 7;
  void clear_vehicle_loc_lat();
  static const int kVehicleLocLatFieldNumber = 7;
  double vehicle_loc_lat() const;
  void set_vehicle_loc_lat(double value);

  // double vehicle_loc_lon = 8;
  void clear_vehicle_loc_lon();
  static const int kVehicleLocLonFieldNumber = 8;
  double vehicle_loc_lon() const;
  void set_vehicle_loc_lon(double value);

  // float vehicle_speed = 10;
  void clear_vehicle_speed();
  static const int kVehicleSpeedFieldNumber = 10;
  float vehicle_speed() const;
  void set_vehicle_speed(float value);

  // int32 turnning_light = 12;
  void clear_turnning_light();
  static const int kTurnningLightFieldNumber = 12;
  ::google::protobuf::int32 turnning_light() const;
  void set_turnning_light(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:v2c.proto.Vehicle2Cloud)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::v2c::proto::PathPoint > global_path_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > system_fault_code_;
  mutable int _system_fault_code_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_id_;
  double timestamp_;
  ::google::protobuf::int32 vehicle_status_;
  ::google::protobuf::int32 task_status_;
  double task_total_mileage_;
  double task_remain_mileage_;
  double vehicle_loc_lat_;
  double vehicle_loc_lon_;
  float vehicle_speed_;
  ::google::protobuf::int32 turnning_light_;
  mutable int _cached_size_;
  friend struct ::protobuf_Vehicle2Cloud_2eproto::TableStruct;
  friend void ::protobuf_Vehicle2Cloud_2eproto::InitDefaultsVehicle2CloudImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PathPoint

// double lat = 1;
inline void PathPoint::clear_lat() {
  lat_ = 0;
}
inline double PathPoint::lat() const {
  // @@protoc_insertion_point(field_get:v2c.proto.PathPoint.lat)
  return lat_;
}
inline void PathPoint::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.PathPoint.lat)
}

// double lon = 2;
inline void PathPoint::clear_lon() {
  lon_ = 0;
}
inline double PathPoint::lon() const {
  // @@protoc_insertion_point(field_get:v2c.proto.PathPoint.lon)
  return lon_;
}
inline void PathPoint::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.PathPoint.lon)
}

// -------------------------------------------------------------------

// Vehicle2Cloud

// double timestamp = 1;
inline void Vehicle2Cloud::clear_timestamp() {
  timestamp_ = 0;
}
inline double Vehicle2Cloud::timestamp() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.timestamp)
  return timestamp_;
}
inline void Vehicle2Cloud::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.timestamp)
}

// string vehicle_id = 2;
inline void Vehicle2Cloud::clear_vehicle_id() {
  vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Vehicle2Cloud::vehicle_id() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.vehicle_id)
  return vehicle_id_.GetNoArena();
}
inline void Vehicle2Cloud::set_vehicle_id(const ::std::string& value) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.vehicle_id)
}
#if LANG_CXX11
inline void Vehicle2Cloud::set_vehicle_id(::std::string&& value) {
  
  vehicle_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:v2c.proto.Vehicle2Cloud.vehicle_id)
}
#endif
inline void Vehicle2Cloud::set_vehicle_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:v2c.proto.Vehicle2Cloud.vehicle_id)
}
inline void Vehicle2Cloud::set_vehicle_id(const char* value, size_t size) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:v2c.proto.Vehicle2Cloud.vehicle_id)
}
inline ::std::string* Vehicle2Cloud::mutable_vehicle_id() {
  
  // @@protoc_insertion_point(field_mutable:v2c.proto.Vehicle2Cloud.vehicle_id)
  return vehicle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Vehicle2Cloud::release_vehicle_id() {
  // @@protoc_insertion_point(field_release:v2c.proto.Vehicle2Cloud.vehicle_id)
  
  return vehicle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Vehicle2Cloud::set_allocated_vehicle_id(::std::string* vehicle_id) {
  if (vehicle_id != NULL) {
    
  } else {
    
  }
  vehicle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_id);
  // @@protoc_insertion_point(field_set_allocated:v2c.proto.Vehicle2Cloud.vehicle_id)
}

// int32 vehicle_status = 3;
inline void Vehicle2Cloud::clear_vehicle_status() {
  vehicle_status_ = 0;
}
inline ::google::protobuf::int32 Vehicle2Cloud::vehicle_status() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.vehicle_status)
  return vehicle_status_;
}
inline void Vehicle2Cloud::set_vehicle_status(::google::protobuf::int32 value) {
  
  vehicle_status_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.vehicle_status)
}

// int32 task_status = 4;
inline void Vehicle2Cloud::clear_task_status() {
  task_status_ = 0;
}
inline ::google::protobuf::int32 Vehicle2Cloud::task_status() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.task_status)
  return task_status_;
}
inline void Vehicle2Cloud::set_task_status(::google::protobuf::int32 value) {
  
  task_status_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.task_status)
}

// double task_total_mileage = 5;
inline void Vehicle2Cloud::clear_task_total_mileage() {
  task_total_mileage_ = 0;
}
inline double Vehicle2Cloud::task_total_mileage() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.task_total_mileage)
  return task_total_mileage_;
}
inline void Vehicle2Cloud::set_task_total_mileage(double value) {
  
  task_total_mileage_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.task_total_mileage)
}

// double task_remain_mileage = 6;
inline void Vehicle2Cloud::clear_task_remain_mileage() {
  task_remain_mileage_ = 0;
}
inline double Vehicle2Cloud::task_remain_mileage() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.task_remain_mileage)
  return task_remain_mileage_;
}
inline void Vehicle2Cloud::set_task_remain_mileage(double value) {
  
  task_remain_mileage_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.task_remain_mileage)
}

// double vehicle_loc_lat = 7;
inline void Vehicle2Cloud::clear_vehicle_loc_lat() {
  vehicle_loc_lat_ = 0;
}
inline double Vehicle2Cloud::vehicle_loc_lat() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.vehicle_loc_lat)
  return vehicle_loc_lat_;
}
inline void Vehicle2Cloud::set_vehicle_loc_lat(double value) {
  
  vehicle_loc_lat_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.vehicle_loc_lat)
}

// double vehicle_loc_lon = 8;
inline void Vehicle2Cloud::clear_vehicle_loc_lon() {
  vehicle_loc_lon_ = 0;
}
inline double Vehicle2Cloud::vehicle_loc_lon() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.vehicle_loc_lon)
  return vehicle_loc_lon_;
}
inline void Vehicle2Cloud::set_vehicle_loc_lon(double value) {
  
  vehicle_loc_lon_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.vehicle_loc_lon)
}

// repeated .v2c.proto.PathPoint global_path = 9;
inline int Vehicle2Cloud::global_path_size() const {
  return global_path_.size();
}
inline void Vehicle2Cloud::clear_global_path() {
  global_path_.Clear();
}
inline const ::v2c::proto::PathPoint& Vehicle2Cloud::global_path(int index) const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.global_path)
  return global_path_.Get(index);
}
inline ::v2c::proto::PathPoint* Vehicle2Cloud::mutable_global_path(int index) {
  // @@protoc_insertion_point(field_mutable:v2c.proto.Vehicle2Cloud.global_path)
  return global_path_.Mutable(index);
}
inline ::v2c::proto::PathPoint* Vehicle2Cloud::add_global_path() {
  // @@protoc_insertion_point(field_add:v2c.proto.Vehicle2Cloud.global_path)
  return global_path_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::v2c::proto::PathPoint >*
Vehicle2Cloud::mutable_global_path() {
  // @@protoc_insertion_point(field_mutable_list:v2c.proto.Vehicle2Cloud.global_path)
  return &global_path_;
}
inline const ::google::protobuf::RepeatedPtrField< ::v2c::proto::PathPoint >&
Vehicle2Cloud::global_path() const {
  // @@protoc_insertion_point(field_list:v2c.proto.Vehicle2Cloud.global_path)
  return global_path_;
}

// float vehicle_speed = 10;
inline void Vehicle2Cloud::clear_vehicle_speed() {
  vehicle_speed_ = 0;
}
inline float Vehicle2Cloud::vehicle_speed() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.vehicle_speed)
  return vehicle_speed_;
}
inline void Vehicle2Cloud::set_vehicle_speed(float value) {
  
  vehicle_speed_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.vehicle_speed)
}

// repeated int32 system_fault_code = 11;
inline int Vehicle2Cloud::system_fault_code_size() const {
  return system_fault_code_.size();
}
inline void Vehicle2Cloud::clear_system_fault_code() {
  system_fault_code_.Clear();
}
inline ::google::protobuf::int32 Vehicle2Cloud::system_fault_code(int index) const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.system_fault_code)
  return system_fault_code_.Get(index);
}
inline void Vehicle2Cloud::set_system_fault_code(int index, ::google::protobuf::int32 value) {
  system_fault_code_.Set(index, value);
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.system_fault_code)
}
inline void Vehicle2Cloud::add_system_fault_code(::google::protobuf::int32 value) {
  system_fault_code_.Add(value);
  // @@protoc_insertion_point(field_add:v2c.proto.Vehicle2Cloud.system_fault_code)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Vehicle2Cloud::system_fault_code() const {
  // @@protoc_insertion_point(field_list:v2c.proto.Vehicle2Cloud.system_fault_code)
  return system_fault_code_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Vehicle2Cloud::mutable_system_fault_code() {
  // @@protoc_insertion_point(field_mutable_list:v2c.proto.Vehicle2Cloud.system_fault_code)
  return &system_fault_code_;
}

// int32 turnning_light = 12;
inline void Vehicle2Cloud::clear_turnning_light() {
  turnning_light_ = 0;
}
inline ::google::protobuf::int32 Vehicle2Cloud::turnning_light() const {
  // @@protoc_insertion_point(field_get:v2c.proto.Vehicle2Cloud.turnning_light)
  return turnning_light_;
}
inline void Vehicle2Cloud::set_turnning_light(::google::protobuf::int32 value) {
  
  turnning_light_ = value;
  // @@protoc_insertion_point(field_set:v2c.proto.Vehicle2Cloud.turnning_light)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace v2c

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Vehicle2Cloud_2eproto__INCLUDED
