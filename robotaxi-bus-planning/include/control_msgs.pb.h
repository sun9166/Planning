// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: control_msgs.proto

#ifndef PROTOBUF_control_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_control_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common_msgs.pb.h"
#include "vehicle_perception_msgs.pb.h"
#include "planning_msgs.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_control_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCellImpl();
void InitDefaultsCell();
void InitDefaultsObjectImpl();
void InitDefaultsObject();
void InitDefaultsObstaclesImpl();
void InitDefaultsObstacles();
void InitDefaultsVehicleInfoImpl();
void InitDefaultsVehicleInfo();
void InitDefaultsControlFeedbackImpl();
void InitDefaultsControlFeedback();
void InitDefaultsBussinessDemandImpl();
void InitDefaultsBussinessDemand();
void InitDefaultsLatcontrolImpl();
void InitDefaultsLatcontrol();
void InitDefaultsLoncontrolImpl();
void InitDefaultsLoncontrol();
void InitDefaultsSystemControlImpl();
void InitDefaultsSystemControl();
void InitDefaultsSystemOverallImpl();
void InitDefaultsSystemOverall();
inline void InitDefaults() {
  InitDefaultsCell();
  InitDefaultsObject();
  InitDefaultsObstacles();
  InitDefaultsVehicleInfo();
  InitDefaultsControlFeedback();
  InitDefaultsBussinessDemand();
  InitDefaultsLatcontrol();
  InitDefaultsLoncontrol();
  InitDefaultsSystemControl();
  InitDefaultsSystemOverall();
}
}  // namespace protobuf_control_5fmsgs_2eproto
namespace control_msgs {
class BussinessDemand;
class BussinessDemandDefaultTypeInternal;
extern BussinessDemandDefaultTypeInternal _BussinessDemand_default_instance_;
class Cell;
class CellDefaultTypeInternal;
extern CellDefaultTypeInternal _Cell_default_instance_;
class ControlFeedback;
class ControlFeedbackDefaultTypeInternal;
extern ControlFeedbackDefaultTypeInternal _ControlFeedback_default_instance_;
class Latcontrol;
class LatcontrolDefaultTypeInternal;
extern LatcontrolDefaultTypeInternal _Latcontrol_default_instance_;
class Loncontrol;
class LoncontrolDefaultTypeInternal;
extern LoncontrolDefaultTypeInternal _Loncontrol_default_instance_;
class Object;
class ObjectDefaultTypeInternal;
extern ObjectDefaultTypeInternal _Object_default_instance_;
class Obstacles;
class ObstaclesDefaultTypeInternal;
extern ObstaclesDefaultTypeInternal _Obstacles_default_instance_;
class SystemControl;
class SystemControlDefaultTypeInternal;
extern SystemControlDefaultTypeInternal _SystemControl_default_instance_;
class SystemOverall;
class SystemOverallDefaultTypeInternal;
extern SystemOverallDefaultTypeInternal _SystemOverall_default_instance_;
class VehicleInfo;
class VehicleInfoDefaultTypeInternal;
extern VehicleInfoDefaultTypeInternal _VehicleInfo_default_instance_;
}  // namespace control_msgs
namespace control_msgs {

// ===================================================================

class Cell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.Cell) */ {
 public:
  Cell();
  virtual ~Cell();

  Cell(const Cell& from);

  inline Cell& operator=(const Cell& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Cell(Cell&& from) noexcept
    : Cell() {
    *this = ::std::move(from);
  }

  inline Cell& operator=(Cell&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Cell& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Cell* internal_default_instance() {
    return reinterpret_cast<const Cell*>(
               &_Cell_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Cell* other);
  friend void swap(Cell& a, Cell& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Cell* New() const PROTOBUF_FINAL { return New(NULL); }

  Cell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Cell& from);
  void MergeFrom(const Cell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Cell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 idc = 1;
  void clear_idc();
  static const int kIdcFieldNumber = 1;
  ::google::protobuf::uint32 idc() const;
  void set_idc(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // float x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // float y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // float xg = 5;
  void clear_xg();
  static const int kXgFieldNumber = 5;
  float xg() const;
  void set_xg(float value);

  // float yg = 6;
  void clear_yg();
  static const int kYgFieldNumber = 6;
  float yg() const;
  void set_yg(float value);

  // @@protoc_insertion_point(class_scope:control_msgs.Cell)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 idc_;
  ::google::protobuf::uint32 type_;
  float x_;
  float y_;
  float xg_;
  float yg_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsCellImpl();
};
// -------------------------------------------------------------------

class Object : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.Object) */ {
 public:
  Object();
  virtual ~Object();

  Object(const Object& from);

  inline Object& operator=(const Object& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Object(Object&& from) noexcept
    : Object() {
    *this = ::std::move(from);
  }

  inline Object& operator=(Object&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Object& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Object* internal_default_instance() {
    return reinterpret_cast<const Object*>(
               &_Object_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Object* other);
  friend void swap(Object& a, Object& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Object* New() const PROTOBUF_FINAL { return New(NULL); }

  Object* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Object& from);
  void MergeFrom(const Object& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Object* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .control_msgs.Cell cells = 14;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 14;
  const ::control_msgs::Cell& cells(int index) const;
  ::control_msgs::Cell* mutable_cells(int index);
  ::control_msgs::Cell* add_cells();
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >&
      cells() const;

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 2;
  void clear_x();
  static const int kXFieldNumber = 2;
  float x() const;
  void set_x(float value);

  // float y = 3;
  void clear_y();
  static const int kYFieldNumber = 3;
  float y() const;
  void set_y(float value);

  // float vxrel = 4;
  void clear_vxrel();
  static const int kVxrelFieldNumber = 4;
  float vxrel() const;
  void set_vxrel(float value);

  // float vyrel = 5;
  void clear_vyrel();
  static const int kVyrelFieldNumber = 5;
  float vyrel() const;
  void set_vyrel(float value);

  // float vxabs = 6;
  void clear_vxabs();
  static const int kVxabsFieldNumber = 6;
  float vxabs() const;
  void set_vxabs(float value);

  // float vyabs = 7;
  void clear_vyabs();
  static const int kVyabsFieldNumber = 7;
  float vyabs() const;
  void set_vyabs(float value);

  // float acceleration = 8;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 8;
  float acceleration() const;
  void set_acceleration(float value);

  // float width = 9;
  void clear_width();
  static const int kWidthFieldNumber = 9;
  float width() const;
  void set_width(float value);

  // float length = 10;
  void clear_length();
  static const int kLengthFieldNumber = 10;
  float length() const;
  void set_length(float value);

  // float heading = 11;
  void clear_heading();
  static const int kHeadingFieldNumber = 11;
  float heading() const;
  void set_heading(float value);

  // float speed = 12;
  void clear_speed();
  static const int kSpeedFieldNumber = 12;
  float speed() const;
  void set_speed(float value);

  // uint32 type = 13;
  void clear_type();
  static const int kTypeFieldNumber = 13;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:control_msgs.Object)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell > cells_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float vxrel_;
  float vyrel_;
  float vxabs_;
  float vyabs_;
  float acceleration_;
  float width_;
  float length_;
  float heading_;
  float speed_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsObjectImpl();
};
// -------------------------------------------------------------------

class Obstacles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.Obstacles) */ {
 public:
  Obstacles();
  virtual ~Obstacles();

  Obstacles(const Obstacles& from);

  inline Obstacles& operator=(const Obstacles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Obstacles(Obstacles&& from) noexcept
    : Obstacles() {
    *this = ::std::move(from);
  }

  inline Obstacles& operator=(Obstacles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Obstacles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Obstacles* internal_default_instance() {
    return reinterpret_cast<const Obstacles*>(
               &_Obstacles_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Obstacles* other);
  friend void swap(Obstacles& a, Obstacles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Obstacles* New() const PROTOBUF_FINAL { return New(NULL); }

  Obstacles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Obstacles& from);
  void MergeFrom(const Obstacles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Obstacles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .control_msgs.Object objects = 1;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 1;
  const ::control_msgs::Object& objects(int index) const;
  ::control_msgs::Object* mutable_objects(int index);
  ::control_msgs::Object* add_objects();
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Object >*
      mutable_objects();
  const ::google::protobuf::RepeatedPtrField< ::control_msgs::Object >&
      objects() const;

  // repeated .control_msgs.Cell Cells = 2;
  int cells_size() const;
  void clear_cells();
  static const int kCellsFieldNumber = 2;
  const ::control_msgs::Cell& cells(int index) const;
  ::control_msgs::Cell* mutable_cells(int index);
  ::control_msgs::Cell* add_cells();
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >*
      mutable_cells();
  const ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >&
      cells() const;

  // @@protoc_insertion_point(class_scope:control_msgs.Obstacles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Object > objects_;
  ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell > cells_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsObstaclesImpl();
};
// -------------------------------------------------------------------

class VehicleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.VehicleInfo) */ {
 public:
  VehicleInfo();
  virtual ~VehicleInfo();

  VehicleInfo(const VehicleInfo& from);

  inline VehicleInfo& operator=(const VehicleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInfo(VehicleInfo&& from) noexcept
    : VehicleInfo() {
    *this = ::std::move(from);
  }

  inline VehicleInfo& operator=(VehicleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleInfo* internal_default_instance() {
    return reinterpret_cast<const VehicleInfo*>(
               &_VehicleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VehicleInfo* other);
  friend void swap(VehicleInfo& a, VehicleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInfo& from);
  void MergeFrom(const VehicleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float steerangle = 1;
  void clear_steerangle();
  static const int kSteerangleFieldNumber = 1;
  float steerangle() const;
  void set_steerangle(float value);

  // float speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  float speed() const;
  void set_speed(float value);

  // float vehicle_accel = 3;
  void clear_vehicle_accel();
  static const int kVehicleAccelFieldNumber = 3;
  float vehicle_accel() const;
  void set_vehicle_accel(float value);

  // float brake_pressure = 4;
  void clear_brake_pressure();
  static const int kBrakePressureFieldNumber = 4;
  float brake_pressure() const;
  void set_brake_pressure(float value);

  // int32 shift_position = 5;
  void clear_shift_position();
  static const int kShiftPositionFieldNumber = 5;
  ::google::protobuf::int32 shift_position() const;
  void set_shift_position(::google::protobuf::int32 value);

  // int32 epb_status = 6;
  void clear_epb_status();
  static const int kEpbStatusFieldNumber = 6;
  ::google::protobuf::int32 epb_status() const;
  void set_epb_status(::google::protobuf::int32 value);

  // int32 current_drive_mode = 7;
  void clear_current_drive_mode();
  static const int kCurrentDriveModeFieldNumber = 7;
  ::google::protobuf::int32 current_drive_mode() const;
  void set_current_drive_mode(::google::protobuf::int32 value);

  // int32 sys_state = 8;
  void clear_sys_state();
  static const int kSysStateFieldNumber = 8;
  ::google::protobuf::int32 sys_state() const;
  void set_sys_state(::google::protobuf::int32 value);

  // bool vehicle_auto_enable = 9;
  void clear_vehicle_auto_enable();
  static const int kVehicleAutoEnableFieldNumber = 9;
  bool vehicle_auto_enable() const;
  void set_vehicle_auto_enable(bool value);

  // bool vehicle_lat_enable = 10;
  void clear_vehicle_lat_enable();
  static const int kVehicleLatEnableFieldNumber = 10;
  bool vehicle_lat_enable() const;
  void set_vehicle_lat_enable(bool value);

  // bool vehicle_lon_enable = 11;
  void clear_vehicle_lon_enable();
  static const int kVehicleLonEnableFieldNumber = 11;
  bool vehicle_lon_enable() const;
  void set_vehicle_lon_enable(bool value);

  // bool vehicle_epb_status = 12;
  void clear_vehicle_epb_status();
  static const int kVehicleEpbStatusFieldNumber = 12;
  bool vehicle_epb_status() const;
  void set_vehicle_epb_status(bool value);

  // int32 on_accpedal = 13;
  void clear_on_accpedal();
  static const int kOnAccpedalFieldNumber = 13;
  ::google::protobuf::int32 on_accpedal() const;
  void set_on_accpedal(::google::protobuf::int32 value);

  // bool steer_left_down = 14;
  void clear_steer_left_down();
  static const int kSteerLeftDownFieldNumber = 14;
  bool steer_left_down() const;
  void set_steer_left_down(bool value);

  // @@protoc_insertion_point(class_scope:control_msgs.VehicleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float steerangle_;
  float speed_;
  float vehicle_accel_;
  float brake_pressure_;
  ::google::protobuf::int32 shift_position_;
  ::google::protobuf::int32 epb_status_;
  ::google::protobuf::int32 current_drive_mode_;
  ::google::protobuf::int32 sys_state_;
  bool vehicle_auto_enable_;
  bool vehicle_lat_enable_;
  bool vehicle_lon_enable_;
  bool vehicle_epb_status_;
  ::google::protobuf::int32 on_accpedal_;
  bool steer_left_down_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsVehicleInfoImpl();
};
// -------------------------------------------------------------------

class ControlFeedback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.ControlFeedback) */ {
 public:
  ControlFeedback();
  virtual ~ControlFeedback();

  ControlFeedback(const ControlFeedback& from);

  inline ControlFeedback& operator=(const ControlFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ControlFeedback(ControlFeedback&& from) noexcept
    : ControlFeedback() {
    *this = ::std::move(from);
  }

  inline ControlFeedback& operator=(ControlFeedback&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ControlFeedback& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ControlFeedback* internal_default_instance() {
    return reinterpret_cast<const ControlFeedback*>(
               &_ControlFeedback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ControlFeedback* other);
  friend void swap(ControlFeedback& a, ControlFeedback& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ControlFeedback* New() const PROTOBUF_FINAL { return New(NULL); }

  ControlFeedback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControlFeedback& from);
  void MergeFrom(const ControlFeedback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControlFeedback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::common_msgs::Header& header() const;
  ::common_msgs::Header* release_header();
  ::common_msgs::Header* mutable_header();
  void set_allocated_header(::common_msgs::Header* header);

  // .control_msgs.VehicleInfo vehicle_info = 2;
  bool has_vehicle_info() const;
  void clear_vehicle_info();
  static const int kVehicleInfoFieldNumber = 2;
  const ::control_msgs::VehicleInfo& vehicle_info() const;
  ::control_msgs::VehicleInfo* release_vehicle_info();
  ::control_msgs::VehicleInfo* mutable_vehicle_info();
  void set_allocated_vehicle_info(::control_msgs::VehicleInfo* vehicle_info);

  // int32 brake_state = 3;
  void clear_brake_state();
  static const int kBrakeStateFieldNumber = 3;
  ::google::protobuf::int32 brake_state() const;
  void set_brake_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:control_msgs.ControlFeedback)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::Header* header_;
  ::control_msgs::VehicleInfo* vehicle_info_;
  ::google::protobuf::int32 brake_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsControlFeedbackImpl();
};
// -------------------------------------------------------------------

class BussinessDemand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.BussinessDemand) */ {
 public:
  BussinessDemand();
  virtual ~BussinessDemand();

  BussinessDemand(const BussinessDemand& from);

  inline BussinessDemand& operator=(const BussinessDemand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BussinessDemand(BussinessDemand&& from) noexcept
    : BussinessDemand() {
    *this = ::std::move(from);
  }

  inline BussinessDemand& operator=(BussinessDemand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BussinessDemand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BussinessDemand* internal_default_instance() {
    return reinterpret_cast<const BussinessDemand*>(
               &_BussinessDemand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BussinessDemand* other);
  friend void swap(BussinessDemand& a, BussinessDemand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BussinessDemand* New() const PROTOBUF_FINAL { return New(NULL); }

  BussinessDemand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BussinessDemand& from);
  void MergeFrom(const BussinessDemand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BussinessDemand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool isvalid = 1;
  void clear_isvalid();
  static const int kIsvalidFieldNumber = 1;
  bool isvalid() const;
  void set_isvalid(bool value);

  // int32 cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:control_msgs.BussinessDemand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool isvalid_;
  ::google::protobuf::int32 cmd_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsBussinessDemandImpl();
};
// -------------------------------------------------------------------

class Latcontrol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.Latcontrol) */ {
 public:
  Latcontrol();
  virtual ~Latcontrol();

  Latcontrol(const Latcontrol& from);

  inline Latcontrol& operator=(const Latcontrol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Latcontrol(Latcontrol&& from) noexcept
    : Latcontrol() {
    *this = ::std::move(from);
  }

  inline Latcontrol& operator=(Latcontrol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Latcontrol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Latcontrol* internal_default_instance() {
    return reinterpret_cast<const Latcontrol*>(
               &_Latcontrol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Latcontrol* other);
  friend void swap(Latcontrol& a, Latcontrol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Latcontrol* New() const PROTOBUF_FINAL { return New(NULL); }

  Latcontrol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Latcontrol& from);
  void MergeFrom(const Latcontrol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Latcontrol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float targetangle = 1;
  void clear_targetangle();
  static const int kTargetangleFieldNumber = 1;
  float targetangle() const;
  void set_targetangle(float value);

  // int32 targettorque = 2;
  void clear_targettorque();
  static const int kTargettorqueFieldNumber = 2;
  ::google::protobuf::int32 targettorque() const;
  void set_targettorque(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:control_msgs.Latcontrol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float targetangle_;
  ::google::protobuf::int32 targettorque_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsLatcontrolImpl();
};
// -------------------------------------------------------------------

class Loncontrol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.Loncontrol) */ {
 public:
  Loncontrol();
  virtual ~Loncontrol();

  Loncontrol(const Loncontrol& from);

  inline Loncontrol& operator=(const Loncontrol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Loncontrol(Loncontrol&& from) noexcept
    : Loncontrol() {
    *this = ::std::move(from);
  }

  inline Loncontrol& operator=(Loncontrol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Loncontrol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Loncontrol* internal_default_instance() {
    return reinterpret_cast<const Loncontrol*>(
               &_Loncontrol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Loncontrol* other);
  friend void swap(Loncontrol& a, Loncontrol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Loncontrol* New() const PROTOBUF_FINAL { return New(NULL); }

  Loncontrol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Loncontrol& from);
  void MergeFrom(const Loncontrol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Loncontrol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float targettorque = 1;
  void clear_targettorque();
  static const int kTargettorqueFieldNumber = 1;
  float targettorque() const;
  void set_targettorque(float value);

  // float targetpressure = 2;
  void clear_targetpressure();
  static const int kTargetpressureFieldNumber = 2;
  float targetpressure() const;
  void set_targetpressure(float value);

  // float pitch = 3;
  void clear_pitch();
  static const int kPitchFieldNumber = 3;
  float pitch() const;
  void set_pitch(float value);

  // float targetspeed = 4;
  void clear_targetspeed();
  static const int kTargetspeedFieldNumber = 4;
  float targetspeed() const;
  void set_targetspeed(float value);

  // float targetaccelation = 5;
  void clear_targetaccelation();
  static const int kTargetaccelationFieldNumber = 5;
  float targetaccelation() const;
  void set_targetaccelation(float value);

  // int32 actuatormode = 6;
  void clear_actuatormode();
  static const int kActuatormodeFieldNumber = 6;
  ::google::protobuf::int32 actuatormode() const;
  void set_actuatormode(::google::protobuf::int32 value);

  // int32 shiftposition = 7;
  void clear_shiftposition();
  static const int kShiftpositionFieldNumber = 7;
  ::google::protobuf::int32 shiftposition() const;
  void set_shiftposition(::google::protobuf::int32 value);

  // bool epbflag = 8;
  void clear_epbflag();
  static const int kEpbflagFieldNumber = 8;
  bool epbflag() const;
  void set_epbflag(bool value);

  // bool brakelight = 9;
  void clear_brakelight();
  static const int kBrakelightFieldNumber = 9;
  bool brakelight() const;
  void set_brakelight(bool value);

  // bool reverselight = 10;
  void clear_reverselight();
  static const int kReverselightFieldNumber = 10;
  bool reverselight() const;
  void set_reverselight(bool value);

  // bool slop_status = 12;
  void clear_slop_status();
  static const int kSlopStatusFieldNumber = 12;
  bool slop_status() const;
  void set_slop_status(bool value);

  // int32 emergency_obstacle = 11;
  void clear_emergency_obstacle();
  static const int kEmergencyObstacleFieldNumber = 11;
  ::google::protobuf::int32 emergency_obstacle() const;
  void set_emergency_obstacle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:control_msgs.Loncontrol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float targettorque_;
  float targetpressure_;
  float pitch_;
  float targetspeed_;
  float targetaccelation_;
  ::google::protobuf::int32 actuatormode_;
  ::google::protobuf::int32 shiftposition_;
  bool epbflag_;
  bool brakelight_;
  bool reverselight_;
  bool slop_status_;
  ::google::protobuf::int32 emergency_obstacle_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsLoncontrolImpl();
};
// -------------------------------------------------------------------

class SystemControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.SystemControl) */ {
 public:
  SystemControl();
  virtual ~SystemControl();

  SystemControl(const SystemControl& from);

  inline SystemControl& operator=(const SystemControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemControl(SystemControl&& from) noexcept
    : SystemControl() {
    *this = ::std::move(from);
  }

  inline SystemControl& operator=(SystemControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemControl* internal_default_instance() {
    return reinterpret_cast<const SystemControl*>(
               &_SystemControl_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SystemControl* other);
  friend void swap(SystemControl& a, SystemControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemControl* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemControl* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemControl& from);
  void MergeFrom(const SystemControl& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .control_msgs.Latcontrol latcontrol = 1;
  bool has_latcontrol() const;
  void clear_latcontrol();
  static const int kLatcontrolFieldNumber = 1;
  const ::control_msgs::Latcontrol& latcontrol() const;
  ::control_msgs::Latcontrol* release_latcontrol();
  ::control_msgs::Latcontrol* mutable_latcontrol();
  void set_allocated_latcontrol(::control_msgs::Latcontrol* latcontrol);

  // .control_msgs.Loncontrol loncontrol = 2;
  bool has_loncontrol() const;
  void clear_loncontrol();
  static const int kLoncontrolFieldNumber = 2;
  const ::control_msgs::Loncontrol& loncontrol() const;
  ::control_msgs::Loncontrol* release_loncontrol();
  ::control_msgs::Loncontrol* mutable_loncontrol();
  void set_allocated_loncontrol(::control_msgs::Loncontrol* loncontrol);

  // .control_msgs.BussinessDemand hmi_control = 3;
  bool has_hmi_control() const;
  void clear_hmi_control();
  static const int kHmiControlFieldNumber = 3;
  const ::control_msgs::BussinessDemand& hmi_control() const;
  ::control_msgs::BussinessDemand* release_hmi_control();
  ::control_msgs::BussinessDemand* mutable_hmi_control();
  void set_allocated_hmi_control(::control_msgs::BussinessDemand* hmi_control);

  // @@protoc_insertion_point(class_scope:control_msgs.SystemControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::control_msgs::Latcontrol* latcontrol_;
  ::control_msgs::Loncontrol* loncontrol_;
  ::control_msgs::BussinessDemand* hmi_control_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemControlImpl();
};
// -------------------------------------------------------------------

class SystemOverall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:control_msgs.SystemOverall) */ {
 public:
  SystemOverall();
  virtual ~SystemOverall();

  SystemOverall(const SystemOverall& from);

  inline SystemOverall& operator=(const SystemOverall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SystemOverall(SystemOverall&& from) noexcept
    : SystemOverall() {
    *this = ::std::move(from);
  }

  inline SystemOverall& operator=(SystemOverall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemOverall& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemOverall* internal_default_instance() {
    return reinterpret_cast<const SystemOverall*>(
               &_SystemOverall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SystemOverall* other);
  friend void swap(SystemOverall& a, SystemOverall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemOverall* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemOverall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemOverall& from);
  void MergeFrom(const SystemOverall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemOverall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::common_msgs::Header& header() const;
  ::common_msgs::Header* release_header();
  ::common_msgs::Header* mutable_header();
  void set_allocated_header(::common_msgs::Header* header);

  // .common_msgs.FaultVec fault_vec = 2;
  bool has_fault_vec() const;
  void clear_fault_vec();
  static const int kFaultVecFieldNumber = 2;
  const ::common_msgs::FaultVec& fault_vec() const;
  ::common_msgs::FaultVec* release_fault_vec();
  ::common_msgs::FaultVec* mutable_fault_vec();
  void set_allocated_fault_vec(::common_msgs::FaultVec* fault_vec);

  // .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
  bool has_vechle_perception() const;
  void clear_vechle_perception();
  static const int kVechlePerceptionFieldNumber = 3;
  const ::vehicle_perception_msgs::VehiclePerception& vechle_perception() const;
  ::vehicle_perception_msgs::VehiclePerception* release_vechle_perception();
  ::vehicle_perception_msgs::VehiclePerception* mutable_vechle_perception();
  void set_allocated_vechle_perception(::vehicle_perception_msgs::VehiclePerception* vechle_perception);

  // .planning_msgs.Trajectory motion_path = 4;
  bool has_motion_path() const;
  void clear_motion_path();
  static const int kMotionPathFieldNumber = 4;
  const ::planning_msgs::Trajectory& motion_path() const;
  ::planning_msgs::Trajectory* release_motion_path();
  ::planning_msgs::Trajectory* mutable_motion_path();
  void set_allocated_motion_path(::planning_msgs::Trajectory* motion_path);

  // .planning_msgs.Business business_feedback = 5;
  bool has_business_feedback() const;
  void clear_business_feedback();
  static const int kBusinessFeedbackFieldNumber = 5;
  const ::planning_msgs::Business& business_feedback() const;
  ::planning_msgs::Business* release_business_feedback();
  ::planning_msgs::Business* mutable_business_feedback();
  void set_allocated_business_feedback(::planning_msgs::Business* business_feedback);

  // .control_msgs.SystemControl system_control = 6;
  bool has_system_control() const;
  void clear_system_control();
  static const int kSystemControlFieldNumber = 6;
  const ::control_msgs::SystemControl& system_control() const;
  ::control_msgs::SystemControl* release_system_control();
  ::control_msgs::SystemControl* mutable_system_control();
  void set_allocated_system_control(::control_msgs::SystemControl* system_control);

  // @@protoc_insertion_point(class_scope:control_msgs.SystemOverall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::Header* header_;
  ::common_msgs::FaultVec* fault_vec_;
  ::vehicle_perception_msgs::VehiclePerception* vechle_perception_;
  ::planning_msgs::Trajectory* motion_path_;
  ::planning_msgs::Business* business_feedback_;
  ::control_msgs::SystemControl* system_control_;
  mutable int _cached_size_;
  friend struct ::protobuf_control_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_control_5fmsgs_2eproto::InitDefaultsSystemOverallImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Cell

// uint32 idc = 1;
inline void Cell::clear_idc() {
  idc_ = 0u;
}
inline ::google::protobuf::uint32 Cell::idc() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.idc)
  return idc_;
}
inline void Cell::set_idc(::google::protobuf::uint32 value) {
  
  idc_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.idc)
}

// uint32 type = 2;
inline void Cell::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Cell::type() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.type)
  return type_;
}
inline void Cell::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.type)
}

// float x = 3;
inline void Cell::clear_x() {
  x_ = 0;
}
inline float Cell::x() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.x)
  return x_;
}
inline void Cell::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.x)
}

// float y = 4;
inline void Cell::clear_y() {
  y_ = 0;
}
inline float Cell::y() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.y)
  return y_;
}
inline void Cell::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.y)
}

// float xg = 5;
inline void Cell::clear_xg() {
  xg_ = 0;
}
inline float Cell::xg() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.xg)
  return xg_;
}
inline void Cell::set_xg(float value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.xg)
}

// float yg = 6;
inline void Cell::clear_yg() {
  yg_ = 0;
}
inline float Cell::yg() const {
  // @@protoc_insertion_point(field_get:control_msgs.Cell.yg)
  return yg_;
}
inline void Cell::set_yg(float value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Cell.yg)
}

// -------------------------------------------------------------------

// Object

// uint32 id = 1;
inline void Object::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Object::id() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.id)
  return id_;
}
inline void Object::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.id)
}

// float x = 2;
inline void Object::clear_x() {
  x_ = 0;
}
inline float Object::x() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.x)
  return x_;
}
inline void Object::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.x)
}

// float y = 3;
inline void Object::clear_y() {
  y_ = 0;
}
inline float Object::y() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.y)
  return y_;
}
inline void Object::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.y)
}

// float vxrel = 4;
inline void Object::clear_vxrel() {
  vxrel_ = 0;
}
inline float Object::vxrel() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.vxrel)
  return vxrel_;
}
inline void Object::set_vxrel(float value) {
  
  vxrel_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.vxrel)
}

// float vyrel = 5;
inline void Object::clear_vyrel() {
  vyrel_ = 0;
}
inline float Object::vyrel() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.vyrel)
  return vyrel_;
}
inline void Object::set_vyrel(float value) {
  
  vyrel_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.vyrel)
}

// float vxabs = 6;
inline void Object::clear_vxabs() {
  vxabs_ = 0;
}
inline float Object::vxabs() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.vxabs)
  return vxabs_;
}
inline void Object::set_vxabs(float value) {
  
  vxabs_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.vxabs)
}

// float vyabs = 7;
inline void Object::clear_vyabs() {
  vyabs_ = 0;
}
inline float Object::vyabs() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.vyabs)
  return vyabs_;
}
inline void Object::set_vyabs(float value) {
  
  vyabs_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.vyabs)
}

// float acceleration = 8;
inline void Object::clear_acceleration() {
  acceleration_ = 0;
}
inline float Object::acceleration() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.acceleration)
  return acceleration_;
}
inline void Object::set_acceleration(float value) {
  
  acceleration_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.acceleration)
}

// float width = 9;
inline void Object::clear_width() {
  width_ = 0;
}
inline float Object::width() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.width)
  return width_;
}
inline void Object::set_width(float value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.width)
}

// float length = 10;
inline void Object::clear_length() {
  length_ = 0;
}
inline float Object::length() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.length)
  return length_;
}
inline void Object::set_length(float value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.length)
}

// float heading = 11;
inline void Object::clear_heading() {
  heading_ = 0;
}
inline float Object::heading() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.heading)
  return heading_;
}
inline void Object::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.heading)
}

// float speed = 12;
inline void Object::clear_speed() {
  speed_ = 0;
}
inline float Object::speed() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.speed)
  return speed_;
}
inline void Object::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.speed)
}

// uint32 type = 13;
inline void Object::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 Object::type() const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.type)
  return type_;
}
inline void Object::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Object.type)
}

// repeated .control_msgs.Cell cells = 14;
inline int Object::cells_size() const {
  return cells_.size();
}
inline void Object::clear_cells() {
  cells_.Clear();
}
inline const ::control_msgs::Cell& Object::cells(int index) const {
  // @@protoc_insertion_point(field_get:control_msgs.Object.cells)
  return cells_.Get(index);
}
inline ::control_msgs::Cell* Object::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:control_msgs.Object.cells)
  return cells_.Mutable(index);
}
inline ::control_msgs::Cell* Object::add_cells() {
  // @@protoc_insertion_point(field_add:control_msgs.Object.cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >*
Object::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:control_msgs.Object.cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >&
Object::cells() const {
  // @@protoc_insertion_point(field_list:control_msgs.Object.cells)
  return cells_;
}

// -------------------------------------------------------------------

// Obstacles

// repeated .control_msgs.Object objects = 1;
inline int Obstacles::objects_size() const {
  return objects_.size();
}
inline void Obstacles::clear_objects() {
  objects_.Clear();
}
inline const ::control_msgs::Object& Obstacles::objects(int index) const {
  // @@protoc_insertion_point(field_get:control_msgs.Obstacles.objects)
  return objects_.Get(index);
}
inline ::control_msgs::Object* Obstacles::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:control_msgs.Obstacles.objects)
  return objects_.Mutable(index);
}
inline ::control_msgs::Object* Obstacles::add_objects() {
  // @@protoc_insertion_point(field_add:control_msgs.Obstacles.objects)
  return objects_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::control_msgs::Object >*
Obstacles::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:control_msgs.Obstacles.objects)
  return &objects_;
}
inline const ::google::protobuf::RepeatedPtrField< ::control_msgs::Object >&
Obstacles::objects() const {
  // @@protoc_insertion_point(field_list:control_msgs.Obstacles.objects)
  return objects_;
}

// repeated .control_msgs.Cell Cells = 2;
inline int Obstacles::cells_size() const {
  return cells_.size();
}
inline void Obstacles::clear_cells() {
  cells_.Clear();
}
inline const ::control_msgs::Cell& Obstacles::cells(int index) const {
  // @@protoc_insertion_point(field_get:control_msgs.Obstacles.Cells)
  return cells_.Get(index);
}
inline ::control_msgs::Cell* Obstacles::mutable_cells(int index) {
  // @@protoc_insertion_point(field_mutable:control_msgs.Obstacles.Cells)
  return cells_.Mutable(index);
}
inline ::control_msgs::Cell* Obstacles::add_cells() {
  // @@protoc_insertion_point(field_add:control_msgs.Obstacles.Cells)
  return cells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >*
Obstacles::mutable_cells() {
  // @@protoc_insertion_point(field_mutable_list:control_msgs.Obstacles.Cells)
  return &cells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::control_msgs::Cell >&
Obstacles::cells() const {
  // @@protoc_insertion_point(field_list:control_msgs.Obstacles.Cells)
  return cells_;
}

// -------------------------------------------------------------------

// VehicleInfo

// float steerangle = 1;
inline void VehicleInfo::clear_steerangle() {
  steerangle_ = 0;
}
inline float VehicleInfo::steerangle() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.steerangle)
  return steerangle_;
}
inline void VehicleInfo::set_steerangle(float value) {
  
  steerangle_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.steerangle)
}

// float speed = 2;
inline void VehicleInfo::clear_speed() {
  speed_ = 0;
}
inline float VehicleInfo::speed() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.speed)
  return speed_;
}
inline void VehicleInfo::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.speed)
}

// float vehicle_accel = 3;
inline void VehicleInfo::clear_vehicle_accel() {
  vehicle_accel_ = 0;
}
inline float VehicleInfo::vehicle_accel() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.vehicle_accel)
  return vehicle_accel_;
}
inline void VehicleInfo::set_vehicle_accel(float value) {
  
  vehicle_accel_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.vehicle_accel)
}

// float brake_pressure = 4;
inline void VehicleInfo::clear_brake_pressure() {
  brake_pressure_ = 0;
}
inline float VehicleInfo::brake_pressure() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.brake_pressure)
  return brake_pressure_;
}
inline void VehicleInfo::set_brake_pressure(float value) {
  
  brake_pressure_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.brake_pressure)
}

// int32 shift_position = 5;
inline void VehicleInfo::clear_shift_position() {
  shift_position_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::shift_position() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.shift_position)
  return shift_position_;
}
inline void VehicleInfo::set_shift_position(::google::protobuf::int32 value) {
  
  shift_position_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.shift_position)
}

// int32 epb_status = 6;
inline void VehicleInfo::clear_epb_status() {
  epb_status_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::epb_status() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.epb_status)
  return epb_status_;
}
inline void VehicleInfo::set_epb_status(::google::protobuf::int32 value) {
  
  epb_status_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.epb_status)
}

// int32 current_drive_mode = 7;
inline void VehicleInfo::clear_current_drive_mode() {
  current_drive_mode_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::current_drive_mode() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.current_drive_mode)
  return current_drive_mode_;
}
inline void VehicleInfo::set_current_drive_mode(::google::protobuf::int32 value) {
  
  current_drive_mode_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.current_drive_mode)
}

// int32 sys_state = 8;
inline void VehicleInfo::clear_sys_state() {
  sys_state_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::sys_state() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.sys_state)
  return sys_state_;
}
inline void VehicleInfo::set_sys_state(::google::protobuf::int32 value) {
  
  sys_state_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.sys_state)
}

// bool vehicle_auto_enable = 9;
inline void VehicleInfo::clear_vehicle_auto_enable() {
  vehicle_auto_enable_ = false;
}
inline bool VehicleInfo::vehicle_auto_enable() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.vehicle_auto_enable)
  return vehicle_auto_enable_;
}
inline void VehicleInfo::set_vehicle_auto_enable(bool value) {
  
  vehicle_auto_enable_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.vehicle_auto_enable)
}

// bool vehicle_lat_enable = 10;
inline void VehicleInfo::clear_vehicle_lat_enable() {
  vehicle_lat_enable_ = false;
}
inline bool VehicleInfo::vehicle_lat_enable() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.vehicle_lat_enable)
  return vehicle_lat_enable_;
}
inline void VehicleInfo::set_vehicle_lat_enable(bool value) {
  
  vehicle_lat_enable_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.vehicle_lat_enable)
}

// bool vehicle_lon_enable = 11;
inline void VehicleInfo::clear_vehicle_lon_enable() {
  vehicle_lon_enable_ = false;
}
inline bool VehicleInfo::vehicle_lon_enable() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.vehicle_lon_enable)
  return vehicle_lon_enable_;
}
inline void VehicleInfo::set_vehicle_lon_enable(bool value) {
  
  vehicle_lon_enable_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.vehicle_lon_enable)
}

// bool vehicle_epb_status = 12;
inline void VehicleInfo::clear_vehicle_epb_status() {
  vehicle_epb_status_ = false;
}
inline bool VehicleInfo::vehicle_epb_status() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.vehicle_epb_status)
  return vehicle_epb_status_;
}
inline void VehicleInfo::set_vehicle_epb_status(bool value) {
  
  vehicle_epb_status_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.vehicle_epb_status)
}

// int32 on_accpedal = 13;
inline void VehicleInfo::clear_on_accpedal() {
  on_accpedal_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::on_accpedal() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.on_accpedal)
  return on_accpedal_;
}
inline void VehicleInfo::set_on_accpedal(::google::protobuf::int32 value) {
  
  on_accpedal_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.on_accpedal)
}

// bool steer_left_down = 14;
inline void VehicleInfo::clear_steer_left_down() {
  steer_left_down_ = false;
}
inline bool VehicleInfo::steer_left_down() const {
  // @@protoc_insertion_point(field_get:control_msgs.VehicleInfo.steer_left_down)
  return steer_left_down_;
}
inline void VehicleInfo::set_steer_left_down(bool value) {
  
  steer_left_down_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.VehicleInfo.steer_left_down)
}

// -------------------------------------------------------------------

// ControlFeedback

// .common_msgs.Header header = 1;
inline bool ControlFeedback::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::common_msgs::Header& ControlFeedback::header() const {
  const ::common_msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:control_msgs.ControlFeedback.header)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Header*>(
      &::common_msgs::_Header_default_instance_);
}
inline ::common_msgs::Header* ControlFeedback::release_header() {
  // @@protoc_insertion_point(field_release:control_msgs.ControlFeedback.header)
  
  ::common_msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::common_msgs::Header* ControlFeedback::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::common_msgs::Header;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.ControlFeedback.header)
  return header_;
}
inline void ControlFeedback::set_allocated_header(::common_msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.ControlFeedback.header)
}

// .control_msgs.VehicleInfo vehicle_info = 2;
inline bool ControlFeedback::has_vehicle_info() const {
  return this != internal_default_instance() && vehicle_info_ != NULL;
}
inline void ControlFeedback::clear_vehicle_info() {
  if (GetArenaNoVirtual() == NULL && vehicle_info_ != NULL) {
    delete vehicle_info_;
  }
  vehicle_info_ = NULL;
}
inline const ::control_msgs::VehicleInfo& ControlFeedback::vehicle_info() const {
  const ::control_msgs::VehicleInfo* p = vehicle_info_;
  // @@protoc_insertion_point(field_get:control_msgs.ControlFeedback.vehicle_info)
  return p != NULL ? *p : *reinterpret_cast<const ::control_msgs::VehicleInfo*>(
      &::control_msgs::_VehicleInfo_default_instance_);
}
inline ::control_msgs::VehicleInfo* ControlFeedback::release_vehicle_info() {
  // @@protoc_insertion_point(field_release:control_msgs.ControlFeedback.vehicle_info)
  
  ::control_msgs::VehicleInfo* temp = vehicle_info_;
  vehicle_info_ = NULL;
  return temp;
}
inline ::control_msgs::VehicleInfo* ControlFeedback::mutable_vehicle_info() {
  
  if (vehicle_info_ == NULL) {
    vehicle_info_ = new ::control_msgs::VehicleInfo;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.ControlFeedback.vehicle_info)
  return vehicle_info_;
}
inline void ControlFeedback::set_allocated_vehicle_info(::control_msgs::VehicleInfo* vehicle_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicle_info_;
  }
  if (vehicle_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicle_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_info, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_info_ = vehicle_info;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.ControlFeedback.vehicle_info)
}

// int32 brake_state = 3;
inline void ControlFeedback::clear_brake_state() {
  brake_state_ = 0;
}
inline ::google::protobuf::int32 ControlFeedback::brake_state() const {
  // @@protoc_insertion_point(field_get:control_msgs.ControlFeedback.brake_state)
  return brake_state_;
}
inline void ControlFeedback::set_brake_state(::google::protobuf::int32 value) {
  
  brake_state_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.ControlFeedback.brake_state)
}

// -------------------------------------------------------------------

// BussinessDemand

// bool isvalid = 1;
inline void BussinessDemand::clear_isvalid() {
  isvalid_ = false;
}
inline bool BussinessDemand::isvalid() const {
  // @@protoc_insertion_point(field_get:control_msgs.BussinessDemand.isvalid)
  return isvalid_;
}
inline void BussinessDemand::set_isvalid(bool value) {
  
  isvalid_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.BussinessDemand.isvalid)
}

// int32 cmd = 2;
inline void BussinessDemand::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 BussinessDemand::cmd() const {
  // @@protoc_insertion_point(field_get:control_msgs.BussinessDemand.cmd)
  return cmd_;
}
inline void BussinessDemand::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.BussinessDemand.cmd)
}

// -------------------------------------------------------------------

// Latcontrol

// float targetangle = 1;
inline void Latcontrol::clear_targetangle() {
  targetangle_ = 0;
}
inline float Latcontrol::targetangle() const {
  // @@protoc_insertion_point(field_get:control_msgs.Latcontrol.targetangle)
  return targetangle_;
}
inline void Latcontrol::set_targetangle(float value) {
  
  targetangle_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Latcontrol.targetangle)
}

// int32 targettorque = 2;
inline void Latcontrol::clear_targettorque() {
  targettorque_ = 0;
}
inline ::google::protobuf::int32 Latcontrol::targettorque() const {
  // @@protoc_insertion_point(field_get:control_msgs.Latcontrol.targettorque)
  return targettorque_;
}
inline void Latcontrol::set_targettorque(::google::protobuf::int32 value) {
  
  targettorque_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Latcontrol.targettorque)
}

// -------------------------------------------------------------------

// Loncontrol

// float targettorque = 1;
inline void Loncontrol::clear_targettorque() {
  targettorque_ = 0;
}
inline float Loncontrol::targettorque() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.targettorque)
  return targettorque_;
}
inline void Loncontrol::set_targettorque(float value) {
  
  targettorque_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.targettorque)
}

// float targetpressure = 2;
inline void Loncontrol::clear_targetpressure() {
  targetpressure_ = 0;
}
inline float Loncontrol::targetpressure() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.targetpressure)
  return targetpressure_;
}
inline void Loncontrol::set_targetpressure(float value) {
  
  targetpressure_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.targetpressure)
}

// float pitch = 3;
inline void Loncontrol::clear_pitch() {
  pitch_ = 0;
}
inline float Loncontrol::pitch() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.pitch)
  return pitch_;
}
inline void Loncontrol::set_pitch(float value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.pitch)
}

// float targetspeed = 4;
inline void Loncontrol::clear_targetspeed() {
  targetspeed_ = 0;
}
inline float Loncontrol::targetspeed() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.targetspeed)
  return targetspeed_;
}
inline void Loncontrol::set_targetspeed(float value) {
  
  targetspeed_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.targetspeed)
}

// float targetaccelation = 5;
inline void Loncontrol::clear_targetaccelation() {
  targetaccelation_ = 0;
}
inline float Loncontrol::targetaccelation() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.targetaccelation)
  return targetaccelation_;
}
inline void Loncontrol::set_targetaccelation(float value) {
  
  targetaccelation_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.targetaccelation)
}

// int32 actuatormode = 6;
inline void Loncontrol::clear_actuatormode() {
  actuatormode_ = 0;
}
inline ::google::protobuf::int32 Loncontrol::actuatormode() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.actuatormode)
  return actuatormode_;
}
inline void Loncontrol::set_actuatormode(::google::protobuf::int32 value) {
  
  actuatormode_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.actuatormode)
}

// int32 shiftposition = 7;
inline void Loncontrol::clear_shiftposition() {
  shiftposition_ = 0;
}
inline ::google::protobuf::int32 Loncontrol::shiftposition() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.shiftposition)
  return shiftposition_;
}
inline void Loncontrol::set_shiftposition(::google::protobuf::int32 value) {
  
  shiftposition_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.shiftposition)
}

// bool epbflag = 8;
inline void Loncontrol::clear_epbflag() {
  epbflag_ = false;
}
inline bool Loncontrol::epbflag() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.epbflag)
  return epbflag_;
}
inline void Loncontrol::set_epbflag(bool value) {
  
  epbflag_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.epbflag)
}

// bool brakelight = 9;
inline void Loncontrol::clear_brakelight() {
  brakelight_ = false;
}
inline bool Loncontrol::brakelight() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.brakelight)
  return brakelight_;
}
inline void Loncontrol::set_brakelight(bool value) {
  
  brakelight_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.brakelight)
}

// bool reverselight = 10;
inline void Loncontrol::clear_reverselight() {
  reverselight_ = false;
}
inline bool Loncontrol::reverselight() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.reverselight)
  return reverselight_;
}
inline void Loncontrol::set_reverselight(bool value) {
  
  reverselight_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.reverselight)
}

// int32 emergency_obstacle = 11;
inline void Loncontrol::clear_emergency_obstacle() {
  emergency_obstacle_ = 0;
}
inline ::google::protobuf::int32 Loncontrol::emergency_obstacle() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.emergency_obstacle)
  return emergency_obstacle_;
}
inline void Loncontrol::set_emergency_obstacle(::google::protobuf::int32 value) {
  
  emergency_obstacle_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.emergency_obstacle)
}

// bool slop_status = 12;
inline void Loncontrol::clear_slop_status() {
  slop_status_ = false;
}
inline bool Loncontrol::slop_status() const {
  // @@protoc_insertion_point(field_get:control_msgs.Loncontrol.slop_status)
  return slop_status_;
}
inline void Loncontrol::set_slop_status(bool value) {
  
  slop_status_ = value;
  // @@protoc_insertion_point(field_set:control_msgs.Loncontrol.slop_status)
}

// -------------------------------------------------------------------

// SystemControl

// .control_msgs.Latcontrol latcontrol = 1;
inline bool SystemControl::has_latcontrol() const {
  return this != internal_default_instance() && latcontrol_ != NULL;
}
inline void SystemControl::clear_latcontrol() {
  if (GetArenaNoVirtual() == NULL && latcontrol_ != NULL) {
    delete latcontrol_;
  }
  latcontrol_ = NULL;
}
inline const ::control_msgs::Latcontrol& SystemControl::latcontrol() const {
  const ::control_msgs::Latcontrol* p = latcontrol_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemControl.latcontrol)
  return p != NULL ? *p : *reinterpret_cast<const ::control_msgs::Latcontrol*>(
      &::control_msgs::_Latcontrol_default_instance_);
}
inline ::control_msgs::Latcontrol* SystemControl::release_latcontrol() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemControl.latcontrol)
  
  ::control_msgs::Latcontrol* temp = latcontrol_;
  latcontrol_ = NULL;
  return temp;
}
inline ::control_msgs::Latcontrol* SystemControl::mutable_latcontrol() {
  
  if (latcontrol_ == NULL) {
    latcontrol_ = new ::control_msgs::Latcontrol;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemControl.latcontrol)
  return latcontrol_;
}
inline void SystemControl::set_allocated_latcontrol(::control_msgs::Latcontrol* latcontrol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete latcontrol_;
  }
  if (latcontrol) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      latcontrol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, latcontrol, submessage_arena);
    }
    
  } else {
    
  }
  latcontrol_ = latcontrol;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemControl.latcontrol)
}

// .control_msgs.Loncontrol loncontrol = 2;
inline bool SystemControl::has_loncontrol() const {
  return this != internal_default_instance() && loncontrol_ != NULL;
}
inline void SystemControl::clear_loncontrol() {
  if (GetArenaNoVirtual() == NULL && loncontrol_ != NULL) {
    delete loncontrol_;
  }
  loncontrol_ = NULL;
}
inline const ::control_msgs::Loncontrol& SystemControl::loncontrol() const {
  const ::control_msgs::Loncontrol* p = loncontrol_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemControl.loncontrol)
  return p != NULL ? *p : *reinterpret_cast<const ::control_msgs::Loncontrol*>(
      &::control_msgs::_Loncontrol_default_instance_);
}
inline ::control_msgs::Loncontrol* SystemControl::release_loncontrol() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemControl.loncontrol)
  
  ::control_msgs::Loncontrol* temp = loncontrol_;
  loncontrol_ = NULL;
  return temp;
}
inline ::control_msgs::Loncontrol* SystemControl::mutable_loncontrol() {
  
  if (loncontrol_ == NULL) {
    loncontrol_ = new ::control_msgs::Loncontrol;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemControl.loncontrol)
  return loncontrol_;
}
inline void SystemControl::set_allocated_loncontrol(::control_msgs::Loncontrol* loncontrol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete loncontrol_;
  }
  if (loncontrol) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loncontrol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loncontrol, submessage_arena);
    }
    
  } else {
    
  }
  loncontrol_ = loncontrol;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemControl.loncontrol)
}

// .control_msgs.BussinessDemand hmi_control = 3;
inline bool SystemControl::has_hmi_control() const {
  return this != internal_default_instance() && hmi_control_ != NULL;
}
inline void SystemControl::clear_hmi_control() {
  if (GetArenaNoVirtual() == NULL && hmi_control_ != NULL) {
    delete hmi_control_;
  }
  hmi_control_ = NULL;
}
inline const ::control_msgs::BussinessDemand& SystemControl::hmi_control() const {
  const ::control_msgs::BussinessDemand* p = hmi_control_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemControl.hmi_control)
  return p != NULL ? *p : *reinterpret_cast<const ::control_msgs::BussinessDemand*>(
      &::control_msgs::_BussinessDemand_default_instance_);
}
inline ::control_msgs::BussinessDemand* SystemControl::release_hmi_control() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemControl.hmi_control)
  
  ::control_msgs::BussinessDemand* temp = hmi_control_;
  hmi_control_ = NULL;
  return temp;
}
inline ::control_msgs::BussinessDemand* SystemControl::mutable_hmi_control() {
  
  if (hmi_control_ == NULL) {
    hmi_control_ = new ::control_msgs::BussinessDemand;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemControl.hmi_control)
  return hmi_control_;
}
inline void SystemControl::set_allocated_hmi_control(::control_msgs::BussinessDemand* hmi_control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hmi_control_;
  }
  if (hmi_control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hmi_control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hmi_control, submessage_arena);
    }
    
  } else {
    
  }
  hmi_control_ = hmi_control;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemControl.hmi_control)
}

// -------------------------------------------------------------------

// SystemOverall

// .common_msgs.Header header = 1;
inline bool SystemOverall::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::common_msgs::Header& SystemOverall::header() const {
  const ::common_msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.header)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Header*>(
      &::common_msgs::_Header_default_instance_);
}
inline ::common_msgs::Header* SystemOverall::release_header() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.header)
  
  ::common_msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::common_msgs::Header* SystemOverall::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::common_msgs::Header;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.header)
  return header_;
}
inline void SystemOverall::set_allocated_header(::common_msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.header)
}

// .common_msgs.FaultVec fault_vec = 2;
inline bool SystemOverall::has_fault_vec() const {
  return this != internal_default_instance() && fault_vec_ != NULL;
}
inline const ::common_msgs::FaultVec& SystemOverall::fault_vec() const {
  const ::common_msgs::FaultVec* p = fault_vec_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.fault_vec)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::FaultVec*>(
      &::common_msgs::_FaultVec_default_instance_);
}
inline ::common_msgs::FaultVec* SystemOverall::release_fault_vec() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.fault_vec)
  
  ::common_msgs::FaultVec* temp = fault_vec_;
  fault_vec_ = NULL;
  return temp;
}
inline ::common_msgs::FaultVec* SystemOverall::mutable_fault_vec() {
  
  if (fault_vec_ == NULL) {
    fault_vec_ = new ::common_msgs::FaultVec;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.fault_vec)
  return fault_vec_;
}
inline void SystemOverall::set_allocated_fault_vec(::common_msgs::FaultVec* fault_vec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fault_vec_);
  }
  if (fault_vec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fault_vec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fault_vec, submessage_arena);
    }
    
  } else {
    
  }
  fault_vec_ = fault_vec;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.fault_vec)
}

// .vehicle_perception_msgs.VehiclePerception vechle_perception = 3;
inline bool SystemOverall::has_vechle_perception() const {
  return this != internal_default_instance() && vechle_perception_ != NULL;
}
inline const ::vehicle_perception_msgs::VehiclePerception& SystemOverall::vechle_perception() const {
  const ::vehicle_perception_msgs::VehiclePerception* p = vechle_perception_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.vechle_perception)
  return p != NULL ? *p : *reinterpret_cast<const ::vehicle_perception_msgs::VehiclePerception*>(
      &::vehicle_perception_msgs::_VehiclePerception_default_instance_);
}
inline ::vehicle_perception_msgs::VehiclePerception* SystemOverall::release_vechle_perception() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.vechle_perception)
  
  ::vehicle_perception_msgs::VehiclePerception* temp = vechle_perception_;
  vechle_perception_ = NULL;
  return temp;
}
inline ::vehicle_perception_msgs::VehiclePerception* SystemOverall::mutable_vechle_perception() {
  
  if (vechle_perception_ == NULL) {
    vechle_perception_ = new ::vehicle_perception_msgs::VehiclePerception;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.vechle_perception)
  return vechle_perception_;
}
inline void SystemOverall::set_allocated_vechle_perception(::vehicle_perception_msgs::VehiclePerception* vechle_perception) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vechle_perception_);
  }
  if (vechle_perception) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vechle_perception = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vechle_perception, submessage_arena);
    }
    
  } else {
    
  }
  vechle_perception_ = vechle_perception;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.vechle_perception)
}

// .planning_msgs.Trajectory motion_path = 4;
inline bool SystemOverall::has_motion_path() const {
  return this != internal_default_instance() && motion_path_ != NULL;
}
inline const ::planning_msgs::Trajectory& SystemOverall::motion_path() const {
  const ::planning_msgs::Trajectory* p = motion_path_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.motion_path)
  return p != NULL ? *p : *reinterpret_cast<const ::planning_msgs::Trajectory*>(
      &::planning_msgs::_Trajectory_default_instance_);
}
inline ::planning_msgs::Trajectory* SystemOverall::release_motion_path() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.motion_path)
  
  ::planning_msgs::Trajectory* temp = motion_path_;
  motion_path_ = NULL;
  return temp;
}
inline ::planning_msgs::Trajectory* SystemOverall::mutable_motion_path() {
  
  if (motion_path_ == NULL) {
    motion_path_ = new ::planning_msgs::Trajectory;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.motion_path)
  return motion_path_;
}
inline void SystemOverall::set_allocated_motion_path(::planning_msgs::Trajectory* motion_path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(motion_path_);
  }
  if (motion_path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motion_path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motion_path, submessage_arena);
    }
    
  } else {
    
  }
  motion_path_ = motion_path;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.motion_path)
}

// .planning_msgs.Business business_feedback = 5;
inline bool SystemOverall::has_business_feedback() const {
  return this != internal_default_instance() && business_feedback_ != NULL;
}
inline const ::planning_msgs::Business& SystemOverall::business_feedback() const {
  const ::planning_msgs::Business* p = business_feedback_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.business_feedback)
  return p != NULL ? *p : *reinterpret_cast<const ::planning_msgs::Business*>(
      &::planning_msgs::_Business_default_instance_);
}
inline ::planning_msgs::Business* SystemOverall::release_business_feedback() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.business_feedback)
  
  ::planning_msgs::Business* temp = business_feedback_;
  business_feedback_ = NULL;
  return temp;
}
inline ::planning_msgs::Business* SystemOverall::mutable_business_feedback() {
  
  if (business_feedback_ == NULL) {
    business_feedback_ = new ::planning_msgs::Business;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.business_feedback)
  return business_feedback_;
}
inline void SystemOverall::set_allocated_business_feedback(::planning_msgs::Business* business_feedback) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(business_feedback_);
  }
  if (business_feedback) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      business_feedback = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, business_feedback, submessage_arena);
    }
    
  } else {
    
  }
  business_feedback_ = business_feedback;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.business_feedback)
}

// .control_msgs.SystemControl system_control = 6;
inline bool SystemOverall::has_system_control() const {
  return this != internal_default_instance() && system_control_ != NULL;
}
inline void SystemOverall::clear_system_control() {
  if (GetArenaNoVirtual() == NULL && system_control_ != NULL) {
    delete system_control_;
  }
  system_control_ = NULL;
}
inline const ::control_msgs::SystemControl& SystemOverall::system_control() const {
  const ::control_msgs::SystemControl* p = system_control_;
  // @@protoc_insertion_point(field_get:control_msgs.SystemOverall.system_control)
  return p != NULL ? *p : *reinterpret_cast<const ::control_msgs::SystemControl*>(
      &::control_msgs::_SystemControl_default_instance_);
}
inline ::control_msgs::SystemControl* SystemOverall::release_system_control() {
  // @@protoc_insertion_point(field_release:control_msgs.SystemOverall.system_control)
  
  ::control_msgs::SystemControl* temp = system_control_;
  system_control_ = NULL;
  return temp;
}
inline ::control_msgs::SystemControl* SystemOverall::mutable_system_control() {
  
  if (system_control_ == NULL) {
    system_control_ = new ::control_msgs::SystemControl;
  }
  // @@protoc_insertion_point(field_mutable:control_msgs.SystemOverall.system_control)
  return system_control_;
}
inline void SystemOverall::set_allocated_system_control(::control_msgs::SystemControl* system_control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete system_control_;
  }
  if (system_control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_control, submessage_arena);
    }
    
  } else {
    
  }
  system_control_ = system_control;
  // @@protoc_insertion_point(field_set_allocated:control_msgs.SystemOverall.system_control)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace control_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_control_5fmsgs_2eproto__INCLUDED
