// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Business.proto

#ifndef PROTOBUF_Business_2eproto__INCLUDED
#define PROTOBUF_Business_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Business_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHeaderImpl();
void InitDefaultsHeader();
void InitDefaultsLocPosImpl();
void InitDefaultsLocPos();
void InitDefaultsBusinessStatusImpl();
void InitDefaultsBusinessStatus();
void InitDefaultsBusinessCmdImpl();
void InitDefaultsBusinessCmd();
inline void InitDefaults() {
  InitDefaultsHeader();
  InitDefaultsLocPos();
  InitDefaultsBusinessStatus();
  InitDefaultsBusinessCmd();
}
}  // namespace protobuf_Business_2eproto
namespace business {
namespace proto {
class BusinessCmd;
class BusinessCmdDefaultTypeInternal;
extern BusinessCmdDefaultTypeInternal _BusinessCmd_default_instance_;
class BusinessStatus;
class BusinessStatusDefaultTypeInternal;
extern BusinessStatusDefaultTypeInternal _BusinessStatus_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class LocPos;
class LocPosDefaultTypeInternal;
extern LocPosDefaultTypeInternal _LocPos_default_instance_;
}  // namespace proto
}  // namespace business
namespace business {
namespace proto {

// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:business.proto.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const PROTOBUF_FINAL { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string module_name = 2;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 2;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_module_name(::std::string&& value);
  #endif
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // string version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // double timestamp_sec = 1;
  void clear_timestamp_sec();
  static const int kTimestampSecFieldNumber = 1;
  double timestamp_sec() const;
  void set_timestamp_sec(double value);

  // uint32 sequence_num = 3;
  void clear_sequence_num();
  static const int kSequenceNumFieldNumber = 3;
  ::google::protobuf::uint32 sequence_num() const;
  void set_sequence_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:business.proto.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  double timestamp_sec_;
  ::google::protobuf::uint32 sequence_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_Business_2eproto::TableStruct;
  friend void ::protobuf_Business_2eproto::InitDefaultsHeaderImpl();
};
// -------------------------------------------------------------------

class LocPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:business.proto.LocPos) */ {
 public:
  LocPos();
  virtual ~LocPos();

  LocPos(const LocPos& from);

  inline LocPos& operator=(const LocPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocPos(LocPos&& from) noexcept
    : LocPos() {
    *this = ::std::move(from);
  }

  inline LocPos& operator=(LocPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocPos* internal_default_instance() {
    return reinterpret_cast<const LocPos*>(
               &_LocPos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LocPos* other);
  friend void swap(LocPos& a, LocPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocPos* New() const PROTOBUF_FINAL { return New(NULL); }

  LocPos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocPos& from);
  void MergeFrom(const LocPos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double xg = 1;
  void clear_xg();
  static const int kXgFieldNumber = 1;
  double xg() const;
  void set_xg(double value);

  // double yg = 2;
  void clear_yg();
  static const int kYgFieldNumber = 2;
  double yg() const;
  void set_yg(double value);

  // double lat = 3;
  void clear_lat();
  static const int kLatFieldNumber = 3;
  double lat() const;
  void set_lat(double value);

  // double lon = 4;
  void clear_lon();
  static const int kLonFieldNumber = 4;
  double lon() const;
  void set_lon(double value);

  // float v = 5;
  void clear_v();
  static const int kVFieldNumber = 5;
  float v() const;
  void set_v(float value);

  // float height = 6;
  void clear_height();
  static const int kHeightFieldNumber = 6;
  float height() const;
  void set_height(float value);

  // float heading = 7;
  void clear_heading();
  static const int kHeadingFieldNumber = 7;
  float heading() const;
  void set_heading(float value);

  // int32 loc_fault_level = 8;
  void clear_loc_fault_level();
  static const int kLocFaultLevelFieldNumber = 8;
  ::google::protobuf::int32 loc_fault_level() const;
  void set_loc_fault_level(::google::protobuf::int32 value);

  // int32 loc_status = 9;
  void clear_loc_status();
  static const int kLocStatusFieldNumber = 9;
  ::google::protobuf::int32 loc_status() const;
  void set_loc_status(::google::protobuf::int32 value);

  // int32 gps_status = 10;
  void clear_gps_status();
  static const int kGpsStatusFieldNumber = 10;
  ::google::protobuf::int32 gps_status() const;
  void set_gps_status(::google::protobuf::int32 value);

  // float time_stamp = 11;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 11;
  float time_stamp() const;
  void set_time_stamp(float value);

  // @@protoc_insertion_point(class_scope:business.proto.LocPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double xg_;
  double yg_;
  double lat_;
  double lon_;
  float v_;
  float height_;
  float heading_;
  ::google::protobuf::int32 loc_fault_level_;
  ::google::protobuf::int32 loc_status_;
  ::google::protobuf::int32 gps_status_;
  float time_stamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_Business_2eproto::TableStruct;
  friend void ::protobuf_Business_2eproto::InitDefaultsLocPosImpl();
};
// -------------------------------------------------------------------

class BusinessStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:business.proto.BusinessStatus) */ {
 public:
  BusinessStatus();
  virtual ~BusinessStatus();

  BusinessStatus(const BusinessStatus& from);

  inline BusinessStatus& operator=(const BusinessStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BusinessStatus(BusinessStatus&& from) noexcept
    : BusinessStatus() {
    *this = ::std::move(from);
  }

  inline BusinessStatus& operator=(BusinessStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BusinessStatus* internal_default_instance() {
    return reinterpret_cast<const BusinessStatus*>(
               &_BusinessStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BusinessStatus* other);
  friend void swap(BusinessStatus& a, BusinessStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BusinessStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  BusinessStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BusinessStatus& from);
  void MergeFrom(const BusinessStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BusinessStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .business.proto.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::business::proto::Header& header() const;
  ::business::proto::Header* release_header();
  ::business::proto::Header* mutable_header();
  void set_allocated_header(::business::proto::Header* header);

  // .business.proto.LocPos locpos = 9;
  bool has_locpos() const;
  void clear_locpos();
  static const int kLocposFieldNumber = 9;
  const ::business::proto::LocPos& locpos() const;
  ::business::proto::LocPos* release_locpos();
  ::business::proto::LocPos* mutable_locpos();
  void set_allocated_locpos(::business::proto::LocPos* locpos);

  // int32 business_mode_st = 2;
  void clear_business_mode_st();
  static const int kBusinessModeStFieldNumber = 2;
  ::google::protobuf::int32 business_mode_st() const;
  void set_business_mode_st(::google::protobuf::int32 value);

  // int32 task_st = 3;
  void clear_task_st();
  static const int kTaskStFieldNumber = 3;
  ::google::protobuf::int32 task_st() const;
  void set_task_st(::google::protobuf::int32 value);

  // int32 auto_ready_st = 4;
  void clear_auto_ready_st();
  static const int kAutoReadyStFieldNumber = 4;
  ::google::protobuf::int32 auto_ready_st() const;
  void set_auto_ready_st(::google::protobuf::int32 value);

  // float task_total_mileage = 5;
  void clear_task_total_mileage();
  static const int kTaskTotalMileageFieldNumber = 5;
  float task_total_mileage() const;
  void set_task_total_mileage(float value);

  // float task_remain_mileage = 6;
  void clear_task_remain_mileage();
  static const int kTaskRemainMileageFieldNumber = 6;
  float task_remain_mileage() const;
  void set_task_remain_mileage(float value);

  // int32 cur_mission_id = 7;
  void clear_cur_mission_id();
  static const int kCurMissionIdFieldNumber = 7;
  ::google::protobuf::int32 cur_mission_id() const;
  void set_cur_mission_id(::google::protobuf::int32 value);

  // float task_dist2nextstop = 8;
  void clear_task_dist2nextstop();
  static const int kTaskDist2NextstopFieldNumber = 8;
  float task_dist2nextstop() const;
  void set_task_dist2nextstop(float value);

  // int32 ad_mode_disp = 10;
  void clear_ad_mode_disp();
  static const int kAdModeDispFieldNumber = 10;
  ::google::protobuf::int32 ad_mode_disp() const;
  void set_ad_mode_disp(::google::protobuf::int32 value);

  // int32 ad_sysstat_disp = 11;
  void clear_ad_sysstat_disp();
  static const int kAdSysstatDispFieldNumber = 11;
  ::google::protobuf::int32 ad_sysstat_disp() const;
  void set_ad_sysstat_disp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:business.proto.BusinessStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::business::proto::Header* header_;
  ::business::proto::LocPos* locpos_;
  ::google::protobuf::int32 business_mode_st_;
  ::google::protobuf::int32 task_st_;
  ::google::protobuf::int32 auto_ready_st_;
  float task_total_mileage_;
  float task_remain_mileage_;
  ::google::protobuf::int32 cur_mission_id_;
  float task_dist2nextstop_;
  ::google::protobuf::int32 ad_mode_disp_;
  ::google::protobuf::int32 ad_sysstat_disp_;
  mutable int _cached_size_;
  friend struct ::protobuf_Business_2eproto::TableStruct;
  friend void ::protobuf_Business_2eproto::InitDefaultsBusinessStatusImpl();
};
// -------------------------------------------------------------------

class BusinessCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:business.proto.BusinessCmd) */ {
 public:
  BusinessCmd();
  virtual ~BusinessCmd();

  BusinessCmd(const BusinessCmd& from);

  inline BusinessCmd& operator=(const BusinessCmd& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BusinessCmd(BusinessCmd&& from) noexcept
    : BusinessCmd() {
    *this = ::std::move(from);
  }

  inline BusinessCmd& operator=(BusinessCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BusinessCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BusinessCmd* internal_default_instance() {
    return reinterpret_cast<const BusinessCmd*>(
               &_BusinessCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BusinessCmd* other);
  friend void swap(BusinessCmd& a, BusinessCmd& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BusinessCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  BusinessCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BusinessCmd& from);
  void MergeFrom(const BusinessCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BusinessCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 brake_light = 1;
  void clear_brake_light();
  static const int kBrakeLightFieldNumber = 1;
  ::google::protobuf::int32 brake_light() const;
  void set_brake_light(::google::protobuf::int32 value);

  // int32 tail_light = 2;
  void clear_tail_light();
  static const int kTailLightFieldNumber = 2;
  ::google::protobuf::int32 tail_light() const;
  void set_tail_light(::google::protobuf::int32 value);

  // int32 double_flash_light = 3;
  void clear_double_flash_light();
  static const int kDoubleFlashLightFieldNumber = 3;
  ::google::protobuf::int32 double_flash_light() const;
  void set_double_flash_light(::google::protobuf::int32 value);

  // int32 low_beam = 4;
  void clear_low_beam();
  static const int kLowBeamFieldNumber = 4;
  ::google::protobuf::int32 low_beam() const;
  void set_low_beam(::google::protobuf::int32 value);

  // int32 high_beam = 5;
  void clear_high_beam();
  static const int kHighBeamFieldNumber = 5;
  ::google::protobuf::int32 high_beam() const;
  void set_high_beam(::google::protobuf::int32 value);

  // int32 auto_horn = 6;
  void clear_auto_horn();
  static const int kAutoHornFieldNumber = 6;
  ::google::protobuf::int32 auto_horn() const;
  void set_auto_horn(::google::protobuf::int32 value);

  // int32 front_fog_light = 7;
  void clear_front_fog_light();
  static const int kFrontFogLightFieldNumber = 7;
  ::google::protobuf::int32 front_fog_light() const;
  void set_front_fog_light(::google::protobuf::int32 value);

  // int32 rear_fog_light = 8;
  void clear_rear_fog_light();
  static const int kRearFogLightFieldNumber = 8;
  ::google::protobuf::int32 rear_fog_light() const;
  void set_rear_fog_light(::google::protobuf::int32 value);

  // int32 wiper = 9;
  void clear_wiper();
  static const int kWiperFieldNumber = 9;
  ::google::protobuf::int32 wiper() const;
  void set_wiper(::google::protobuf::int32 value);

  // int32 doorlock = 10;
  void clear_doorlock();
  static const int kDoorlockFieldNumber = 10;
  ::google::protobuf::int32 doorlock() const;
  void set_doorlock(::google::protobuf::int32 value);

  // int32 turn_left_light = 11;
  void clear_turn_left_light();
  static const int kTurnLeftLightFieldNumber = 11;
  ::google::protobuf::int32 turn_left_light() const;
  void set_turn_left_light(::google::protobuf::int32 value);

  // int32 turn_right_light = 12;
  void clear_turn_right_light();
  static const int kTurnRightLightFieldNumber = 12;
  ::google::protobuf::int32 turn_right_light() const;
  void set_turn_right_light(::google::protobuf::int32 value);

  // int32 steer_ctrl_mode = 13;
  void clear_steer_ctrl_mode();
  static const int kSteerCtrlModeFieldNumber = 13;
  ::google::protobuf::int32 steer_ctrl_mode() const;
  void set_steer_ctrl_mode(::google::protobuf::int32 value);

  // int32 accl_ctrl_mode = 14;
  void clear_accl_ctrl_mode();
  static const int kAcclCtrlModeFieldNumber = 14;
  ::google::protobuf::int32 accl_ctrl_mode() const;
  void set_accl_ctrl_mode(::google::protobuf::int32 value);

  // int32 brak_ctrl_mode = 15;
  void clear_brak_ctrl_mode();
  static const int kBrakCtrlModeFieldNumber = 15;
  ::google::protobuf::int32 brak_ctrl_mode() const;
  void set_brak_ctrl_mode(::google::protobuf::int32 value);

  // int32 ebp_ctrl_mode = 16;
  void clear_ebp_ctrl_mode();
  static const int kEbpCtrlModeFieldNumber = 16;
  ::google::protobuf::int32 ebp_ctrl_mode() const;
  void set_ebp_ctrl_mode(::google::protobuf::int32 value);

  // int32 bcm_ctrl_mode = 17;
  void clear_bcm_ctrl_mode();
  static const int kBcmCtrlModeFieldNumber = 17;
  ::google::protobuf::int32 bcm_ctrl_mode() const;
  void set_bcm_ctrl_mode(::google::protobuf::int32 value);

  // int32 recovery_brak_enable = 18;
  void clear_recovery_brak_enable();
  static const int kRecoveryBrakEnableFieldNumber = 18;
  ::google::protobuf::int32 recovery_brak_enable() const;
  void set_recovery_brak_enable(::google::protobuf::int32 value);

  // int32 ambient_light = 19;
  void clear_ambient_light();
  static const int kAmbientLightFieldNumber = 19;
  ::google::protobuf::int32 ambient_light() const;
  void set_ambient_light(::google::protobuf::int32 value);

  // int32 roof_light = 20;
  void clear_roof_light();
  static const int kRoofLightFieldNumber = 20;
  ::google::protobuf::int32 roof_light() const;
  void set_roof_light(::google::protobuf::int32 value);

  // int32 washer = 21;
  void clear_washer();
  static const int kWasherFieldNumber = 21;
  ::google::protobuf::int32 washer() const;
  void set_washer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:business.proto.BusinessCmd)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 brake_light_;
  ::google::protobuf::int32 tail_light_;
  ::google::protobuf::int32 double_flash_light_;
  ::google::protobuf::int32 low_beam_;
  ::google::protobuf::int32 high_beam_;
  ::google::protobuf::int32 auto_horn_;
  ::google::protobuf::int32 front_fog_light_;
  ::google::protobuf::int32 rear_fog_light_;
  ::google::protobuf::int32 wiper_;
  ::google::protobuf::int32 doorlock_;
  ::google::protobuf::int32 turn_left_light_;
  ::google::protobuf::int32 turn_right_light_;
  ::google::protobuf::int32 steer_ctrl_mode_;
  ::google::protobuf::int32 accl_ctrl_mode_;
  ::google::protobuf::int32 brak_ctrl_mode_;
  ::google::protobuf::int32 ebp_ctrl_mode_;
  ::google::protobuf::int32 bcm_ctrl_mode_;
  ::google::protobuf::int32 recovery_brak_enable_;
  ::google::protobuf::int32 ambient_light_;
  ::google::protobuf::int32 roof_light_;
  ::google::protobuf::int32 washer_;
  mutable int _cached_size_;
  friend struct ::protobuf_Business_2eproto::TableStruct;
  friend void ::protobuf_Business_2eproto::InitDefaultsBusinessCmdImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// double timestamp_sec = 1;
inline void Header::clear_timestamp_sec() {
  timestamp_sec_ = 0;
}
inline double Header::timestamp_sec() const {
  // @@protoc_insertion_point(field_get:business.proto.Header.timestamp_sec)
  return timestamp_sec_;
}
inline void Header::set_timestamp_sec(double value) {
  
  timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:business.proto.Header.timestamp_sec)
}

// string module_name = 2;
inline void Header::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::module_name() const {
  // @@protoc_insertion_point(field_get:business.proto.Header.module_name)
  return module_name_.GetNoArena();
}
inline void Header::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:business.proto.Header.module_name)
}
#if LANG_CXX11
inline void Header::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:business.proto.Header.module_name)
}
#endif
inline void Header::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:business.proto.Header.module_name)
}
inline void Header::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:business.proto.Header.module_name)
}
inline ::std::string* Header::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:business.proto.Header.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_module_name() {
  // @@protoc_insertion_point(field_release:business.proto.Header.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:business.proto.Header.module_name)
}

// uint32 sequence_num = 3;
inline void Header::clear_sequence_num() {
  sequence_num_ = 0u;
}
inline ::google::protobuf::uint32 Header::sequence_num() const {
  // @@protoc_insertion_point(field_get:business.proto.Header.sequence_num)
  return sequence_num_;
}
inline void Header::set_sequence_num(::google::protobuf::uint32 value) {
  
  sequence_num_ = value;
  // @@protoc_insertion_point(field_set:business.proto.Header.sequence_num)
}

// string version = 4;
inline void Header::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::version() const {
  // @@protoc_insertion_point(field_get:business.proto.Header.version)
  return version_.GetNoArena();
}
inline void Header::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:business.proto.Header.version)
}
#if LANG_CXX11
inline void Header::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:business.proto.Header.version)
}
#endif
inline void Header::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:business.proto.Header.version)
}
inline void Header::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:business.proto.Header.version)
}
inline ::std::string* Header::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:business.proto.Header.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_version() {
  // @@protoc_insertion_point(field_release:business.proto.Header.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:business.proto.Header.version)
}

// -------------------------------------------------------------------

// LocPos

// double xg = 1;
inline void LocPos::clear_xg() {
  xg_ = 0;
}
inline double LocPos::xg() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.xg)
  return xg_;
}
inline void LocPos::set_xg(double value) {
  
  xg_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.xg)
}

// double yg = 2;
inline void LocPos::clear_yg() {
  yg_ = 0;
}
inline double LocPos::yg() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.yg)
  return yg_;
}
inline void LocPos::set_yg(double value) {
  
  yg_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.yg)
}

// double lat = 3;
inline void LocPos::clear_lat() {
  lat_ = 0;
}
inline double LocPos::lat() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.lat)
  return lat_;
}
inline void LocPos::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.lat)
}

// double lon = 4;
inline void LocPos::clear_lon() {
  lon_ = 0;
}
inline double LocPos::lon() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.lon)
  return lon_;
}
inline void LocPos::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.lon)
}

// float v = 5;
inline void LocPos::clear_v() {
  v_ = 0;
}
inline float LocPos::v() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.v)
  return v_;
}
inline void LocPos::set_v(float value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.v)
}

// float height = 6;
inline void LocPos::clear_height() {
  height_ = 0;
}
inline float LocPos::height() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.height)
  return height_;
}
inline void LocPos::set_height(float value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.height)
}

// float heading = 7;
inline void LocPos::clear_heading() {
  heading_ = 0;
}
inline float LocPos::heading() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.heading)
  return heading_;
}
inline void LocPos::set_heading(float value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.heading)
}

// int32 loc_fault_level = 8;
inline void LocPos::clear_loc_fault_level() {
  loc_fault_level_ = 0;
}
inline ::google::protobuf::int32 LocPos::loc_fault_level() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.loc_fault_level)
  return loc_fault_level_;
}
inline void LocPos::set_loc_fault_level(::google::protobuf::int32 value) {
  
  loc_fault_level_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.loc_fault_level)
}

// int32 loc_status = 9;
inline void LocPos::clear_loc_status() {
  loc_status_ = 0;
}
inline ::google::protobuf::int32 LocPos::loc_status() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.loc_status)
  return loc_status_;
}
inline void LocPos::set_loc_status(::google::protobuf::int32 value) {
  
  loc_status_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.loc_status)
}

// int32 gps_status = 10;
inline void LocPos::clear_gps_status() {
  gps_status_ = 0;
}
inline ::google::protobuf::int32 LocPos::gps_status() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.gps_status)
  return gps_status_;
}
inline void LocPos::set_gps_status(::google::protobuf::int32 value) {
  
  gps_status_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.gps_status)
}

// float time_stamp = 11;
inline void LocPos::clear_time_stamp() {
  time_stamp_ = 0;
}
inline float LocPos::time_stamp() const {
  // @@protoc_insertion_point(field_get:business.proto.LocPos.time_stamp)
  return time_stamp_;
}
inline void LocPos::set_time_stamp(float value) {
  
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:business.proto.LocPos.time_stamp)
}

// -------------------------------------------------------------------

// BusinessStatus

// .business.proto.Header header = 1;
inline bool BusinessStatus::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BusinessStatus::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::business::proto::Header& BusinessStatus::header() const {
  const ::business::proto::Header* p = header_;
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.header)
  return p != NULL ? *p : *reinterpret_cast<const ::business::proto::Header*>(
      &::business::proto::_Header_default_instance_);
}
inline ::business::proto::Header* BusinessStatus::release_header() {
  // @@protoc_insertion_point(field_release:business.proto.BusinessStatus.header)
  
  ::business::proto::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::business::proto::Header* BusinessStatus::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::business::proto::Header;
  }
  // @@protoc_insertion_point(field_mutable:business.proto.BusinessStatus.header)
  return header_;
}
inline void BusinessStatus::set_allocated_header(::business::proto::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:business.proto.BusinessStatus.header)
}

// int32 business_mode_st = 2;
inline void BusinessStatus::clear_business_mode_st() {
  business_mode_st_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::business_mode_st() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.business_mode_st)
  return business_mode_st_;
}
inline void BusinessStatus::set_business_mode_st(::google::protobuf::int32 value) {
  
  business_mode_st_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.business_mode_st)
}

// int32 task_st = 3;
inline void BusinessStatus::clear_task_st() {
  task_st_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::task_st() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.task_st)
  return task_st_;
}
inline void BusinessStatus::set_task_st(::google::protobuf::int32 value) {
  
  task_st_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.task_st)
}

// int32 auto_ready_st = 4;
inline void BusinessStatus::clear_auto_ready_st() {
  auto_ready_st_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::auto_ready_st() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.auto_ready_st)
  return auto_ready_st_;
}
inline void BusinessStatus::set_auto_ready_st(::google::protobuf::int32 value) {
  
  auto_ready_st_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.auto_ready_st)
}

// float task_total_mileage = 5;
inline void BusinessStatus::clear_task_total_mileage() {
  task_total_mileage_ = 0;
}
inline float BusinessStatus::task_total_mileage() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.task_total_mileage)
  return task_total_mileage_;
}
inline void BusinessStatus::set_task_total_mileage(float value) {
  
  task_total_mileage_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.task_total_mileage)
}

// float task_remain_mileage = 6;
inline void BusinessStatus::clear_task_remain_mileage() {
  task_remain_mileage_ = 0;
}
inline float BusinessStatus::task_remain_mileage() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.task_remain_mileage)
  return task_remain_mileage_;
}
inline void BusinessStatus::set_task_remain_mileage(float value) {
  
  task_remain_mileage_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.task_remain_mileage)
}

// int32 cur_mission_id = 7;
inline void BusinessStatus::clear_cur_mission_id() {
  cur_mission_id_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::cur_mission_id() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.cur_mission_id)
  return cur_mission_id_;
}
inline void BusinessStatus::set_cur_mission_id(::google::protobuf::int32 value) {
  
  cur_mission_id_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.cur_mission_id)
}

// float task_dist2nextstop = 8;
inline void BusinessStatus::clear_task_dist2nextstop() {
  task_dist2nextstop_ = 0;
}
inline float BusinessStatus::task_dist2nextstop() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.task_dist2nextstop)
  return task_dist2nextstop_;
}
inline void BusinessStatus::set_task_dist2nextstop(float value) {
  
  task_dist2nextstop_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.task_dist2nextstop)
}

// .business.proto.LocPos locpos = 9;
inline bool BusinessStatus::has_locpos() const {
  return this != internal_default_instance() && locpos_ != NULL;
}
inline void BusinessStatus::clear_locpos() {
  if (GetArenaNoVirtual() == NULL && locpos_ != NULL) {
    delete locpos_;
  }
  locpos_ = NULL;
}
inline const ::business::proto::LocPos& BusinessStatus::locpos() const {
  const ::business::proto::LocPos* p = locpos_;
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.locpos)
  return p != NULL ? *p : *reinterpret_cast<const ::business::proto::LocPos*>(
      &::business::proto::_LocPos_default_instance_);
}
inline ::business::proto::LocPos* BusinessStatus::release_locpos() {
  // @@protoc_insertion_point(field_release:business.proto.BusinessStatus.locpos)
  
  ::business::proto::LocPos* temp = locpos_;
  locpos_ = NULL;
  return temp;
}
inline ::business::proto::LocPos* BusinessStatus::mutable_locpos() {
  
  if (locpos_ == NULL) {
    locpos_ = new ::business::proto::LocPos;
  }
  // @@protoc_insertion_point(field_mutable:business.proto.BusinessStatus.locpos)
  return locpos_;
}
inline void BusinessStatus::set_allocated_locpos(::business::proto::LocPos* locpos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete locpos_;
  }
  if (locpos) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      locpos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, locpos, submessage_arena);
    }
    
  } else {
    
  }
  locpos_ = locpos;
  // @@protoc_insertion_point(field_set_allocated:business.proto.BusinessStatus.locpos)
}

// int32 ad_mode_disp = 10;
inline void BusinessStatus::clear_ad_mode_disp() {
  ad_mode_disp_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::ad_mode_disp() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.ad_mode_disp)
  return ad_mode_disp_;
}
inline void BusinessStatus::set_ad_mode_disp(::google::protobuf::int32 value) {
  
  ad_mode_disp_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.ad_mode_disp)
}

// int32 ad_sysstat_disp = 11;
inline void BusinessStatus::clear_ad_sysstat_disp() {
  ad_sysstat_disp_ = 0;
}
inline ::google::protobuf::int32 BusinessStatus::ad_sysstat_disp() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessStatus.ad_sysstat_disp)
  return ad_sysstat_disp_;
}
inline void BusinessStatus::set_ad_sysstat_disp(::google::protobuf::int32 value) {
  
  ad_sysstat_disp_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessStatus.ad_sysstat_disp)
}

// -------------------------------------------------------------------

// BusinessCmd

// int32 brake_light = 1;
inline void BusinessCmd::clear_brake_light() {
  brake_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::brake_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.brake_light)
  return brake_light_;
}
inline void BusinessCmd::set_brake_light(::google::protobuf::int32 value) {
  
  brake_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.brake_light)
}

// int32 tail_light = 2;
inline void BusinessCmd::clear_tail_light() {
  tail_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::tail_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.tail_light)
  return tail_light_;
}
inline void BusinessCmd::set_tail_light(::google::protobuf::int32 value) {
  
  tail_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.tail_light)
}

// int32 double_flash_light = 3;
inline void BusinessCmd::clear_double_flash_light() {
  double_flash_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::double_flash_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.double_flash_light)
  return double_flash_light_;
}
inline void BusinessCmd::set_double_flash_light(::google::protobuf::int32 value) {
  
  double_flash_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.double_flash_light)
}

// int32 low_beam = 4;
inline void BusinessCmd::clear_low_beam() {
  low_beam_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::low_beam() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.low_beam)
  return low_beam_;
}
inline void BusinessCmd::set_low_beam(::google::protobuf::int32 value) {
  
  low_beam_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.low_beam)
}

// int32 high_beam = 5;
inline void BusinessCmd::clear_high_beam() {
  high_beam_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::high_beam() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.high_beam)
  return high_beam_;
}
inline void BusinessCmd::set_high_beam(::google::protobuf::int32 value) {
  
  high_beam_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.high_beam)
}

// int32 auto_horn = 6;
inline void BusinessCmd::clear_auto_horn() {
  auto_horn_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::auto_horn() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.auto_horn)
  return auto_horn_;
}
inline void BusinessCmd::set_auto_horn(::google::protobuf::int32 value) {
  
  auto_horn_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.auto_horn)
}

// int32 front_fog_light = 7;
inline void BusinessCmd::clear_front_fog_light() {
  front_fog_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::front_fog_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.front_fog_light)
  return front_fog_light_;
}
inline void BusinessCmd::set_front_fog_light(::google::protobuf::int32 value) {
  
  front_fog_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.front_fog_light)
}

// int32 rear_fog_light = 8;
inline void BusinessCmd::clear_rear_fog_light() {
  rear_fog_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::rear_fog_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.rear_fog_light)
  return rear_fog_light_;
}
inline void BusinessCmd::set_rear_fog_light(::google::protobuf::int32 value) {
  
  rear_fog_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.rear_fog_light)
}

// int32 wiper = 9;
inline void BusinessCmd::clear_wiper() {
  wiper_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::wiper() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.wiper)
  return wiper_;
}
inline void BusinessCmd::set_wiper(::google::protobuf::int32 value) {
  
  wiper_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.wiper)
}

// int32 doorlock = 10;
inline void BusinessCmd::clear_doorlock() {
  doorlock_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::doorlock() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.doorlock)
  return doorlock_;
}
inline void BusinessCmd::set_doorlock(::google::protobuf::int32 value) {
  
  doorlock_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.doorlock)
}

// int32 turn_left_light = 11;
inline void BusinessCmd::clear_turn_left_light() {
  turn_left_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::turn_left_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.turn_left_light)
  return turn_left_light_;
}
inline void BusinessCmd::set_turn_left_light(::google::protobuf::int32 value) {
  
  turn_left_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.turn_left_light)
}

// int32 turn_right_light = 12;
inline void BusinessCmd::clear_turn_right_light() {
  turn_right_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::turn_right_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.turn_right_light)
  return turn_right_light_;
}
inline void BusinessCmd::set_turn_right_light(::google::protobuf::int32 value) {
  
  turn_right_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.turn_right_light)
}

// int32 steer_ctrl_mode = 13;
inline void BusinessCmd::clear_steer_ctrl_mode() {
  steer_ctrl_mode_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::steer_ctrl_mode() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.steer_ctrl_mode)
  return steer_ctrl_mode_;
}
inline void BusinessCmd::set_steer_ctrl_mode(::google::protobuf::int32 value) {
  
  steer_ctrl_mode_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.steer_ctrl_mode)
}

// int32 accl_ctrl_mode = 14;
inline void BusinessCmd::clear_accl_ctrl_mode() {
  accl_ctrl_mode_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::accl_ctrl_mode() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.accl_ctrl_mode)
  return accl_ctrl_mode_;
}
inline void BusinessCmd::set_accl_ctrl_mode(::google::protobuf::int32 value) {
  
  accl_ctrl_mode_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.accl_ctrl_mode)
}

// int32 brak_ctrl_mode = 15;
inline void BusinessCmd::clear_brak_ctrl_mode() {
  brak_ctrl_mode_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::brak_ctrl_mode() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.brak_ctrl_mode)
  return brak_ctrl_mode_;
}
inline void BusinessCmd::set_brak_ctrl_mode(::google::protobuf::int32 value) {
  
  brak_ctrl_mode_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.brak_ctrl_mode)
}

// int32 ebp_ctrl_mode = 16;
inline void BusinessCmd::clear_ebp_ctrl_mode() {
  ebp_ctrl_mode_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::ebp_ctrl_mode() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.ebp_ctrl_mode)
  return ebp_ctrl_mode_;
}
inline void BusinessCmd::set_ebp_ctrl_mode(::google::protobuf::int32 value) {
  
  ebp_ctrl_mode_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.ebp_ctrl_mode)
}

// int32 bcm_ctrl_mode = 17;
inline void BusinessCmd::clear_bcm_ctrl_mode() {
  bcm_ctrl_mode_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::bcm_ctrl_mode() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.bcm_ctrl_mode)
  return bcm_ctrl_mode_;
}
inline void BusinessCmd::set_bcm_ctrl_mode(::google::protobuf::int32 value) {
  
  bcm_ctrl_mode_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.bcm_ctrl_mode)
}

// int32 recovery_brak_enable = 18;
inline void BusinessCmd::clear_recovery_brak_enable() {
  recovery_brak_enable_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::recovery_brak_enable() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.recovery_brak_enable)
  return recovery_brak_enable_;
}
inline void BusinessCmd::set_recovery_brak_enable(::google::protobuf::int32 value) {
  
  recovery_brak_enable_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.recovery_brak_enable)
}

// int32 ambient_light = 19;
inline void BusinessCmd::clear_ambient_light() {
  ambient_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::ambient_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.ambient_light)
  return ambient_light_;
}
inline void BusinessCmd::set_ambient_light(::google::protobuf::int32 value) {
  
  ambient_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.ambient_light)
}

// int32 roof_light = 20;
inline void BusinessCmd::clear_roof_light() {
  roof_light_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::roof_light() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.roof_light)
  return roof_light_;
}
inline void BusinessCmd::set_roof_light(::google::protobuf::int32 value) {
  
  roof_light_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.roof_light)
}

// int32 washer = 21;
inline void BusinessCmd::clear_washer() {
  washer_ = 0;
}
inline ::google::protobuf::int32 BusinessCmd::washer() const {
  // @@protoc_insertion_point(field_get:business.proto.BusinessCmd.washer)
  return washer_;
}
inline void BusinessCmd::set_washer(::google::protobuf::int32 value) {
  
  washer_ = value;
  // @@protoc_insertion_point(field_set:business.proto.BusinessCmd.washer)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace business

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Business_2eproto__INCLUDED
