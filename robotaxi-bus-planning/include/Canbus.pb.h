// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Canbus.proto

#ifndef PROTOBUF_Canbus_2eproto__INCLUDED
#define PROTOBUF_Canbus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Canbus_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHeaderImpl();
void InitDefaultsHeader();
void InitDefaultsFaultInfoImpl();
void InitDefaultsFaultInfo();
void InitDefaultsKeyStateImpl();
void InitDefaultsKeyState();
void InitDefaultsVehicleInfoImpl();
void InitDefaultsVehicleInfo();
void InitDefaultsVehicleStateImpl();
void InitDefaultsVehicleState();
void InitDefaultsVehicleFeedbackImpl();
void InitDefaultsVehicleFeedback();
void InitDefaultsAddOnFeedbackImpl();
void InitDefaultsAddOnFeedback();
inline void InitDefaults() {
  InitDefaultsHeader();
  InitDefaultsFaultInfo();
  InitDefaultsKeyState();
  InitDefaultsVehicleInfo();
  InitDefaultsVehicleState();
  InitDefaultsVehicleFeedback();
  InitDefaultsAddOnFeedback();
}
}  // namespace protobuf_Canbus_2eproto
namespace Canbus {
namespace proto {
class AddOnFeedback;
class AddOnFeedbackDefaultTypeInternal;
extern AddOnFeedbackDefaultTypeInternal _AddOnFeedback_default_instance_;
class FaultInfo;
class FaultInfoDefaultTypeInternal;
extern FaultInfoDefaultTypeInternal _FaultInfo_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class KeyState;
class KeyStateDefaultTypeInternal;
extern KeyStateDefaultTypeInternal _KeyState_default_instance_;
class VehicleFeedback;
class VehicleFeedbackDefaultTypeInternal;
extern VehicleFeedbackDefaultTypeInternal _VehicleFeedback_default_instance_;
class VehicleInfo;
class VehicleInfoDefaultTypeInternal;
extern VehicleInfoDefaultTypeInternal _VehicleInfo_default_instance_;
class VehicleState;
class VehicleStateDefaultTypeInternal;
extern VehicleStateDefaultTypeInternal _VehicleState_default_instance_;
}  // namespace proto
}  // namespace Canbus
namespace Canbus {
namespace proto {

// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const PROTOBUF_FINAL { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string module_name = 2;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 2;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_module_name(::std::string&& value);
  #endif
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // string version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // double timestamp_sec = 1;
  void clear_timestamp_sec();
  static const int kTimestampSecFieldNumber = 1;
  double timestamp_sec() const;
  void set_timestamp_sec(double value);

  // uint32 sequence_num = 3;
  void clear_sequence_num();
  static const int kSequenceNumFieldNumber = 3;
  ::google::protobuf::uint32 sequence_num() const;
  void set_sequence_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  double timestamp_sec_;
  ::google::protobuf::uint32 sequence_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsHeaderImpl();
};
// -------------------------------------------------------------------

class FaultInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.FaultInfo) */ {
 public:
  FaultInfo();
  virtual ~FaultInfo();

  FaultInfo(const FaultInfo& from);

  inline FaultInfo& operator=(const FaultInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaultInfo(FaultInfo&& from) noexcept
    : FaultInfo() {
    *this = ::std::move(from);
  }

  inline FaultInfo& operator=(FaultInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaultInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultInfo* internal_default_instance() {
    return reinterpret_cast<const FaultInfo*>(
               &_FaultInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FaultInfo* other);
  friend void swap(FaultInfo& a, FaultInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaultInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FaultInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaultInfo& from);
  void MergeFrom(const FaultInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaultInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 EPS_fault = 1;
  void clear_eps_fault();
  static const int kEPSFaultFieldNumber = 1;
  ::google::protobuf::int32 eps_fault() const;
  void set_eps_fault(::google::protobuf::int32 value);

  // int32 Brake_fault = 2;
  void clear_brake_fault();
  static const int kBrakeFaultFieldNumber = 2;
  ::google::protobuf::int32 brake_fault() const;
  void set_brake_fault(::google::protobuf::int32 value);

  // int32 Drive_fault = 3;
  void clear_drive_fault();
  static const int kDriveFaultFieldNumber = 3;
  ::google::protobuf::int32 drive_fault() const;
  void set_drive_fault(::google::protobuf::int32 value);

  // int32 EPB_fault = 4;
  void clear_epb_fault();
  static const int kEPBFaultFieldNumber = 4;
  ::google::protobuf::int32 epb_fault() const;
  void set_epb_fault(::google::protobuf::int32 value);

  // int32 Power12_Over_fault = 5;
  void clear_power12_over_fault();
  static const int kPower12OverFaultFieldNumber = 5;
  ::google::protobuf::int32 power12_over_fault() const;
  void set_power12_over_fault(::google::protobuf::int32 value);

  // int32 Power12_Low_fault = 6;
  void clear_power12_low_fault();
  static const int kPower12LowFaultFieldNumber = 6;
  ::google::protobuf::int32 power12_low_fault() const;
  void set_power12_low_fault(::google::protobuf::int32 value);

  // int32 PowerIGN_Over_fault = 7;
  void clear_powerign_over_fault();
  static const int kPowerIGNOverFaultFieldNumber = 7;
  ::google::protobuf::int32 powerign_over_fault() const;
  void set_powerign_over_fault(::google::protobuf::int32 value);

  // int32 PowerIGN_Low_fault = 8;
  void clear_powerign_low_fault();
  static const int kPowerIGNLowFaultFieldNumber = 8;
  ::google::protobuf::int32 powerign_low_fault() const;
  void set_powerign_low_fault(::google::protobuf::int32 value);

  // int32 EPS_Com_fault = 9;
  void clear_eps_com_fault();
  static const int kEPSComFaultFieldNumber = 9;
  ::google::protobuf::int32 eps_com_fault() const;
  void set_eps_com_fault(::google::protobuf::int32 value);

  // int32 BCM_Com_fault = 10;
  void clear_bcm_com_fault();
  static const int kBCMComFaultFieldNumber = 10;
  ::google::protobuf::int32 bcm_com_fault() const;
  void set_bcm_com_fault(::google::protobuf::int32 value);

  // int32 EPB_Com_fault = 11;
  void clear_epb_com_fault();
  static const int kEPBComFaultFieldNumber = 11;
  ::google::protobuf::int32 epb_com_fault() const;
  void set_epb_com_fault(::google::protobuf::int32 value);

  // int32 CPU_Com_fault = 12;
  void clear_cpu_com_fault();
  static const int kCPUComFaultFieldNumber = 12;
  ::google::protobuf::int32 cpu_com_fault() const;
  void set_cpu_com_fault(::google::protobuf::int32 value);

  // int32 VCU_Com_fault = 13;
  void clear_vcu_com_fault();
  static const int kVCUComFaultFieldNumber = 13;
  ::google::protobuf::int32 vcu_com_fault() const;
  void set_vcu_com_fault(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.FaultInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 eps_fault_;
  ::google::protobuf::int32 brake_fault_;
  ::google::protobuf::int32 drive_fault_;
  ::google::protobuf::int32 epb_fault_;
  ::google::protobuf::int32 power12_over_fault_;
  ::google::protobuf::int32 power12_low_fault_;
  ::google::protobuf::int32 powerign_over_fault_;
  ::google::protobuf::int32 powerign_low_fault_;
  ::google::protobuf::int32 eps_com_fault_;
  ::google::protobuf::int32 bcm_com_fault_;
  ::google::protobuf::int32 epb_com_fault_;
  ::google::protobuf::int32 cpu_com_fault_;
  ::google::protobuf::int32 vcu_com_fault_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsFaultInfoImpl();
};
// -------------------------------------------------------------------

class KeyState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.KeyState) */ {
 public:
  KeyState();
  virtual ~KeyState();

  KeyState(const KeyState& from);

  inline KeyState& operator=(const KeyState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KeyState(KeyState&& from) noexcept
    : KeyState() {
    *this = ::std::move(from);
  }

  inline KeyState& operator=(KeyState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyState* internal_default_instance() {
    return reinterpret_cast<const KeyState*>(
               &_KeyState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(KeyState* other);
  friend void swap(KeyState& a, KeyState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KeyState* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyState& from);
  void MergeFrom(const KeyState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 emergency_brake_key_state = 1;
  void clear_emergency_brake_key_state();
  static const int kEmergencyBrakeKeyStateFieldNumber = 1;
  ::google::protobuf::int32 emergency_brake_key_state() const;
  void set_emergency_brake_key_state(::google::protobuf::int32 value);

  // int32 slow_brake_key_state = 2;
  void clear_slow_brake_key_state();
  static const int kSlowBrakeKeyStateFieldNumber = 2;
  ::google::protobuf::int32 slow_brake_key_state() const;
  void set_slow_brake_key_state(::google::protobuf::int32 value);

  // int32 drive_key_state = 3;
  void clear_drive_key_state();
  static const int kDriveKeyStateFieldNumber = 3;
  ::google::protobuf::int32 drive_key_state() const;
  void set_drive_key_state(::google::protobuf::int32 value);

  // int32 break_state = 4;
  void clear_break_state();
  static const int kBreakStateFieldNumber = 4;
  ::google::protobuf::int32 break_state() const;
  void set_break_state(::google::protobuf::int32 value);

  // int32 auto_switch_state = 5;
  void clear_auto_switch_state();
  static const int kAutoSwitchStateFieldNumber = 5;
  ::google::protobuf::int32 auto_switch_state() const;
  void set_auto_switch_state(::google::protobuf::int32 value);

  // int32 active_switch_state = 6;
  void clear_active_switch_state();
  static const int kActiveSwitchStateFieldNumber = 6;
  ::google::protobuf::int32 active_switch_state() const;
  void set_active_switch_state(::google::protobuf::int32 value);

  // int32 steer_left_up = 7;
  void clear_steer_left_up();
  static const int kSteerLeftUpFieldNumber = 7;
  ::google::protobuf::int32 steer_left_up() const;
  void set_steer_left_up(::google::protobuf::int32 value);

  // int32 steer_left_down = 8;
  void clear_steer_left_down();
  static const int kSteerLeftDownFieldNumber = 8;
  ::google::protobuf::int32 steer_left_down() const;
  void set_steer_left_down(::google::protobuf::int32 value);

  // int32 steer_left_left = 9;
  void clear_steer_left_left();
  static const int kSteerLeftLeftFieldNumber = 9;
  ::google::protobuf::int32 steer_left_left() const;
  void set_steer_left_left(::google::protobuf::int32 value);

  // int32 steer_left_right = 10;
  void clear_steer_left_right();
  static const int kSteerLeftRightFieldNumber = 10;
  ::google::protobuf::int32 steer_left_right() const;
  void set_steer_left_right(::google::protobuf::int32 value);

  // int32 turn_light_switch = 11;
  void clear_turn_light_switch();
  static const int kTurnLightSwitchFieldNumber = 11;
  ::google::protobuf::int32 turn_light_switch() const;
  void set_turn_light_switch(::google::protobuf::int32 value);

  // int32 position_light_switch = 12;
  void clear_position_light_switch();
  static const int kPositionLightSwitchFieldNumber = 12;
  ::google::protobuf::int32 position_light_switch() const;
  void set_position_light_switch(::google::protobuf::int32 value);

  // int32 front_wiper_switch = 13;
  void clear_front_wiper_switch();
  static const int kFrontWiperSwitchFieldNumber = 13;
  ::google::protobuf::int32 front_wiper_switch() const;
  void set_front_wiper_switch(::google::protobuf::int32 value);

  // int32 hazard_lamp_switch = 14;
  void clear_hazard_lamp_switch();
  static const int kHazardLampSwitchFieldNumber = 14;
  ::google::protobuf::int32 hazard_lamp_switch() const;
  void set_hazard_lamp_switch(::google::protobuf::int32 value);

  // int32 door_closing_button = 15;
  void clear_door_closing_button();
  static const int kDoorClosingButtonFieldNumber = 15;
  ::google::protobuf::int32 door_closing_button() const;
  void set_door_closing_button(::google::protobuf::int32 value);

  // int32 door_opening_button = 16;
  void clear_door_opening_button();
  static const int kDoorOpeningButtonFieldNumber = 16;
  ::google::protobuf::int32 door_opening_button() const;
  void set_door_opening_button(::google::protobuf::int32 value);

  // int32 top_light_button = 17;
  void clear_top_light_button();
  static const int kTopLightButtonFieldNumber = 17;
  ::google::protobuf::int32 top_light_button() const;
  void set_top_light_button(::google::protobuf::int32 value);

  // int32 front_washer_switch = 18;
  void clear_front_washer_switch();
  static const int kFrontWasherSwitchFieldNumber = 18;
  ::google::protobuf::int32 front_washer_switch() const;
  void set_front_washer_switch(::google::protobuf::int32 value);

  // int32 lowbeam_switch = 19;
  void clear_lowbeam_switch();
  static const int kLowbeamSwitchFieldNumber = 19;
  ::google::protobuf::int32 lowbeam_switch() const;
  void set_lowbeam_switch(::google::protobuf::int32 value);

  // int32 highbeam_switch = 20;
  void clear_highbeam_switch();
  static const int kHighbeamSwitchFieldNumber = 20;
  ::google::protobuf::int32 highbeam_switch() const;
  void set_highbeam_switch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.KeyState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 emergency_brake_key_state_;
  ::google::protobuf::int32 slow_brake_key_state_;
  ::google::protobuf::int32 drive_key_state_;
  ::google::protobuf::int32 break_state_;
  ::google::protobuf::int32 auto_switch_state_;
  ::google::protobuf::int32 active_switch_state_;
  ::google::protobuf::int32 steer_left_up_;
  ::google::protobuf::int32 steer_left_down_;
  ::google::protobuf::int32 steer_left_left_;
  ::google::protobuf::int32 steer_left_right_;
  ::google::protobuf::int32 turn_light_switch_;
  ::google::protobuf::int32 position_light_switch_;
  ::google::protobuf::int32 front_wiper_switch_;
  ::google::protobuf::int32 hazard_lamp_switch_;
  ::google::protobuf::int32 door_closing_button_;
  ::google::protobuf::int32 door_opening_button_;
  ::google::protobuf::int32 top_light_button_;
  ::google::protobuf::int32 front_washer_switch_;
  ::google::protobuf::int32 lowbeam_switch_;
  ::google::protobuf::int32 highbeam_switch_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsKeyStateImpl();
};
// -------------------------------------------------------------------

class VehicleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.VehicleInfo) */ {
 public:
  VehicleInfo();
  virtual ~VehicleInfo();

  VehicleInfo(const VehicleInfo& from);

  inline VehicleInfo& operator=(const VehicleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleInfo(VehicleInfo&& from) noexcept
    : VehicleInfo() {
    *this = ::std::move(from);
  }

  inline VehicleInfo& operator=(VehicleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleInfo* internal_default_instance() {
    return reinterpret_cast<const VehicleInfo*>(
               &_VehicleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VehicleInfo* other);
  friend void swap(VehicleInfo& a, VehicleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleInfo& from);
  void MergeFrom(const VehicleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float steerangle = 1;
  void clear_steerangle();
  static const int kSteerangleFieldNumber = 1;
  float steerangle() const;
  void set_steerangle(float value);

  // float speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  float speed() const;
  void set_speed(float value);

  // int32 DCDC_work_state = 3;
  void clear_dcdc_work_state();
  static const int kDCDCWorkStateFieldNumber = 3;
  ::google::protobuf::int32 dcdc_work_state() const;
  void set_dcdc_work_state(::google::protobuf::int32 value);

  // int32 batteryStatus = 4;
  void clear_batterystatus();
  static const int kBatteryStatusFieldNumber = 4;
  ::google::protobuf::int32 batterystatus() const;
  void set_batterystatus(::google::protobuf::int32 value);

  // int32 shift_position = 5;
  void clear_shift_position();
  static const int kShiftPositionFieldNumber = 5;
  ::google::protobuf::int32 shift_position() const;
  void set_shift_position(::google::protobuf::int32 value);

  // int32 epb_status = 6;
  void clear_epb_status();
  static const int kEpbStatusFieldNumber = 6;
  ::google::protobuf::int32 epb_status() const;
  void set_epb_status(::google::protobuf::int32 value);

  // int32 current_drive_mode = 7;
  void clear_current_drive_mode();
  static const int kCurrentDriveModeFieldNumber = 7;
  ::google::protobuf::int32 current_drive_mode() const;
  void set_current_drive_mode(::google::protobuf::int32 value);

  // int32 control_switch_state = 8;
  void clear_control_switch_state();
  static const int kControlSwitchStateFieldNumber = 8;
  ::google::protobuf::int32 control_switch_state() const;
  void set_control_switch_state(::google::protobuf::int32 value);

  // int32 brake_switch_state = 9;
  void clear_brake_switch_state();
  static const int kBrakeSwitchStateFieldNumber = 9;
  ::google::protobuf::int32 brake_switch_state() const;
  void set_brake_switch_state(::google::protobuf::int32 value);

  // float break_pressure = 10;
  void clear_break_pressure();
  static const int kBreakPressureFieldNumber = 10;
  float break_pressure() const;
  void set_break_pressure(float value);

  // float accpedalposi = 11;
  void clear_accpedalposi();
  static const int kAccpedalposiFieldNumber = 11;
  float accpedalposi() const;
  void set_accpedalposi(float value);

  // float lon_accel = 12;
  void clear_lon_accel();
  static const int kLonAccelFieldNumber = 12;
  float lon_accel() const;
  void set_lon_accel(float value);

  // float lon_jerk = 13;
  void clear_lon_jerk();
  static const int kLonJerkFieldNumber = 13;
  float lon_jerk() const;
  void set_lon_jerk(float value);

  // float lat_accel = 14;
  void clear_lat_accel();
  static const int kLatAccelFieldNumber = 14;
  float lat_accel() const;
  void set_lat_accel(float value);

  // float lat_jerk = 15;
  void clear_lat_jerk();
  static const int kLatJerkFieldNumber = 15;
  float lat_jerk() const;
  void set_lat_jerk(float value);

  // float yawrate = 16;
  void clear_yawrate();
  static const int kYawrateFieldNumber = 16;
  float yawrate() const;
  void set_yawrate(float value);

  // float steerwheeltorq = 17;
  void clear_steerwheeltorq();
  static const int kSteerwheeltorqFieldNumber = 17;
  float steerwheeltorq() const;
  void set_steerwheeltorq(float value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.VehicleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float steerangle_;
  float speed_;
  ::google::protobuf::int32 dcdc_work_state_;
  ::google::protobuf::int32 batterystatus_;
  ::google::protobuf::int32 shift_position_;
  ::google::protobuf::int32 epb_status_;
  ::google::protobuf::int32 current_drive_mode_;
  ::google::protobuf::int32 control_switch_state_;
  ::google::protobuf::int32 brake_switch_state_;
  float break_pressure_;
  float accpedalposi_;
  float lon_accel_;
  float lon_jerk_;
  float lat_accel_;
  float lat_jerk_;
  float yawrate_;
  float steerwheeltorq_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsVehicleInfoImpl();
};
// -------------------------------------------------------------------

class VehicleState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.VehicleState) */ {
 public:
  VehicleState();
  virtual ~VehicleState();

  VehicleState(const VehicleState& from);

  inline VehicleState& operator=(const VehicleState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleState(VehicleState&& from) noexcept
    : VehicleState() {
    *this = ::std::move(from);
  }

  inline VehicleState& operator=(VehicleState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleState* internal_default_instance() {
    return reinterpret_cast<const VehicleState*>(
               &_VehicleState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(VehicleState* other);
  friend void swap(VehicleState& a, VehicleState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleState* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleState& from);
  void MergeFrom(const VehicleState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 brake_light_state = 1;
  void clear_brake_light_state();
  static const int kBrakeLightStateFieldNumber = 1;
  ::google::protobuf::int32 brake_light_state() const;
  void set_brake_light_state(::google::protobuf::int32 value);

  // int32 doubleflash_light_state = 2;
  void clear_doubleflash_light_state();
  static const int kDoubleflashLightStateFieldNumber = 2;
  ::google::protobuf::int32 doubleflash_light_state() const;
  void set_doubleflash_light_state(::google::protobuf::int32 value);

  // int32 lowbeam_state = 3;
  void clear_lowbeam_state();
  static const int kLowbeamStateFieldNumber = 3;
  ::google::protobuf::int32 lowbeam_state() const;
  void set_lowbeam_state(::google::protobuf::int32 value);

  // int32 highbeam_state = 4;
  void clear_highbeam_state();
  static const int kHighbeamStateFieldNumber = 4;
  ::google::protobuf::int32 highbeam_state() const;
  void set_highbeam_state(::google::protobuf::int32 value);

  // int32 leftturn_light_state = 5;
  void clear_leftturn_light_state();
  static const int kLeftturnLightStateFieldNumber = 5;
  ::google::protobuf::int32 leftturn_light_state() const;
  void set_leftturn_light_state(::google::protobuf::int32 value);

  // int32 rightturn_light_state = 6;
  void clear_rightturn_light_state();
  static const int kRightturnLightStateFieldNumber = 6;
  ::google::protobuf::int32 rightturn_light_state() const;
  void set_rightturn_light_state(::google::protobuf::int32 value);

  // int32 frontfog_light_state = 7;
  void clear_frontfog_light_state();
  static const int kFrontfogLightStateFieldNumber = 7;
  ::google::protobuf::int32 frontfog_light_state() const;
  void set_frontfog_light_state(::google::protobuf::int32 value);

  // int32 rearfog_light_state = 8;
  void clear_rearfog_light_state();
  static const int kRearfogLightStateFieldNumber = 8;
  ::google::protobuf::int32 rearfog_light_state() const;
  void set_rearfog_light_state(::google::protobuf::int32 value);

  // int32 tail_light_state = 9;
  void clear_tail_light_state();
  static const int kTailLightStateFieldNumber = 9;
  ::google::protobuf::int32 tail_light_state() const;
  void set_tail_light_state(::google::protobuf::int32 value);

  // int32 horn_state = 10;
  void clear_horn_state();
  static const int kHornStateFieldNumber = 10;
  ::google::protobuf::int32 horn_state() const;
  void set_horn_state(::google::protobuf::int32 value);

  // int32 wiper_state = 11;
  void clear_wiper_state();
  static const int kWiperStateFieldNumber = 11;
  ::google::protobuf::int32 wiper_state() const;
  void set_wiper_state(::google::protobuf::int32 value);

  // int32 driver_door_state = 12;
  void clear_driver_door_state();
  static const int kDriverDoorStateFieldNumber = 12;
  ::google::protobuf::int32 driver_door_state() const;
  void set_driver_door_state(::google::protobuf::int32 value);

  // int32 passager_door_state = 13;
  void clear_passager_door_state();
  static const int kPassagerDoorStateFieldNumber = 13;
  ::google::protobuf::int32 passager_door_state() const;
  void set_passager_door_state(::google::protobuf::int32 value);

  // int32 driver_door_lock_state = 14;
  void clear_driver_door_lock_state();
  static const int kDriverDoorLockStateFieldNumber = 14;
  ::google::protobuf::int32 driver_door_lock_state() const;
  void set_driver_door_lock_state(::google::protobuf::int32 value);

  // int32 passager_door_lock_state = 15;
  void clear_passager_door_lock_state();
  static const int kPassagerDoorLockStateFieldNumber = 15;
  ::google::protobuf::int32 passager_door_lock_state() const;
  void set_passager_door_lock_state(::google::protobuf::int32 value);

  // int32 left_rear_door_lock_state = 16;
  void clear_left_rear_door_lock_state();
  static const int kLeftRearDoorLockStateFieldNumber = 16;
  ::google::protobuf::int32 left_rear_door_lock_state() const;
  void set_left_rear_door_lock_state(::google::protobuf::int32 value);

  // int32 right_rear_door_lock_state = 17;
  void clear_right_rear_door_lock_state();
  static const int kRightRearDoorLockStateFieldNumber = 17;
  ::google::protobuf::int32 right_rear_door_lock_state() const;
  void set_right_rear_door_lock_state(::google::protobuf::int32 value);

  // int32 trunk_state = 18;
  void clear_trunk_state();
  static const int kTrunkStateFieldNumber = 18;
  ::google::protobuf::int32 trunk_state() const;
  void set_trunk_state(::google::protobuf::int32 value);

  // int32 driver_seatbeltrst = 19;
  void clear_driver_seatbeltrst();
  static const int kDriverSeatbeltrstFieldNumber = 19;
  ::google::protobuf::int32 driver_seatbeltrst() const;
  void set_driver_seatbeltrst(::google::protobuf::int32 value);

  // int32 passager_seatbeltrst = 20;
  void clear_passager_seatbeltrst();
  static const int kPassagerSeatbeltrstFieldNumber = 20;
  ::google::protobuf::int32 passager_seatbeltrst() const;
  void set_passager_seatbeltrst(::google::protobuf::int32 value);

  // double bms_battery_soc = 21;
  void clear_bms_battery_soc();
  static const int kBmsBatterySocFieldNumber = 21;
  double bms_battery_soc() const;
  void set_bms_battery_soc(double value);

  // double vehicle_total_mile = 22;
  void clear_vehicle_total_mile();
  static const int kVehicleTotalMileFieldNumber = 22;
  double vehicle_total_mile() const;
  void set_vehicle_total_mile(double value);

  // double mile_left_over = 23;
  void clear_mile_left_over();
  static const int kMileLeftOverFieldNumber = 23;
  double mile_left_over() const;
  void set_mile_left_over(double value);

  // double vehicle_temperature = 24;
  void clear_vehicle_temperature();
  static const int kVehicleTemperatureFieldNumber = 24;
  double vehicle_temperature() const;
  void set_vehicle_temperature(double value);

  // int32 front_washer_state = 25;
  void clear_front_washer_state();
  static const int kFrontWasherStateFieldNumber = 25;
  ::google::protobuf::int32 front_washer_state() const;
  void set_front_washer_state(::google::protobuf::int32 value);

  // int32 top_light_state = 26;
  void clear_top_light_state();
  static const int kTopLightStateFieldNumber = 26;
  ::google::protobuf::int32 top_light_state() const;
  void set_top_light_state(::google::protobuf::int32 value);

  // int32 tyre_state = 27;
  void clear_tyre_state();
  static const int kTyreStateFieldNumber = 27;
  ::google::protobuf::int32 tyre_state() const;
  void set_tyre_state(::google::protobuf::int32 value);

  // int32 eps_mode_fb = 28;
  void clear_eps_mode_fb();
  static const int kEpsModeFbFieldNumber = 28;
  ::google::protobuf::int32 eps_mode_fb() const;
  void set_eps_mode_fb(::google::protobuf::int32 value);

  // int32 accl_mode_fb = 29;
  void clear_accl_mode_fb();
  static const int kAcclModeFbFieldNumber = 29;
  ::google::protobuf::int32 accl_mode_fb() const;
  void set_accl_mode_fb(::google::protobuf::int32 value);

  // int32 brak_mode_fb = 30;
  void clear_brak_mode_fb();
  static const int kBrakModeFbFieldNumber = 30;
  ::google::protobuf::int32 brak_mode_fb() const;
  void set_brak_mode_fb(::google::protobuf::int32 value);

  // int32 epb_mode_fb = 31;
  void clear_epb_mode_fb();
  static const int kEpbModeFbFieldNumber = 31;
  ::google::protobuf::int32 epb_mode_fb() const;
  void set_epb_mode_fb(::google::protobuf::int32 value);

  // int32 bcm_mode_fb = 32;
  void clear_bcm_mode_fb();
  static const int kBcmModeFbFieldNumber = 32;
  ::google::protobuf::int32 bcm_mode_fb() const;
  void set_bcm_mode_fb(::google::protobuf::int32 value);

  // int32 accl_allow = 33;
  void clear_accl_allow();
  static const int kAcclAllowFieldNumber = 33;
  ::google::protobuf::int32 accl_allow() const;
  void set_accl_allow(::google::protobuf::int32 value);

  // int32 epb_allow = 34;
  void clear_epb_allow();
  static const int kEpbAllowFieldNumber = 34;
  ::google::protobuf::int32 epb_allow() const;
  void set_epb_allow(::google::protobuf::int32 value);

  // int32 gear_intervene = 35;
  void clear_gear_intervene();
  static const int kGearInterveneFieldNumber = 35;
  ::google::protobuf::int32 gear_intervene() const;
  void set_gear_intervene(::google::protobuf::int32 value);

  // int32 vcu_ad_exitreq = 36;
  void clear_vcu_ad_exitreq();
  static const int kVcuAdExitreqFieldNumber = 36;
  ::google::protobuf::int32 vcu_ad_exitreq() const;
  void set_vcu_ad_exitreq(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.VehicleState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 brake_light_state_;
  ::google::protobuf::int32 doubleflash_light_state_;
  ::google::protobuf::int32 lowbeam_state_;
  ::google::protobuf::int32 highbeam_state_;
  ::google::protobuf::int32 leftturn_light_state_;
  ::google::protobuf::int32 rightturn_light_state_;
  ::google::protobuf::int32 frontfog_light_state_;
  ::google::protobuf::int32 rearfog_light_state_;
  ::google::protobuf::int32 tail_light_state_;
  ::google::protobuf::int32 horn_state_;
  ::google::protobuf::int32 wiper_state_;
  ::google::protobuf::int32 driver_door_state_;
  ::google::protobuf::int32 passager_door_state_;
  ::google::protobuf::int32 driver_door_lock_state_;
  ::google::protobuf::int32 passager_door_lock_state_;
  ::google::protobuf::int32 left_rear_door_lock_state_;
  ::google::protobuf::int32 right_rear_door_lock_state_;
  ::google::protobuf::int32 trunk_state_;
  ::google::protobuf::int32 driver_seatbeltrst_;
  ::google::protobuf::int32 passager_seatbeltrst_;
  double bms_battery_soc_;
  double vehicle_total_mile_;
  double mile_left_over_;
  double vehicle_temperature_;
  ::google::protobuf::int32 front_washer_state_;
  ::google::protobuf::int32 top_light_state_;
  ::google::protobuf::int32 tyre_state_;
  ::google::protobuf::int32 eps_mode_fb_;
  ::google::protobuf::int32 accl_mode_fb_;
  ::google::protobuf::int32 brak_mode_fb_;
  ::google::protobuf::int32 epb_mode_fb_;
  ::google::protobuf::int32 bcm_mode_fb_;
  ::google::protobuf::int32 accl_allow_;
  ::google::protobuf::int32 epb_allow_;
  ::google::protobuf::int32 gear_intervene_;
  ::google::protobuf::int32 vcu_ad_exitreq_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsVehicleStateImpl();
};
// -------------------------------------------------------------------

class VehicleFeedback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.VehicleFeedback) */ {
 public:
  VehicleFeedback();
  virtual ~VehicleFeedback();

  VehicleFeedback(const VehicleFeedback& from);

  inline VehicleFeedback& operator=(const VehicleFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleFeedback(VehicleFeedback&& from) noexcept
    : VehicleFeedback() {
    *this = ::std::move(from);
  }

  inline VehicleFeedback& operator=(VehicleFeedback&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleFeedback& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleFeedback* internal_default_instance() {
    return reinterpret_cast<const VehicleFeedback*>(
               &_VehicleFeedback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(VehicleFeedback* other);
  friend void swap(VehicleFeedback& a, VehicleFeedback& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleFeedback* New() const PROTOBUF_FINAL { return New(NULL); }

  VehicleFeedback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VehicleFeedback& from);
  void MergeFrom(const VehicleFeedback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VehicleFeedback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Canbus.proto.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::Canbus::proto::Header& header() const;
  ::Canbus::proto::Header* release_header();
  ::Canbus::proto::Header* mutable_header();
  void set_allocated_header(::Canbus::proto::Header* header);

  // .Canbus.proto.VehicleInfo vehicle_info = 2;
  bool has_vehicle_info() const;
  void clear_vehicle_info();
  static const int kVehicleInfoFieldNumber = 2;
  const ::Canbus::proto::VehicleInfo& vehicle_info() const;
  ::Canbus::proto::VehicleInfo* release_vehicle_info();
  ::Canbus::proto::VehicleInfo* mutable_vehicle_info();
  void set_allocated_vehicle_info(::Canbus::proto::VehicleInfo* vehicle_info);

  // .Canbus.proto.KeyState key_state = 3;
  bool has_key_state() const;
  void clear_key_state();
  static const int kKeyStateFieldNumber = 3;
  const ::Canbus::proto::KeyState& key_state() const;
  ::Canbus::proto::KeyState* release_key_state();
  ::Canbus::proto::KeyState* mutable_key_state();
  void set_allocated_key_state(::Canbus::proto::KeyState* key_state);

  // .Canbus.proto.VehicleState vehicle_state = 4;
  bool has_vehicle_state() const;
  void clear_vehicle_state();
  static const int kVehicleStateFieldNumber = 4;
  const ::Canbus::proto::VehicleState& vehicle_state() const;
  ::Canbus::proto::VehicleState* release_vehicle_state();
  ::Canbus::proto::VehicleState* mutable_vehicle_state();
  void set_allocated_vehicle_state(::Canbus::proto::VehicleState* vehicle_state);

  // .Canbus.proto.FaultInfo fault_info = 5;
  bool has_fault_info() const;
  void clear_fault_info();
  static const int kFaultInfoFieldNumber = 5;
  const ::Canbus::proto::FaultInfo& fault_info() const;
  ::Canbus::proto::FaultInfo* release_fault_info();
  ::Canbus::proto::FaultInfo* mutable_fault_info();
  void set_allocated_fault_info(::Canbus::proto::FaultInfo* fault_info);

  // @@protoc_insertion_point(class_scope:Canbus.proto.VehicleFeedback)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Canbus::proto::Header* header_;
  ::Canbus::proto::VehicleInfo* vehicle_info_;
  ::Canbus::proto::KeyState* key_state_;
  ::Canbus::proto::VehicleState* vehicle_state_;
  ::Canbus::proto::FaultInfo* fault_info_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsVehicleFeedbackImpl();
};
// -------------------------------------------------------------------

class AddOnFeedback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Canbus.proto.AddOnFeedback) */ {
 public:
  AddOnFeedback();
  virtual ~AddOnFeedback();

  AddOnFeedback(const AddOnFeedback& from);

  inline AddOnFeedback& operator=(const AddOnFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddOnFeedback(AddOnFeedback&& from) noexcept
    : AddOnFeedback() {
    *this = ::std::move(from);
  }

  inline AddOnFeedback& operator=(AddOnFeedback&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOnFeedback& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddOnFeedback* internal_default_instance() {
    return reinterpret_cast<const AddOnFeedback*>(
               &_AddOnFeedback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(AddOnFeedback* other);
  friend void swap(AddOnFeedback& a, AddOnFeedback& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddOnFeedback* New() const PROTOBUF_FINAL { return New(NULL); }

  AddOnFeedback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddOnFeedback& from);
  void MergeFrom(const AddOnFeedback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddOnFeedback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Canbus.proto.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::Canbus::proto::Header& header() const;
  ::Canbus::proto::Header* release_header();
  ::Canbus::proto::Header* mutable_header();
  void set_allocated_header(::Canbus::proto::Header* header);

  // int32 slow_brake_key_2_state = 2;
  void clear_slow_brake_key_2_state();
  static const int kSlowBrakeKey2StateFieldNumber = 2;
  ::google::protobuf::int32 slow_brake_key_2_state() const;
  void set_slow_brake_key_2_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Canbus.proto.AddOnFeedback)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Canbus::proto::Header* header_;
  ::google::protobuf::int32 slow_brake_key_2_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_Canbus_2eproto::TableStruct;
  friend void ::protobuf_Canbus_2eproto::InitDefaultsAddOnFeedbackImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// double timestamp_sec = 1;
inline void Header::clear_timestamp_sec() {
  timestamp_sec_ = 0;
}
inline double Header::timestamp_sec() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.Header.timestamp_sec)
  return timestamp_sec_;
}
inline void Header::set_timestamp_sec(double value) {
  
  timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.Header.timestamp_sec)
}

// string module_name = 2;
inline void Header::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::module_name() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.Header.module_name)
  return module_name_.GetNoArena();
}
inline void Header::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Canbus.proto.Header.module_name)
}
#if LANG_CXX11
inline void Header::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Canbus.proto.Header.module_name)
}
#endif
inline void Header::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Canbus.proto.Header.module_name)
}
inline void Header::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Canbus.proto.Header.module_name)
}
inline ::std::string* Header::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:Canbus.proto.Header.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_module_name() {
  // @@protoc_insertion_point(field_release:Canbus.proto.Header.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.Header.module_name)
}

// uint32 sequence_num = 3;
inline void Header::clear_sequence_num() {
  sequence_num_ = 0u;
}
inline ::google::protobuf::uint32 Header::sequence_num() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.Header.sequence_num)
  return sequence_num_;
}
inline void Header::set_sequence_num(::google::protobuf::uint32 value) {
  
  sequence_num_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.Header.sequence_num)
}

// string version = 4;
inline void Header::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::version() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.Header.version)
  return version_.GetNoArena();
}
inline void Header::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Canbus.proto.Header.version)
}
#if LANG_CXX11
inline void Header::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Canbus.proto.Header.version)
}
#endif
inline void Header::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Canbus.proto.Header.version)
}
inline void Header::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Canbus.proto.Header.version)
}
inline ::std::string* Header::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:Canbus.proto.Header.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_version() {
  // @@protoc_insertion_point(field_release:Canbus.proto.Header.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.Header.version)
}

// -------------------------------------------------------------------

// FaultInfo

// int32 EPS_fault = 1;
inline void FaultInfo::clear_eps_fault() {
  eps_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::eps_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.EPS_fault)
  return eps_fault_;
}
inline void FaultInfo::set_eps_fault(::google::protobuf::int32 value) {
  
  eps_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.EPS_fault)
}

// int32 Brake_fault = 2;
inline void FaultInfo::clear_brake_fault() {
  brake_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::brake_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.Brake_fault)
  return brake_fault_;
}
inline void FaultInfo::set_brake_fault(::google::protobuf::int32 value) {
  
  brake_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.Brake_fault)
}

// int32 Drive_fault = 3;
inline void FaultInfo::clear_drive_fault() {
  drive_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::drive_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.Drive_fault)
  return drive_fault_;
}
inline void FaultInfo::set_drive_fault(::google::protobuf::int32 value) {
  
  drive_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.Drive_fault)
}

// int32 EPB_fault = 4;
inline void FaultInfo::clear_epb_fault() {
  epb_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::epb_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.EPB_fault)
  return epb_fault_;
}
inline void FaultInfo::set_epb_fault(::google::protobuf::int32 value) {
  
  epb_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.EPB_fault)
}

// int32 Power12_Over_fault = 5;
inline void FaultInfo::clear_power12_over_fault() {
  power12_over_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::power12_over_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.Power12_Over_fault)
  return power12_over_fault_;
}
inline void FaultInfo::set_power12_over_fault(::google::protobuf::int32 value) {
  
  power12_over_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.Power12_Over_fault)
}

// int32 Power12_Low_fault = 6;
inline void FaultInfo::clear_power12_low_fault() {
  power12_low_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::power12_low_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.Power12_Low_fault)
  return power12_low_fault_;
}
inline void FaultInfo::set_power12_low_fault(::google::protobuf::int32 value) {
  
  power12_low_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.Power12_Low_fault)
}

// int32 PowerIGN_Over_fault = 7;
inline void FaultInfo::clear_powerign_over_fault() {
  powerign_over_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::powerign_over_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.PowerIGN_Over_fault)
  return powerign_over_fault_;
}
inline void FaultInfo::set_powerign_over_fault(::google::protobuf::int32 value) {
  
  powerign_over_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.PowerIGN_Over_fault)
}

// int32 PowerIGN_Low_fault = 8;
inline void FaultInfo::clear_powerign_low_fault() {
  powerign_low_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::powerign_low_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.PowerIGN_Low_fault)
  return powerign_low_fault_;
}
inline void FaultInfo::set_powerign_low_fault(::google::protobuf::int32 value) {
  
  powerign_low_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.PowerIGN_Low_fault)
}

// int32 EPS_Com_fault = 9;
inline void FaultInfo::clear_eps_com_fault() {
  eps_com_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::eps_com_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.EPS_Com_fault)
  return eps_com_fault_;
}
inline void FaultInfo::set_eps_com_fault(::google::protobuf::int32 value) {
  
  eps_com_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.EPS_Com_fault)
}

// int32 BCM_Com_fault = 10;
inline void FaultInfo::clear_bcm_com_fault() {
  bcm_com_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::bcm_com_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.BCM_Com_fault)
  return bcm_com_fault_;
}
inline void FaultInfo::set_bcm_com_fault(::google::protobuf::int32 value) {
  
  bcm_com_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.BCM_Com_fault)
}

// int32 EPB_Com_fault = 11;
inline void FaultInfo::clear_epb_com_fault() {
  epb_com_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::epb_com_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.EPB_Com_fault)
  return epb_com_fault_;
}
inline void FaultInfo::set_epb_com_fault(::google::protobuf::int32 value) {
  
  epb_com_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.EPB_Com_fault)
}

// int32 CPU_Com_fault = 12;
inline void FaultInfo::clear_cpu_com_fault() {
  cpu_com_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::cpu_com_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.CPU_Com_fault)
  return cpu_com_fault_;
}
inline void FaultInfo::set_cpu_com_fault(::google::protobuf::int32 value) {
  
  cpu_com_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.CPU_Com_fault)
}

// int32 VCU_Com_fault = 13;
inline void FaultInfo::clear_vcu_com_fault() {
  vcu_com_fault_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::vcu_com_fault() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.FaultInfo.VCU_Com_fault)
  return vcu_com_fault_;
}
inline void FaultInfo::set_vcu_com_fault(::google::protobuf::int32 value) {
  
  vcu_com_fault_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.FaultInfo.VCU_Com_fault)
}

// -------------------------------------------------------------------

// KeyState

// int32 emergency_brake_key_state = 1;
inline void KeyState::clear_emergency_brake_key_state() {
  emergency_brake_key_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::emergency_brake_key_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.emergency_brake_key_state)
  return emergency_brake_key_state_;
}
inline void KeyState::set_emergency_brake_key_state(::google::protobuf::int32 value) {
  
  emergency_brake_key_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.emergency_brake_key_state)
}

// int32 slow_brake_key_state = 2;
inline void KeyState::clear_slow_brake_key_state() {
  slow_brake_key_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::slow_brake_key_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.slow_brake_key_state)
  return slow_brake_key_state_;
}
inline void KeyState::set_slow_brake_key_state(::google::protobuf::int32 value) {
  
  slow_brake_key_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.slow_brake_key_state)
}

// int32 drive_key_state = 3;
inline void KeyState::clear_drive_key_state() {
  drive_key_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::drive_key_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.drive_key_state)
  return drive_key_state_;
}
inline void KeyState::set_drive_key_state(::google::protobuf::int32 value) {
  
  drive_key_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.drive_key_state)
}

// int32 break_state = 4;
inline void KeyState::clear_break_state() {
  break_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::break_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.break_state)
  return break_state_;
}
inline void KeyState::set_break_state(::google::protobuf::int32 value) {
  
  break_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.break_state)
}

// int32 auto_switch_state = 5;
inline void KeyState::clear_auto_switch_state() {
  auto_switch_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::auto_switch_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.auto_switch_state)
  return auto_switch_state_;
}
inline void KeyState::set_auto_switch_state(::google::protobuf::int32 value) {
  
  auto_switch_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.auto_switch_state)
}

// int32 active_switch_state = 6;
inline void KeyState::clear_active_switch_state() {
  active_switch_state_ = 0;
}
inline ::google::protobuf::int32 KeyState::active_switch_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.active_switch_state)
  return active_switch_state_;
}
inline void KeyState::set_active_switch_state(::google::protobuf::int32 value) {
  
  active_switch_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.active_switch_state)
}

// int32 steer_left_up = 7;
inline void KeyState::clear_steer_left_up() {
  steer_left_up_ = 0;
}
inline ::google::protobuf::int32 KeyState::steer_left_up() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.steer_left_up)
  return steer_left_up_;
}
inline void KeyState::set_steer_left_up(::google::protobuf::int32 value) {
  
  steer_left_up_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.steer_left_up)
}

// int32 steer_left_down = 8;
inline void KeyState::clear_steer_left_down() {
  steer_left_down_ = 0;
}
inline ::google::protobuf::int32 KeyState::steer_left_down() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.steer_left_down)
  return steer_left_down_;
}
inline void KeyState::set_steer_left_down(::google::protobuf::int32 value) {
  
  steer_left_down_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.steer_left_down)
}

// int32 steer_left_left = 9;
inline void KeyState::clear_steer_left_left() {
  steer_left_left_ = 0;
}
inline ::google::protobuf::int32 KeyState::steer_left_left() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.steer_left_left)
  return steer_left_left_;
}
inline void KeyState::set_steer_left_left(::google::protobuf::int32 value) {
  
  steer_left_left_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.steer_left_left)
}

// int32 steer_left_right = 10;
inline void KeyState::clear_steer_left_right() {
  steer_left_right_ = 0;
}
inline ::google::protobuf::int32 KeyState::steer_left_right() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.steer_left_right)
  return steer_left_right_;
}
inline void KeyState::set_steer_left_right(::google::protobuf::int32 value) {
  
  steer_left_right_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.steer_left_right)
}

// int32 turn_light_switch = 11;
inline void KeyState::clear_turn_light_switch() {
  turn_light_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::turn_light_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.turn_light_switch)
  return turn_light_switch_;
}
inline void KeyState::set_turn_light_switch(::google::protobuf::int32 value) {
  
  turn_light_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.turn_light_switch)
}

// int32 position_light_switch = 12;
inline void KeyState::clear_position_light_switch() {
  position_light_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::position_light_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.position_light_switch)
  return position_light_switch_;
}
inline void KeyState::set_position_light_switch(::google::protobuf::int32 value) {
  
  position_light_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.position_light_switch)
}

// int32 front_wiper_switch = 13;
inline void KeyState::clear_front_wiper_switch() {
  front_wiper_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::front_wiper_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.front_wiper_switch)
  return front_wiper_switch_;
}
inline void KeyState::set_front_wiper_switch(::google::protobuf::int32 value) {
  
  front_wiper_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.front_wiper_switch)
}

// int32 hazard_lamp_switch = 14;
inline void KeyState::clear_hazard_lamp_switch() {
  hazard_lamp_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::hazard_lamp_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.hazard_lamp_switch)
  return hazard_lamp_switch_;
}
inline void KeyState::set_hazard_lamp_switch(::google::protobuf::int32 value) {
  
  hazard_lamp_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.hazard_lamp_switch)
}

// int32 door_closing_button = 15;
inline void KeyState::clear_door_closing_button() {
  door_closing_button_ = 0;
}
inline ::google::protobuf::int32 KeyState::door_closing_button() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.door_closing_button)
  return door_closing_button_;
}
inline void KeyState::set_door_closing_button(::google::protobuf::int32 value) {
  
  door_closing_button_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.door_closing_button)
}

// int32 door_opening_button = 16;
inline void KeyState::clear_door_opening_button() {
  door_opening_button_ = 0;
}
inline ::google::protobuf::int32 KeyState::door_opening_button() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.door_opening_button)
  return door_opening_button_;
}
inline void KeyState::set_door_opening_button(::google::protobuf::int32 value) {
  
  door_opening_button_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.door_opening_button)
}

// int32 top_light_button = 17;
inline void KeyState::clear_top_light_button() {
  top_light_button_ = 0;
}
inline ::google::protobuf::int32 KeyState::top_light_button() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.top_light_button)
  return top_light_button_;
}
inline void KeyState::set_top_light_button(::google::protobuf::int32 value) {
  
  top_light_button_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.top_light_button)
}

// int32 front_washer_switch = 18;
inline void KeyState::clear_front_washer_switch() {
  front_washer_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::front_washer_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.front_washer_switch)
  return front_washer_switch_;
}
inline void KeyState::set_front_washer_switch(::google::protobuf::int32 value) {
  
  front_washer_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.front_washer_switch)
}

// int32 lowbeam_switch = 19;
inline void KeyState::clear_lowbeam_switch() {
  lowbeam_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::lowbeam_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.lowbeam_switch)
  return lowbeam_switch_;
}
inline void KeyState::set_lowbeam_switch(::google::protobuf::int32 value) {
  
  lowbeam_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.lowbeam_switch)
}

// int32 highbeam_switch = 20;
inline void KeyState::clear_highbeam_switch() {
  highbeam_switch_ = 0;
}
inline ::google::protobuf::int32 KeyState::highbeam_switch() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.KeyState.highbeam_switch)
  return highbeam_switch_;
}
inline void KeyState::set_highbeam_switch(::google::protobuf::int32 value) {
  
  highbeam_switch_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.KeyState.highbeam_switch)
}

// -------------------------------------------------------------------

// VehicleInfo

// float steerangle = 1;
inline void VehicleInfo::clear_steerangle() {
  steerangle_ = 0;
}
inline float VehicleInfo::steerangle() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.steerangle)
  return steerangle_;
}
inline void VehicleInfo::set_steerangle(float value) {
  
  steerangle_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.steerangle)
}

// float speed = 2;
inline void VehicleInfo::clear_speed() {
  speed_ = 0;
}
inline float VehicleInfo::speed() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.speed)
  return speed_;
}
inline void VehicleInfo::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.speed)
}

// int32 DCDC_work_state = 3;
inline void VehicleInfo::clear_dcdc_work_state() {
  dcdc_work_state_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::dcdc_work_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.DCDC_work_state)
  return dcdc_work_state_;
}
inline void VehicleInfo::set_dcdc_work_state(::google::protobuf::int32 value) {
  
  dcdc_work_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.DCDC_work_state)
}

// int32 batteryStatus = 4;
inline void VehicleInfo::clear_batterystatus() {
  batterystatus_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::batterystatus() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.batteryStatus)
  return batterystatus_;
}
inline void VehicleInfo::set_batterystatus(::google::protobuf::int32 value) {
  
  batterystatus_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.batteryStatus)
}

// int32 shift_position = 5;
inline void VehicleInfo::clear_shift_position() {
  shift_position_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::shift_position() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.shift_position)
  return shift_position_;
}
inline void VehicleInfo::set_shift_position(::google::protobuf::int32 value) {
  
  shift_position_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.shift_position)
}

// int32 epb_status = 6;
inline void VehicleInfo::clear_epb_status() {
  epb_status_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::epb_status() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.epb_status)
  return epb_status_;
}
inline void VehicleInfo::set_epb_status(::google::protobuf::int32 value) {
  
  epb_status_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.epb_status)
}

// int32 current_drive_mode = 7;
inline void VehicleInfo::clear_current_drive_mode() {
  current_drive_mode_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::current_drive_mode() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.current_drive_mode)
  return current_drive_mode_;
}
inline void VehicleInfo::set_current_drive_mode(::google::protobuf::int32 value) {
  
  current_drive_mode_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.current_drive_mode)
}

// int32 control_switch_state = 8;
inline void VehicleInfo::clear_control_switch_state() {
  control_switch_state_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::control_switch_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.control_switch_state)
  return control_switch_state_;
}
inline void VehicleInfo::set_control_switch_state(::google::protobuf::int32 value) {
  
  control_switch_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.control_switch_state)
}

// int32 brake_switch_state = 9;
inline void VehicleInfo::clear_brake_switch_state() {
  brake_switch_state_ = 0;
}
inline ::google::protobuf::int32 VehicleInfo::brake_switch_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.brake_switch_state)
  return brake_switch_state_;
}
inline void VehicleInfo::set_brake_switch_state(::google::protobuf::int32 value) {
  
  brake_switch_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.brake_switch_state)
}

// float break_pressure = 10;
inline void VehicleInfo::clear_break_pressure() {
  break_pressure_ = 0;
}
inline float VehicleInfo::break_pressure() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.break_pressure)
  return break_pressure_;
}
inline void VehicleInfo::set_break_pressure(float value) {
  
  break_pressure_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.break_pressure)
}

// float accpedalposi = 11;
inline void VehicleInfo::clear_accpedalposi() {
  accpedalposi_ = 0;
}
inline float VehicleInfo::accpedalposi() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.accpedalposi)
  return accpedalposi_;
}
inline void VehicleInfo::set_accpedalposi(float value) {
  
  accpedalposi_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.accpedalposi)
}

// float lon_accel = 12;
inline void VehicleInfo::clear_lon_accel() {
  lon_accel_ = 0;
}
inline float VehicleInfo::lon_accel() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.lon_accel)
  return lon_accel_;
}
inline void VehicleInfo::set_lon_accel(float value) {
  
  lon_accel_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.lon_accel)
}

// float lon_jerk = 13;
inline void VehicleInfo::clear_lon_jerk() {
  lon_jerk_ = 0;
}
inline float VehicleInfo::lon_jerk() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.lon_jerk)
  return lon_jerk_;
}
inline void VehicleInfo::set_lon_jerk(float value) {
  
  lon_jerk_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.lon_jerk)
}

// float lat_accel = 14;
inline void VehicleInfo::clear_lat_accel() {
  lat_accel_ = 0;
}
inline float VehicleInfo::lat_accel() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.lat_accel)
  return lat_accel_;
}
inline void VehicleInfo::set_lat_accel(float value) {
  
  lat_accel_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.lat_accel)
}

// float lat_jerk = 15;
inline void VehicleInfo::clear_lat_jerk() {
  lat_jerk_ = 0;
}
inline float VehicleInfo::lat_jerk() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.lat_jerk)
  return lat_jerk_;
}
inline void VehicleInfo::set_lat_jerk(float value) {
  
  lat_jerk_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.lat_jerk)
}

// float yawrate = 16;
inline void VehicleInfo::clear_yawrate() {
  yawrate_ = 0;
}
inline float VehicleInfo::yawrate() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.yawrate)
  return yawrate_;
}
inline void VehicleInfo::set_yawrate(float value) {
  
  yawrate_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.yawrate)
}

// float steerwheeltorq = 17;
inline void VehicleInfo::clear_steerwheeltorq() {
  steerwheeltorq_ = 0;
}
inline float VehicleInfo::steerwheeltorq() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleInfo.steerwheeltorq)
  return steerwheeltorq_;
}
inline void VehicleInfo::set_steerwheeltorq(float value) {
  
  steerwheeltorq_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleInfo.steerwheeltorq)
}

// -------------------------------------------------------------------

// VehicleState

// int32 brake_light_state = 1;
inline void VehicleState::clear_brake_light_state() {
  brake_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::brake_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.brake_light_state)
  return brake_light_state_;
}
inline void VehicleState::set_brake_light_state(::google::protobuf::int32 value) {
  
  brake_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.brake_light_state)
}

// int32 doubleflash_light_state = 2;
inline void VehicleState::clear_doubleflash_light_state() {
  doubleflash_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::doubleflash_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.doubleflash_light_state)
  return doubleflash_light_state_;
}
inline void VehicleState::set_doubleflash_light_state(::google::protobuf::int32 value) {
  
  doubleflash_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.doubleflash_light_state)
}

// int32 lowbeam_state = 3;
inline void VehicleState::clear_lowbeam_state() {
  lowbeam_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::lowbeam_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.lowbeam_state)
  return lowbeam_state_;
}
inline void VehicleState::set_lowbeam_state(::google::protobuf::int32 value) {
  
  lowbeam_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.lowbeam_state)
}

// int32 highbeam_state = 4;
inline void VehicleState::clear_highbeam_state() {
  highbeam_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::highbeam_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.highbeam_state)
  return highbeam_state_;
}
inline void VehicleState::set_highbeam_state(::google::protobuf::int32 value) {
  
  highbeam_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.highbeam_state)
}

// int32 leftturn_light_state = 5;
inline void VehicleState::clear_leftturn_light_state() {
  leftturn_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::leftturn_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.leftturn_light_state)
  return leftturn_light_state_;
}
inline void VehicleState::set_leftturn_light_state(::google::protobuf::int32 value) {
  
  leftturn_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.leftturn_light_state)
}

// int32 rightturn_light_state = 6;
inline void VehicleState::clear_rightturn_light_state() {
  rightturn_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::rightturn_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.rightturn_light_state)
  return rightturn_light_state_;
}
inline void VehicleState::set_rightturn_light_state(::google::protobuf::int32 value) {
  
  rightturn_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.rightturn_light_state)
}

// int32 frontfog_light_state = 7;
inline void VehicleState::clear_frontfog_light_state() {
  frontfog_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::frontfog_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.frontfog_light_state)
  return frontfog_light_state_;
}
inline void VehicleState::set_frontfog_light_state(::google::protobuf::int32 value) {
  
  frontfog_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.frontfog_light_state)
}

// int32 rearfog_light_state = 8;
inline void VehicleState::clear_rearfog_light_state() {
  rearfog_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::rearfog_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.rearfog_light_state)
  return rearfog_light_state_;
}
inline void VehicleState::set_rearfog_light_state(::google::protobuf::int32 value) {
  
  rearfog_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.rearfog_light_state)
}

// int32 tail_light_state = 9;
inline void VehicleState::clear_tail_light_state() {
  tail_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::tail_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.tail_light_state)
  return tail_light_state_;
}
inline void VehicleState::set_tail_light_state(::google::protobuf::int32 value) {
  
  tail_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.tail_light_state)
}

// int32 horn_state = 10;
inline void VehicleState::clear_horn_state() {
  horn_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::horn_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.horn_state)
  return horn_state_;
}
inline void VehicleState::set_horn_state(::google::protobuf::int32 value) {
  
  horn_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.horn_state)
}

// int32 wiper_state = 11;
inline void VehicleState::clear_wiper_state() {
  wiper_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::wiper_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.wiper_state)
  return wiper_state_;
}
inline void VehicleState::set_wiper_state(::google::protobuf::int32 value) {
  
  wiper_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.wiper_state)
}

// int32 driver_door_state = 12;
inline void VehicleState::clear_driver_door_state() {
  driver_door_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::driver_door_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.driver_door_state)
  return driver_door_state_;
}
inline void VehicleState::set_driver_door_state(::google::protobuf::int32 value) {
  
  driver_door_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.driver_door_state)
}

// int32 passager_door_state = 13;
inline void VehicleState::clear_passager_door_state() {
  passager_door_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::passager_door_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.passager_door_state)
  return passager_door_state_;
}
inline void VehicleState::set_passager_door_state(::google::protobuf::int32 value) {
  
  passager_door_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.passager_door_state)
}

// int32 driver_door_lock_state = 14;
inline void VehicleState::clear_driver_door_lock_state() {
  driver_door_lock_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::driver_door_lock_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.driver_door_lock_state)
  return driver_door_lock_state_;
}
inline void VehicleState::set_driver_door_lock_state(::google::protobuf::int32 value) {
  
  driver_door_lock_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.driver_door_lock_state)
}

// int32 passager_door_lock_state = 15;
inline void VehicleState::clear_passager_door_lock_state() {
  passager_door_lock_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::passager_door_lock_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.passager_door_lock_state)
  return passager_door_lock_state_;
}
inline void VehicleState::set_passager_door_lock_state(::google::protobuf::int32 value) {
  
  passager_door_lock_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.passager_door_lock_state)
}

// int32 left_rear_door_lock_state = 16;
inline void VehicleState::clear_left_rear_door_lock_state() {
  left_rear_door_lock_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::left_rear_door_lock_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.left_rear_door_lock_state)
  return left_rear_door_lock_state_;
}
inline void VehicleState::set_left_rear_door_lock_state(::google::protobuf::int32 value) {
  
  left_rear_door_lock_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.left_rear_door_lock_state)
}

// int32 right_rear_door_lock_state = 17;
inline void VehicleState::clear_right_rear_door_lock_state() {
  right_rear_door_lock_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::right_rear_door_lock_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.right_rear_door_lock_state)
  return right_rear_door_lock_state_;
}
inline void VehicleState::set_right_rear_door_lock_state(::google::protobuf::int32 value) {
  
  right_rear_door_lock_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.right_rear_door_lock_state)
}

// int32 trunk_state = 18;
inline void VehicleState::clear_trunk_state() {
  trunk_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::trunk_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.trunk_state)
  return trunk_state_;
}
inline void VehicleState::set_trunk_state(::google::protobuf::int32 value) {
  
  trunk_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.trunk_state)
}

// int32 driver_seatbeltrst = 19;
inline void VehicleState::clear_driver_seatbeltrst() {
  driver_seatbeltrst_ = 0;
}
inline ::google::protobuf::int32 VehicleState::driver_seatbeltrst() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.driver_seatbeltrst)
  return driver_seatbeltrst_;
}
inline void VehicleState::set_driver_seatbeltrst(::google::protobuf::int32 value) {
  
  driver_seatbeltrst_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.driver_seatbeltrst)
}

// int32 passager_seatbeltrst = 20;
inline void VehicleState::clear_passager_seatbeltrst() {
  passager_seatbeltrst_ = 0;
}
inline ::google::protobuf::int32 VehicleState::passager_seatbeltrst() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.passager_seatbeltrst)
  return passager_seatbeltrst_;
}
inline void VehicleState::set_passager_seatbeltrst(::google::protobuf::int32 value) {
  
  passager_seatbeltrst_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.passager_seatbeltrst)
}

// double bms_battery_soc = 21;
inline void VehicleState::clear_bms_battery_soc() {
  bms_battery_soc_ = 0;
}
inline double VehicleState::bms_battery_soc() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.bms_battery_soc)
  return bms_battery_soc_;
}
inline void VehicleState::set_bms_battery_soc(double value) {
  
  bms_battery_soc_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.bms_battery_soc)
}

// double vehicle_total_mile = 22;
inline void VehicleState::clear_vehicle_total_mile() {
  vehicle_total_mile_ = 0;
}
inline double VehicleState::vehicle_total_mile() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.vehicle_total_mile)
  return vehicle_total_mile_;
}
inline void VehicleState::set_vehicle_total_mile(double value) {
  
  vehicle_total_mile_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.vehicle_total_mile)
}

// double mile_left_over = 23;
inline void VehicleState::clear_mile_left_over() {
  mile_left_over_ = 0;
}
inline double VehicleState::mile_left_over() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.mile_left_over)
  return mile_left_over_;
}
inline void VehicleState::set_mile_left_over(double value) {
  
  mile_left_over_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.mile_left_over)
}

// double vehicle_temperature = 24;
inline void VehicleState::clear_vehicle_temperature() {
  vehicle_temperature_ = 0;
}
inline double VehicleState::vehicle_temperature() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.vehicle_temperature)
  return vehicle_temperature_;
}
inline void VehicleState::set_vehicle_temperature(double value) {
  
  vehicle_temperature_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.vehicle_temperature)
}

// int32 front_washer_state = 25;
inline void VehicleState::clear_front_washer_state() {
  front_washer_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::front_washer_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.front_washer_state)
  return front_washer_state_;
}
inline void VehicleState::set_front_washer_state(::google::protobuf::int32 value) {
  
  front_washer_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.front_washer_state)
}

// int32 top_light_state = 26;
inline void VehicleState::clear_top_light_state() {
  top_light_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::top_light_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.top_light_state)
  return top_light_state_;
}
inline void VehicleState::set_top_light_state(::google::protobuf::int32 value) {
  
  top_light_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.top_light_state)
}

// int32 tyre_state = 27;
inline void VehicleState::clear_tyre_state() {
  tyre_state_ = 0;
}
inline ::google::protobuf::int32 VehicleState::tyre_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.tyre_state)
  return tyre_state_;
}
inline void VehicleState::set_tyre_state(::google::protobuf::int32 value) {
  
  tyre_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.tyre_state)
}

// int32 eps_mode_fb = 28;
inline void VehicleState::clear_eps_mode_fb() {
  eps_mode_fb_ = 0;
}
inline ::google::protobuf::int32 VehicleState::eps_mode_fb() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.eps_mode_fb)
  return eps_mode_fb_;
}
inline void VehicleState::set_eps_mode_fb(::google::protobuf::int32 value) {
  
  eps_mode_fb_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.eps_mode_fb)
}

// int32 accl_mode_fb = 29;
inline void VehicleState::clear_accl_mode_fb() {
  accl_mode_fb_ = 0;
}
inline ::google::protobuf::int32 VehicleState::accl_mode_fb() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.accl_mode_fb)
  return accl_mode_fb_;
}
inline void VehicleState::set_accl_mode_fb(::google::protobuf::int32 value) {
  
  accl_mode_fb_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.accl_mode_fb)
}

// int32 brak_mode_fb = 30;
inline void VehicleState::clear_brak_mode_fb() {
  brak_mode_fb_ = 0;
}
inline ::google::protobuf::int32 VehicleState::brak_mode_fb() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.brak_mode_fb)
  return brak_mode_fb_;
}
inline void VehicleState::set_brak_mode_fb(::google::protobuf::int32 value) {
  
  brak_mode_fb_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.brak_mode_fb)
}

// int32 epb_mode_fb = 31;
inline void VehicleState::clear_epb_mode_fb() {
  epb_mode_fb_ = 0;
}
inline ::google::protobuf::int32 VehicleState::epb_mode_fb() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.epb_mode_fb)
  return epb_mode_fb_;
}
inline void VehicleState::set_epb_mode_fb(::google::protobuf::int32 value) {
  
  epb_mode_fb_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.epb_mode_fb)
}

// int32 bcm_mode_fb = 32;
inline void VehicleState::clear_bcm_mode_fb() {
  bcm_mode_fb_ = 0;
}
inline ::google::protobuf::int32 VehicleState::bcm_mode_fb() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.bcm_mode_fb)
  return bcm_mode_fb_;
}
inline void VehicleState::set_bcm_mode_fb(::google::protobuf::int32 value) {
  
  bcm_mode_fb_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.bcm_mode_fb)
}

// int32 accl_allow = 33;
inline void VehicleState::clear_accl_allow() {
  accl_allow_ = 0;
}
inline ::google::protobuf::int32 VehicleState::accl_allow() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.accl_allow)
  return accl_allow_;
}
inline void VehicleState::set_accl_allow(::google::protobuf::int32 value) {
  
  accl_allow_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.accl_allow)
}

// int32 epb_allow = 34;
inline void VehicleState::clear_epb_allow() {
  epb_allow_ = 0;
}
inline ::google::protobuf::int32 VehicleState::epb_allow() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.epb_allow)
  return epb_allow_;
}
inline void VehicleState::set_epb_allow(::google::protobuf::int32 value) {
  
  epb_allow_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.epb_allow)
}

// int32 gear_intervene = 35;
inline void VehicleState::clear_gear_intervene() {
  gear_intervene_ = 0;
}
inline ::google::protobuf::int32 VehicleState::gear_intervene() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.gear_intervene)
  return gear_intervene_;
}
inline void VehicleState::set_gear_intervene(::google::protobuf::int32 value) {
  
  gear_intervene_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.gear_intervene)
}

// int32 vcu_ad_exitreq = 36;
inline void VehicleState::clear_vcu_ad_exitreq() {
  vcu_ad_exitreq_ = 0;
}
inline ::google::protobuf::int32 VehicleState::vcu_ad_exitreq() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleState.vcu_ad_exitreq)
  return vcu_ad_exitreq_;
}
inline void VehicleState::set_vcu_ad_exitreq(::google::protobuf::int32 value) {
  
  vcu_ad_exitreq_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.VehicleState.vcu_ad_exitreq)
}

// -------------------------------------------------------------------

// VehicleFeedback

// .Canbus.proto.Header header = 1;
inline bool VehicleFeedback::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void VehicleFeedback::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::Canbus::proto::Header& VehicleFeedback::header() const {
  const ::Canbus::proto::Header* p = header_;
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleFeedback.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::Header*>(
      &::Canbus::proto::_Header_default_instance_);
}
inline ::Canbus::proto::Header* VehicleFeedback::release_header() {
  // @@protoc_insertion_point(field_release:Canbus.proto.VehicleFeedback.header)
  
  ::Canbus::proto::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Canbus::proto::Header* VehicleFeedback::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Canbus::proto::Header;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.VehicleFeedback.header)
  return header_;
}
inline void VehicleFeedback::set_allocated_header(::Canbus::proto::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.VehicleFeedback.header)
}

// .Canbus.proto.VehicleInfo vehicle_info = 2;
inline bool VehicleFeedback::has_vehicle_info() const {
  return this != internal_default_instance() && vehicle_info_ != NULL;
}
inline void VehicleFeedback::clear_vehicle_info() {
  if (GetArenaNoVirtual() == NULL && vehicle_info_ != NULL) {
    delete vehicle_info_;
  }
  vehicle_info_ = NULL;
}
inline const ::Canbus::proto::VehicleInfo& VehicleFeedback::vehicle_info() const {
  const ::Canbus::proto::VehicleInfo* p = vehicle_info_;
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleFeedback.vehicle_info)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::VehicleInfo*>(
      &::Canbus::proto::_VehicleInfo_default_instance_);
}
inline ::Canbus::proto::VehicleInfo* VehicleFeedback::release_vehicle_info() {
  // @@protoc_insertion_point(field_release:Canbus.proto.VehicleFeedback.vehicle_info)
  
  ::Canbus::proto::VehicleInfo* temp = vehicle_info_;
  vehicle_info_ = NULL;
  return temp;
}
inline ::Canbus::proto::VehicleInfo* VehicleFeedback::mutable_vehicle_info() {
  
  if (vehicle_info_ == NULL) {
    vehicle_info_ = new ::Canbus::proto::VehicleInfo;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.VehicleFeedback.vehicle_info)
  return vehicle_info_;
}
inline void VehicleFeedback::set_allocated_vehicle_info(::Canbus::proto::VehicleInfo* vehicle_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicle_info_;
  }
  if (vehicle_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicle_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_info, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_info_ = vehicle_info;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.VehicleFeedback.vehicle_info)
}

// .Canbus.proto.KeyState key_state = 3;
inline bool VehicleFeedback::has_key_state() const {
  return this != internal_default_instance() && key_state_ != NULL;
}
inline void VehicleFeedback::clear_key_state() {
  if (GetArenaNoVirtual() == NULL && key_state_ != NULL) {
    delete key_state_;
  }
  key_state_ = NULL;
}
inline const ::Canbus::proto::KeyState& VehicleFeedback::key_state() const {
  const ::Canbus::proto::KeyState* p = key_state_;
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleFeedback.key_state)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::KeyState*>(
      &::Canbus::proto::_KeyState_default_instance_);
}
inline ::Canbus::proto::KeyState* VehicleFeedback::release_key_state() {
  // @@protoc_insertion_point(field_release:Canbus.proto.VehicleFeedback.key_state)
  
  ::Canbus::proto::KeyState* temp = key_state_;
  key_state_ = NULL;
  return temp;
}
inline ::Canbus::proto::KeyState* VehicleFeedback::mutable_key_state() {
  
  if (key_state_ == NULL) {
    key_state_ = new ::Canbus::proto::KeyState;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.VehicleFeedback.key_state)
  return key_state_;
}
inline void VehicleFeedback::set_allocated_key_state(::Canbus::proto::KeyState* key_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_state_;
  }
  if (key_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_state, submessage_arena);
    }
    
  } else {
    
  }
  key_state_ = key_state;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.VehicleFeedback.key_state)
}

// .Canbus.proto.VehicleState vehicle_state = 4;
inline bool VehicleFeedback::has_vehicle_state() const {
  return this != internal_default_instance() && vehicle_state_ != NULL;
}
inline void VehicleFeedback::clear_vehicle_state() {
  if (GetArenaNoVirtual() == NULL && vehicle_state_ != NULL) {
    delete vehicle_state_;
  }
  vehicle_state_ = NULL;
}
inline const ::Canbus::proto::VehicleState& VehicleFeedback::vehicle_state() const {
  const ::Canbus::proto::VehicleState* p = vehicle_state_;
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleFeedback.vehicle_state)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::VehicleState*>(
      &::Canbus::proto::_VehicleState_default_instance_);
}
inline ::Canbus::proto::VehicleState* VehicleFeedback::release_vehicle_state() {
  // @@protoc_insertion_point(field_release:Canbus.proto.VehicleFeedback.vehicle_state)
  
  ::Canbus::proto::VehicleState* temp = vehicle_state_;
  vehicle_state_ = NULL;
  return temp;
}
inline ::Canbus::proto::VehicleState* VehicleFeedback::mutable_vehicle_state() {
  
  if (vehicle_state_ == NULL) {
    vehicle_state_ = new ::Canbus::proto::VehicleState;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.VehicleFeedback.vehicle_state)
  return vehicle_state_;
}
inline void VehicleFeedback::set_allocated_vehicle_state(::Canbus::proto::VehicleState* vehicle_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vehicle_state_;
  }
  if (vehicle_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vehicle_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vehicle_state, submessage_arena);
    }
    
  } else {
    
  }
  vehicle_state_ = vehicle_state;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.VehicleFeedback.vehicle_state)
}

// .Canbus.proto.FaultInfo fault_info = 5;
inline bool VehicleFeedback::has_fault_info() const {
  return this != internal_default_instance() && fault_info_ != NULL;
}
inline void VehicleFeedback::clear_fault_info() {
  if (GetArenaNoVirtual() == NULL && fault_info_ != NULL) {
    delete fault_info_;
  }
  fault_info_ = NULL;
}
inline const ::Canbus::proto::FaultInfo& VehicleFeedback::fault_info() const {
  const ::Canbus::proto::FaultInfo* p = fault_info_;
  // @@protoc_insertion_point(field_get:Canbus.proto.VehicleFeedback.fault_info)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::FaultInfo*>(
      &::Canbus::proto::_FaultInfo_default_instance_);
}
inline ::Canbus::proto::FaultInfo* VehicleFeedback::release_fault_info() {
  // @@protoc_insertion_point(field_release:Canbus.proto.VehicleFeedback.fault_info)
  
  ::Canbus::proto::FaultInfo* temp = fault_info_;
  fault_info_ = NULL;
  return temp;
}
inline ::Canbus::proto::FaultInfo* VehicleFeedback::mutable_fault_info() {
  
  if (fault_info_ == NULL) {
    fault_info_ = new ::Canbus::proto::FaultInfo;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.VehicleFeedback.fault_info)
  return fault_info_;
}
inline void VehicleFeedback::set_allocated_fault_info(::Canbus::proto::FaultInfo* fault_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fault_info_;
  }
  if (fault_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fault_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fault_info, submessage_arena);
    }
    
  } else {
    
  }
  fault_info_ = fault_info;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.VehicleFeedback.fault_info)
}

// -------------------------------------------------------------------

// AddOnFeedback

// .Canbus.proto.Header header = 1;
inline bool AddOnFeedback::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddOnFeedback::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
inline const ::Canbus::proto::Header& AddOnFeedback::header() const {
  const ::Canbus::proto::Header* p = header_;
  // @@protoc_insertion_point(field_get:Canbus.proto.AddOnFeedback.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Canbus::proto::Header*>(
      &::Canbus::proto::_Header_default_instance_);
}
inline ::Canbus::proto::Header* AddOnFeedback::release_header() {
  // @@protoc_insertion_point(field_release:Canbus.proto.AddOnFeedback.header)
  
  ::Canbus::proto::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Canbus::proto::Header* AddOnFeedback::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::Canbus::proto::Header;
  }
  // @@protoc_insertion_point(field_mutable:Canbus.proto.AddOnFeedback.header)
  return header_;
}
inline void AddOnFeedback::set_allocated_header(::Canbus::proto::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete header_;
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Canbus.proto.AddOnFeedback.header)
}

// int32 slow_brake_key_2_state = 2;
inline void AddOnFeedback::clear_slow_brake_key_2_state() {
  slow_brake_key_2_state_ = 0;
}
inline ::google::protobuf::int32 AddOnFeedback::slow_brake_key_2_state() const {
  // @@protoc_insertion_point(field_get:Canbus.proto.AddOnFeedback.slow_brake_key_2_state)
  return slow_brake_key_2_state_;
}
inline void AddOnFeedback::set_slow_brake_key_2_state(::google::protobuf::int32 value) {
  
  slow_brake_key_2_state_ = value;
  // @@protoc_insertion_point(field_set:Canbus.proto.AddOnFeedback.slow_brake_key_2_state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace Canbus

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Canbus_2eproto__INCLUDED
