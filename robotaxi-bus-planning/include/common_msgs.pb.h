// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_msgs.proto

#ifndef PROTOBUF_common_5fmsgs_2eproto__INCLUDED
#define PROTOBUF_common_5fmsgs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_common_5fmsgs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[25];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTimeStatusImpl();
void InitDefaultsTimeStatus();
void InitDefaultsTimeStatisticsImpl();
void InitDefaultsTimeStatistics();
void InitDefaultsFaultInfoImpl();
void InitDefaultsFaultInfo();
void InitDefaultsFaultVecImpl();
void InitDefaultsFaultVec();
void InitDefaultsHeaderImpl();
void InitDefaultsHeader();
void InitDefaultsAvosClockImpl();
void InitDefaultsAvosClock();
void InitDefaultsAvosTimeImpl();
void InitDefaultsAvosTime();
void InitDefaultsUnsureVarImpl();
void InitDefaultsUnsureVar();
void InitDefaultsVector3WithCovarianceImpl();
void InitDefaultsVector3WithCovariance();
void InitDefaultsQuaternionImpl();
void InitDefaultsQuaternion();
void InitDefaultsVector3Impl();
void InitDefaultsVector3();
void InitDefaultsUnsurePointImpl();
void InitDefaultsUnsurePoint();
void InitDefaultsUnsurePositionImpl();
void InitDefaultsUnsurePosition();
void InitDefaultsEulerWithCovarianceImpl();
void InitDefaultsEulerWithCovariance();
void InitDefaultsPoseEulerImpl();
void InitDefaultsPoseEuler();
void InitDefaultsDRPoseWithTimeImpl();
void InitDefaultsDRPoseWithTime();
void InitDefaultsTwistImpl();
void InitDefaultsTwist();
void InitDefaultsLLHImpl();
void InitDefaultsLLH();
void InitDefaultsNavStatusImpl();
void InitDefaultsNavStatus();
void InitDefaultsPoint2DImpl();
void InitDefaultsPoint2D();
void InitDefaultsPoint3DImpl();
void InitDefaultsPoint3D();
void InitDefaultsPointENUImpl();
void InitDefaultsPointENU();
void InitDefaultsPoseQuaternionImpl();
void InitDefaultsPoseQuaternion();
void InitDefaultsPoseImpl();
void InitDefaultsPose();
void InitDefaultsWheelSpeedImpl();
void InitDefaultsWheelSpeed();
inline void InitDefaults() {
  InitDefaultsTimeStatus();
  InitDefaultsTimeStatistics();
  InitDefaultsFaultInfo();
  InitDefaultsFaultVec();
  InitDefaultsHeader();
  InitDefaultsAvosClock();
  InitDefaultsAvosTime();
  InitDefaultsUnsureVar();
  InitDefaultsVector3WithCovariance();
  InitDefaultsQuaternion();
  InitDefaultsVector3();
  InitDefaultsUnsurePoint();
  InitDefaultsUnsurePosition();
  InitDefaultsEulerWithCovariance();
  InitDefaultsPoseEuler();
  InitDefaultsDRPoseWithTime();
  InitDefaultsTwist();
  InitDefaultsLLH();
  InitDefaultsNavStatus();
  InitDefaultsPoint2D();
  InitDefaultsPoint3D();
  InitDefaultsPointENU();
  InitDefaultsPoseQuaternion();
  InitDefaultsPose();
  InitDefaultsWheelSpeed();
}
}  // namespace protobuf_common_5fmsgs_2eproto
namespace common_msgs {
class AvosClock;
class AvosClockDefaultTypeInternal;
extern AvosClockDefaultTypeInternal _AvosClock_default_instance_;
class AvosTime;
class AvosTimeDefaultTypeInternal;
extern AvosTimeDefaultTypeInternal _AvosTime_default_instance_;
class DRPoseWithTime;
class DRPoseWithTimeDefaultTypeInternal;
extern DRPoseWithTimeDefaultTypeInternal _DRPoseWithTime_default_instance_;
class EulerWithCovariance;
class EulerWithCovarianceDefaultTypeInternal;
extern EulerWithCovarianceDefaultTypeInternal _EulerWithCovariance_default_instance_;
class FaultInfo;
class FaultInfoDefaultTypeInternal;
extern FaultInfoDefaultTypeInternal _FaultInfo_default_instance_;
class FaultVec;
class FaultVecDefaultTypeInternal;
extern FaultVecDefaultTypeInternal _FaultVec_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class LLH;
class LLHDefaultTypeInternal;
extern LLHDefaultTypeInternal _LLH_default_instance_;
class NavStatus;
class NavStatusDefaultTypeInternal;
extern NavStatusDefaultTypeInternal _NavStatus_default_instance_;
class Point2D;
class Point2DDefaultTypeInternal;
extern Point2DDefaultTypeInternal _Point2D_default_instance_;
class Point3D;
class Point3DDefaultTypeInternal;
extern Point3DDefaultTypeInternal _Point3D_default_instance_;
class PointENU;
class PointENUDefaultTypeInternal;
extern PointENUDefaultTypeInternal _PointENU_default_instance_;
class Pose;
class PoseDefaultTypeInternal;
extern PoseDefaultTypeInternal _Pose_default_instance_;
class PoseEuler;
class PoseEulerDefaultTypeInternal;
extern PoseEulerDefaultTypeInternal _PoseEuler_default_instance_;
class PoseQuaternion;
class PoseQuaternionDefaultTypeInternal;
extern PoseQuaternionDefaultTypeInternal _PoseQuaternion_default_instance_;
class Quaternion;
class QuaternionDefaultTypeInternal;
extern QuaternionDefaultTypeInternal _Quaternion_default_instance_;
class TimeStatistics;
class TimeStatisticsDefaultTypeInternal;
extern TimeStatisticsDefaultTypeInternal _TimeStatistics_default_instance_;
class TimeStatus;
class TimeStatusDefaultTypeInternal;
extern TimeStatusDefaultTypeInternal _TimeStatus_default_instance_;
class Twist;
class TwistDefaultTypeInternal;
extern TwistDefaultTypeInternal _Twist_default_instance_;
class UnsurePoint;
class UnsurePointDefaultTypeInternal;
extern UnsurePointDefaultTypeInternal _UnsurePoint_default_instance_;
class UnsurePosition;
class UnsurePositionDefaultTypeInternal;
extern UnsurePositionDefaultTypeInternal _UnsurePosition_default_instance_;
class UnsureVar;
class UnsureVarDefaultTypeInternal;
extern UnsureVarDefaultTypeInternal _UnsureVar_default_instance_;
class Vector3;
class Vector3DefaultTypeInternal;
extern Vector3DefaultTypeInternal _Vector3_default_instance_;
class Vector3WithCovariance;
class Vector3WithCovarianceDefaultTypeInternal;
extern Vector3WithCovarianceDefaultTypeInternal _Vector3WithCovariance_default_instance_;
class WheelSpeed;
class WheelSpeedDefaultTypeInternal;
extern WheelSpeedDefaultTypeInternal _WheelSpeed_default_instance_;
}  // namespace common_msgs
namespace common_msgs {

// ===================================================================

class TimeStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.TimeStatus) */ {
 public:
  TimeStatus();
  virtual ~TimeStatus();

  TimeStatus(const TimeStatus& from);

  inline TimeStatus& operator=(const TimeStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeStatus(TimeStatus&& from) noexcept
    : TimeStatus() {
    *this = ::std::move(from);
  }

  inline TimeStatus& operator=(TimeStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeStatus* internal_default_instance() {
    return reinterpret_cast<const TimeStatus*>(
               &_TimeStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TimeStatus* other);
  friend void swap(TimeStatus& a, TimeStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TimeStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeStatus& from);
  void MergeFrom(const TimeStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source_node_name = 2;
  void clear_source_node_name();
  static const int kSourceNodeNameFieldNumber = 2;
  const ::std::string& source_node_name() const;
  void set_source_node_name(const ::std::string& value);
  #if LANG_CXX11
  void set_source_node_name(::std::string&& value);
  #endif
  void set_source_node_name(const char* value);
  void set_source_node_name(const char* value, size_t size);
  ::std::string* mutable_source_node_name();
  ::std::string* release_source_node_name();
  void set_allocated_source_node_name(::std::string* source_node_name);

  // string destination_node_name = 3;
  void clear_destination_node_name();
  static const int kDestinationNodeNameFieldNumber = 3;
  const ::std::string& destination_node_name() const;
  void set_destination_node_name(const ::std::string& value);
  #if LANG_CXX11
  void set_destination_node_name(::std::string&& value);
  #endif
  void set_destination_node_name(const char* value);
  void set_destination_node_name(const char* value, size_t size);
  ::std::string* mutable_destination_node_name();
  ::std::string* release_destination_node_name();
  void set_allocated_destination_node_name(::std::string* destination_node_name);

  // double dtime = 1;
  void clear_dtime();
  static const int kDtimeFieldNumber = 1;
  double dtime() const;
  void set_dtime(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.TimeStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_node_name_;
  ::google::protobuf::internal::ArenaStringPtr destination_node_name_;
  double dtime_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatusImpl();
};
// -------------------------------------------------------------------

class TimeStatistics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.TimeStatistics) */ {
 public:
  TimeStatistics();
  virtual ~TimeStatistics();

  TimeStatistics(const TimeStatistics& from);

  inline TimeStatistics& operator=(const TimeStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeStatistics(TimeStatistics&& from) noexcept
    : TimeStatistics() {
    *this = ::std::move(from);
  }

  inline TimeStatistics& operator=(TimeStatistics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeStatistics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeStatistics* internal_default_instance() {
    return reinterpret_cast<const TimeStatistics*>(
               &_TimeStatistics_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TimeStatistics* other);
  friend void swap(TimeStatistics& a, TimeStatistics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeStatistics* New() const PROTOBUF_FINAL { return New(NULL); }

  TimeStatistics* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeStatistics& from);
  void MergeFrom(const TimeStatistics& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeStatistics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
  int dev_time_status_msg_size() const;
  void clear_dev_time_status_msg();
  static const int kDevTimeStatusMsgFieldNumber = 1;
  const ::common_msgs::TimeStatus& dev_time_status_msg(int index) const;
  ::common_msgs::TimeStatus* mutable_dev_time_status_msg(int index);
  ::common_msgs::TimeStatus* add_dev_time_status_msg();
  ::google::protobuf::RepeatedPtrField< ::common_msgs::TimeStatus >*
      mutable_dev_time_status_msg();
  const ::google::protobuf::RepeatedPtrField< ::common_msgs::TimeStatus >&
      dev_time_status_msg() const;

  // double sending_timestamp = 2;
  void clear_sending_timestamp();
  static const int kSendingTimestampFieldNumber = 2;
  double sending_timestamp() const;
  void set_sending_timestamp(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.TimeStatistics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common_msgs::TimeStatus > dev_time_status_msg_;
  double sending_timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsTimeStatisticsImpl();
};
// -------------------------------------------------------------------

class FaultInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.FaultInfo) */ {
 public:
  FaultInfo();
  virtual ~FaultInfo();

  FaultInfo(const FaultInfo& from);

  inline FaultInfo& operator=(const FaultInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaultInfo(FaultInfo&& from) noexcept
    : FaultInfo() {
    *this = ::std::move(from);
  }

  inline FaultInfo& operator=(FaultInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaultInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultInfo* internal_default_instance() {
    return reinterpret_cast<const FaultInfo*>(
               &_FaultInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FaultInfo* other);
  friend void swap(FaultInfo& a, FaultInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaultInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FaultInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaultInfo& from);
  void MergeFrom(const FaultInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaultInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string module_name = 2;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 2;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_module_name(::std::string&& value);
  #endif
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // double timestamp_sec = 1;
  void clear_timestamp_sec();
  static const int kTimestampSecFieldNumber = 1;
  double timestamp_sec() const;
  void set_timestamp_sec(double value);

  // int32 error_code = 4;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 4;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // int32 fault_level = 6;
  void clear_fault_level();
  static const int kFaultLevelFieldNumber = 6;
  ::google::protobuf::int32 fault_level() const;
  void set_fault_level(::google::protobuf::int32 value);

  // int32 fault_type = 7;
  void clear_fault_type();
  static const int kFaultTypeFieldNumber = 7;
  ::google::protobuf::int32 fault_type() const;
  void set_fault_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.FaultInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  double timestamp_sec_;
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 fault_level_;
  ::google::protobuf::int32 fault_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultInfoImpl();
};
// -------------------------------------------------------------------

class FaultVec : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.FaultVec) */ {
 public:
  FaultVec();
  virtual ~FaultVec();

  FaultVec(const FaultVec& from);

  inline FaultVec& operator=(const FaultVec& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FaultVec(FaultVec&& from) noexcept
    : FaultVec() {
    *this = ::std::move(from);
  }

  inline FaultVec& operator=(FaultVec&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FaultVec& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FaultVec* internal_default_instance() {
    return reinterpret_cast<const FaultVec*>(
               &_FaultVec_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FaultVec* other);
  friend void swap(FaultVec& a, FaultVec& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FaultVec* New() const PROTOBUF_FINAL { return New(NULL); }

  FaultVec* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FaultVec& from);
  void MergeFrom(const FaultVec& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FaultVec* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common_msgs.FaultInfo info_vec = 1;
  int info_vec_size() const;
  void clear_info_vec();
  static const int kInfoVecFieldNumber = 1;
  const ::common_msgs::FaultInfo& info_vec(int index) const;
  ::common_msgs::FaultInfo* mutable_info_vec(int index);
  ::common_msgs::FaultInfo* add_info_vec();
  ::google::protobuf::RepeatedPtrField< ::common_msgs::FaultInfo >*
      mutable_info_vec();
  const ::google::protobuf::RepeatedPtrField< ::common_msgs::FaultInfo >&
      info_vec() const;

  // int32 module_fault_level = 2;
  void clear_module_fault_level();
  static const int kModuleFaultLevelFieldNumber = 2;
  ::google::protobuf::int32 module_fault_level() const;
  void set_module_fault_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.FaultVec)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::common_msgs::FaultInfo > info_vec_;
  ::google::protobuf::int32 module_fault_level_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsFaultVecImpl();
};
// -------------------------------------------------------------------

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const PROTOBUF_FINAL { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string module_name = 3;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 3;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_module_name(::std::string&& value);
  #endif
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // string version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .common_msgs.FaultVec fault_vec = 5;
  bool has_fault_vec() const;
  void clear_fault_vec();
  static const int kFaultVecFieldNumber = 5;
  const ::common_msgs::FaultVec& fault_vec() const;
  ::common_msgs::FaultVec* release_fault_vec();
  ::common_msgs::FaultVec* mutable_fault_vec();
  void set_allocated_fault_vec(::common_msgs::FaultVec* fault_vec);

  // .common_msgs.TimeStatistics time_statistics = 6;
  bool has_time_statistics() const;
  void clear_time_statistics();
  static const int kTimeStatisticsFieldNumber = 6;
  const ::common_msgs::TimeStatistics& time_statistics() const;
  ::common_msgs::TimeStatistics* release_time_statistics();
  ::common_msgs::TimeStatistics* mutable_time_statistics();
  void set_allocated_time_statistics(::common_msgs::TimeStatistics* time_statistics);

  // double time_stamp = 2;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  double time_stamp() const;
  void set_time_stamp(double value);

  // int32 sequence_num = 1;
  void clear_sequence_num();
  static const int kSequenceNumFieldNumber = 1;
  ::google::protobuf::int32 sequence_num() const;
  void set_sequence_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::common_msgs::FaultVec* fault_vec_;
  ::common_msgs::TimeStatistics* time_statistics_;
  double time_stamp_;
  ::google::protobuf::int32 sequence_num_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsHeaderImpl();
};
// -------------------------------------------------------------------

class AvosClock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.AvosClock) */ {
 public:
  AvosClock();
  virtual ~AvosClock();

  AvosClock(const AvosClock& from);

  inline AvosClock& operator=(const AvosClock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvosClock(AvosClock&& from) noexcept
    : AvosClock() {
    *this = ::std::move(from);
  }

  inline AvosClock& operator=(AvosClock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvosClock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AvosClock* internal_default_instance() {
    return reinterpret_cast<const AvosClock*>(
               &_AvosClock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AvosClock* other);
  friend void swap(AvosClock& a, AvosClock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvosClock* New() const PROTOBUF_FINAL { return New(NULL); }

  AvosClock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvosClock& from);
  void MergeFrom(const AvosClock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvosClock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 day = 1;
  void clear_day();
  static const int kDayFieldNumber = 1;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // int32 hour = 2;
  void clear_hour();
  static const int kHourFieldNumber = 2;
  ::google::protobuf::int32 hour() const;
  void set_hour(::google::protobuf::int32 value);

  // int32 minute = 3;
  void clear_minute();
  static const int kMinuteFieldNumber = 3;
  ::google::protobuf::int32 minute() const;
  void set_minute(::google::protobuf::int32 value);

  // int32 second = 4;
  void clear_second();
  static const int kSecondFieldNumber = 4;
  ::google::protobuf::int32 second() const;
  void set_second(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.AvosClock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 hour_;
  ::google::protobuf::int32 minute_;
  ::google::protobuf::int32 second_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosClockImpl();
};
// -------------------------------------------------------------------

class AvosTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.AvosTime) */ {
 public:
  AvosTime();
  virtual ~AvosTime();

  AvosTime(const AvosTime& from);

  inline AvosTime& operator=(const AvosTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvosTime(AvosTime&& from) noexcept
    : AvosTime() {
    *this = ::std::move(from);
  }

  inline AvosTime& operator=(AvosTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvosTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AvosTime* internal_default_instance() {
    return reinterpret_cast<const AvosTime*>(
               &_AvosTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(AvosTime* other);
  friend void swap(AvosTime& a, AvosTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvosTime* New() const PROTOBUF_FINAL { return New(NULL); }

  AvosTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvosTime& from);
  void MergeFrom(const AvosTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvosTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.AvosClock absolute_time = 3;
  bool has_absolute_time() const;
  void clear_absolute_time();
  static const int kAbsoluteTimeFieldNumber = 3;
  const ::common_msgs::AvosClock& absolute_time() const;
  ::common_msgs::AvosClock* release_absolute_time();
  ::common_msgs::AvosClock* mutable_absolute_time();
  void set_allocated_absolute_time(::common_msgs::AvosClock* absolute_time);

  // bool time_enable = 1;
  void clear_time_enable();
  static const int kTimeEnableFieldNumber = 1;
  bool time_enable() const;
  void set_time_enable(bool value);

  // int32 relative_time = 2;
  void clear_relative_time();
  static const int kRelativeTimeFieldNumber = 2;
  ::google::protobuf::int32 relative_time() const;
  void set_relative_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.AvosTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::AvosClock* absolute_time_;
  bool time_enable_;
  ::google::protobuf::int32 relative_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsAvosTimeImpl();
};
// -------------------------------------------------------------------

class UnsureVar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.UnsureVar) */ {
 public:
  UnsureVar();
  virtual ~UnsureVar();

  UnsureVar(const UnsureVar& from);

  inline UnsureVar& operator=(const UnsureVar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnsureVar(UnsureVar&& from) noexcept
    : UnsureVar() {
    *this = ::std::move(from);
  }

  inline UnsureVar& operator=(UnsureVar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsureVar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsureVar* internal_default_instance() {
    return reinterpret_cast<const UnsureVar*>(
               &_UnsureVar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(UnsureVar* other);
  friend void swap(UnsureVar& a, UnsureVar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnsureVar* New() const PROTOBUF_FINAL { return New(NULL); }

  UnsureVar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnsureVar& from);
  void MergeFrom(const UnsureVar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnsureVar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double variable = 1;
  void clear_variable();
  static const int kVariableFieldNumber = 1;
  double variable() const;
  void set_variable(double value);

  // double var_std = 2;
  void clear_var_std();
  static const int kVarStdFieldNumber = 2;
  double var_std() const;
  void set_var_std(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.UnsureVar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double variable_;
  double var_std_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsureVarImpl();
};
// -------------------------------------------------------------------

class Vector3WithCovariance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Vector3WithCovariance) */ {
 public:
  Vector3WithCovariance();
  virtual ~Vector3WithCovariance();

  Vector3WithCovariance(const Vector3WithCovariance& from);

  inline Vector3WithCovariance& operator=(const Vector3WithCovariance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3WithCovariance(Vector3WithCovariance&& from) noexcept
    : Vector3WithCovariance() {
    *this = ::std::move(from);
  }

  inline Vector3WithCovariance& operator=(Vector3WithCovariance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3WithCovariance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector3WithCovariance* internal_default_instance() {
    return reinterpret_cast<const Vector3WithCovariance*>(
               &_Vector3WithCovariance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Vector3WithCovariance* other);
  friend void swap(Vector3WithCovariance& a, Vector3WithCovariance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3WithCovariance* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector3WithCovariance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector3WithCovariance& from);
  void MergeFrom(const Vector3WithCovariance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector3WithCovariance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsureVar x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::common_msgs::UnsureVar& x() const;
  ::common_msgs::UnsureVar* release_x();
  ::common_msgs::UnsureVar* mutable_x();
  void set_allocated_x(::common_msgs::UnsureVar* x);

  // .common_msgs.UnsureVar y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::common_msgs::UnsureVar& y() const;
  ::common_msgs::UnsureVar* release_y();
  ::common_msgs::UnsureVar* mutable_y();
  void set_allocated_y(::common_msgs::UnsureVar* y);

  // .common_msgs.UnsureVar z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  const ::common_msgs::UnsureVar& z() const;
  ::common_msgs::UnsureVar* release_z();
  ::common_msgs::UnsureVar* mutable_z();
  void set_allocated_z(::common_msgs::UnsureVar* z);

  // @@protoc_insertion_point(class_scope:common_msgs.Vector3WithCovariance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsureVar* x_;
  ::common_msgs::UnsureVar* y_;
  ::common_msgs::UnsureVar* z_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3WithCovarianceImpl();
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quaternion(Quaternion&& from) noexcept
    : Quaternion() {
    *this = ::std::move(from);
  }

  inline Quaternion& operator=(Quaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Quaternion* internal_default_instance() {
    return reinterpret_cast<const Quaternion*>(
               &_Quaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Quaternion* other);
  friend void swap(Quaternion& a, Quaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  Quaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // double w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  double w() const;
  void set_w(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.Quaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  double w_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsQuaternionImpl();
};
// -------------------------------------------------------------------

class Vector3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Vector3) */ {
 public:
  Vector3();
  virtual ~Vector3();

  Vector3(const Vector3& from);

  inline Vector3& operator=(const Vector3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3(Vector3&& from) noexcept
    : Vector3() {
    *this = ::std::move(from);
  }

  inline Vector3& operator=(Vector3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Vector3* internal_default_instance() {
    return reinterpret_cast<const Vector3*>(
               &_Vector3_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Vector3* other);
  friend void swap(Vector3& a, Vector3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector3& from);
  void MergeFrom(const Vector3& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.Vector3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsVector3Impl();
};
// -------------------------------------------------------------------

class UnsurePoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.UnsurePoint) */ {
 public:
  UnsurePoint();
  virtual ~UnsurePoint();

  UnsurePoint(const UnsurePoint& from);

  inline UnsurePoint& operator=(const UnsurePoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnsurePoint(UnsurePoint&& from) noexcept
    : UnsurePoint() {
    *this = ::std::move(from);
  }

  inline UnsurePoint& operator=(UnsurePoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsurePoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsurePoint* internal_default_instance() {
    return reinterpret_cast<const UnsurePoint*>(
               &_UnsurePoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(UnsurePoint* other);
  friend void swap(UnsurePoint& a, UnsurePoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnsurePoint* New() const PROTOBUF_FINAL { return New(NULL); }

  UnsurePoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnsurePoint& from);
  void MergeFrom(const UnsurePoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnsurePoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsureVar x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::common_msgs::UnsureVar& x() const;
  ::common_msgs::UnsureVar* release_x();
  ::common_msgs::UnsureVar* mutable_x();
  void set_allocated_x(::common_msgs::UnsureVar* x);

  // .common_msgs.UnsureVar y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::common_msgs::UnsureVar& y() const;
  ::common_msgs::UnsureVar* release_y();
  ::common_msgs::UnsureVar* mutable_y();
  void set_allocated_y(::common_msgs::UnsureVar* y);

  // .common_msgs.UnsureVar heading = 3;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 3;
  const ::common_msgs::UnsureVar& heading() const;
  ::common_msgs::UnsureVar* release_heading();
  ::common_msgs::UnsureVar* mutable_heading();
  void set_allocated_heading(::common_msgs::UnsureVar* heading);

  // double rho = 4;
  void clear_rho();
  static const int kRhoFieldNumber = 4;
  double rho() const;
  void set_rho(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.UnsurePoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsureVar* x_;
  ::common_msgs::UnsureVar* y_;
  ::common_msgs::UnsureVar* heading_;
  double rho_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePointImpl();
};
// -------------------------------------------------------------------

class UnsurePosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.UnsurePosition) */ {
 public:
  UnsurePosition();
  virtual ~UnsurePosition();

  UnsurePosition(const UnsurePosition& from);

  inline UnsurePosition& operator=(const UnsurePosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnsurePosition(UnsurePosition&& from) noexcept
    : UnsurePosition() {
    *this = ::std::move(from);
  }

  inline UnsurePosition& operator=(UnsurePosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnsurePosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UnsurePosition* internal_default_instance() {
    return reinterpret_cast<const UnsurePosition*>(
               &_UnsurePosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(UnsurePosition* other);
  friend void swap(UnsurePosition& a, UnsurePosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnsurePosition* New() const PROTOBUF_FINAL { return New(NULL); }

  UnsurePosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnsurePosition& from);
  void MergeFrom(const UnsurePosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnsurePosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsurePoint point = 2;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 2;
  const ::common_msgs::UnsurePoint& point() const;
  ::common_msgs::UnsurePoint* release_point();
  ::common_msgs::UnsurePoint* mutable_point();
  void set_allocated_point(::common_msgs::UnsurePoint* point);

  // int32 parking_id = 1;
  void clear_parking_id();
  static const int kParkingIdFieldNumber = 1;
  ::google::protobuf::int32 parking_id() const;
  void set_parking_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.UnsurePosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsurePoint* point_;
  ::google::protobuf::int32 parking_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsUnsurePositionImpl();
};
// -------------------------------------------------------------------

class EulerWithCovariance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.EulerWithCovariance) */ {
 public:
  EulerWithCovariance();
  virtual ~EulerWithCovariance();

  EulerWithCovariance(const EulerWithCovariance& from);

  inline EulerWithCovariance& operator=(const EulerWithCovariance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EulerWithCovariance(EulerWithCovariance&& from) noexcept
    : EulerWithCovariance() {
    *this = ::std::move(from);
  }

  inline EulerWithCovariance& operator=(EulerWithCovariance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EulerWithCovariance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EulerWithCovariance* internal_default_instance() {
    return reinterpret_cast<const EulerWithCovariance*>(
               &_EulerWithCovariance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(EulerWithCovariance* other);
  friend void swap(EulerWithCovariance& a, EulerWithCovariance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EulerWithCovariance* New() const PROTOBUF_FINAL { return New(NULL); }

  EulerWithCovariance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EulerWithCovariance& from);
  void MergeFrom(const EulerWithCovariance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EulerWithCovariance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsureVar roll = 1;
  bool has_roll() const;
  void clear_roll();
  static const int kRollFieldNumber = 1;
  const ::common_msgs::UnsureVar& roll() const;
  ::common_msgs::UnsureVar* release_roll();
  ::common_msgs::UnsureVar* mutable_roll();
  void set_allocated_roll(::common_msgs::UnsureVar* roll);

  // .common_msgs.UnsureVar pitch = 2;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 2;
  const ::common_msgs::UnsureVar& pitch() const;
  ::common_msgs::UnsureVar* release_pitch();
  ::common_msgs::UnsureVar* mutable_pitch();
  void set_allocated_pitch(::common_msgs::UnsureVar* pitch);

  // .common_msgs.UnsureVar yaw = 3;
  bool has_yaw() const;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  const ::common_msgs::UnsureVar& yaw() const;
  ::common_msgs::UnsureVar* release_yaw();
  ::common_msgs::UnsureVar* mutable_yaw();
  void set_allocated_yaw(::common_msgs::UnsureVar* yaw);

  // @@protoc_insertion_point(class_scope:common_msgs.EulerWithCovariance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsureVar* roll_;
  ::common_msgs::UnsureVar* pitch_;
  ::common_msgs::UnsureVar* yaw_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsEulerWithCovarianceImpl();
};
// -------------------------------------------------------------------

class PoseEuler : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.PoseEuler) */ {
 public:
  PoseEuler();
  virtual ~PoseEuler();

  PoseEuler(const PoseEuler& from);

  inline PoseEuler& operator=(const PoseEuler& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoseEuler(PoseEuler&& from) noexcept
    : PoseEuler() {
    *this = ::std::move(from);
  }

  inline PoseEuler& operator=(PoseEuler&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseEuler& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoseEuler* internal_default_instance() {
    return reinterpret_cast<const PoseEuler*>(
               &_PoseEuler_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PoseEuler* other);
  friend void swap(PoseEuler& a, PoseEuler& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoseEuler* New() const PROTOBUF_FINAL { return New(NULL); }

  PoseEuler* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoseEuler& from);
  void MergeFrom(const PoseEuler& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoseEuler* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.Vector3WithCovariance position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::common_msgs::Vector3WithCovariance& position() const;
  ::common_msgs::Vector3WithCovariance* release_position();
  ::common_msgs::Vector3WithCovariance* mutable_position();
  void set_allocated_position(::common_msgs::Vector3WithCovariance* position);

  // .common_msgs.EulerWithCovariance rotation = 2;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 2;
  const ::common_msgs::EulerWithCovariance& rotation() const;
  ::common_msgs::EulerWithCovariance* release_rotation();
  ::common_msgs::EulerWithCovariance* mutable_rotation();
  void set_allocated_rotation(::common_msgs::EulerWithCovariance* rotation);

  // @@protoc_insertion_point(class_scope:common_msgs.PoseEuler)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::Vector3WithCovariance* position_;
  ::common_msgs::EulerWithCovariance* rotation_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseEulerImpl();
};
// -------------------------------------------------------------------

class DRPoseWithTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.DRPoseWithTime) */ {
 public:
  DRPoseWithTime();
  virtual ~DRPoseWithTime();

  DRPoseWithTime(const DRPoseWithTime& from);

  inline DRPoseWithTime& operator=(const DRPoseWithTime& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DRPoseWithTime(DRPoseWithTime&& from) noexcept
    : DRPoseWithTime() {
    *this = ::std::move(from);
  }

  inline DRPoseWithTime& operator=(DRPoseWithTime&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DRPoseWithTime& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DRPoseWithTime* internal_default_instance() {
    return reinterpret_cast<const DRPoseWithTime*>(
               &_DRPoseWithTime_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(DRPoseWithTime* other);
  friend void swap(DRPoseWithTime& a, DRPoseWithTime& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DRPoseWithTime* New() const PROTOBUF_FINAL { return New(NULL); }

  DRPoseWithTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DRPoseWithTime& from);
  void MergeFrom(const DRPoseWithTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DRPoseWithTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.PoseEuler pose_euler = 4;
  bool has_pose_euler() const;
  void clear_pose_euler();
  static const int kPoseEulerFieldNumber = 4;
  const ::common_msgs::PoseEuler& pose_euler() const;
  ::common_msgs::PoseEuler* release_pose_euler();
  ::common_msgs::PoseEuler* mutable_pose_euler();
  void set_allocated_pose_euler(::common_msgs::PoseEuler* pose_euler);

  // double utctime = 2;
  void clear_utctime();
  static const int kUtctimeFieldNumber = 2;
  double utctime() const;
  void set_utctime(double value);

  // double dr_time = 3;
  void clear_dr_time();
  static const int kDrTimeFieldNumber = 3;
  double dr_time() const;
  void set_dr_time(double value);

  // int32 week = 1;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::int32 week() const;
  void set_week(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.DRPoseWithTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::PoseEuler* pose_euler_;
  double utctime_;
  double dr_time_;
  ::google::protobuf::int32 week_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsDRPoseWithTimeImpl();
};
// -------------------------------------------------------------------

class Twist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Twist) */ {
 public:
  Twist();
  virtual ~Twist();

  Twist(const Twist& from);

  inline Twist& operator=(const Twist& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Twist(Twist&& from) noexcept
    : Twist() {
    *this = ::std::move(from);
  }

  inline Twist& operator=(Twist&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Twist& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Twist* internal_default_instance() {
    return reinterpret_cast<const Twist*>(
               &_Twist_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Twist* other);
  friend void swap(Twist& a, Twist& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Twist* New() const PROTOBUF_FINAL { return New(NULL); }

  Twist* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Twist& from);
  void MergeFrom(const Twist& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Twist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.Vector3WithCovariance velocity = 1;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 1;
  const ::common_msgs::Vector3WithCovariance& velocity() const;
  ::common_msgs::Vector3WithCovariance* release_velocity();
  ::common_msgs::Vector3WithCovariance* mutable_velocity();
  void set_allocated_velocity(::common_msgs::Vector3WithCovariance* velocity);

  // .common_msgs.Vector3WithCovariance angular_velocity = 2;
  bool has_angular_velocity() const;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 2;
  const ::common_msgs::Vector3WithCovariance& angular_velocity() const;
  ::common_msgs::Vector3WithCovariance* release_angular_velocity();
  ::common_msgs::Vector3WithCovariance* mutable_angular_velocity();
  void set_allocated_angular_velocity(::common_msgs::Vector3WithCovariance* angular_velocity);

  // @@protoc_insertion_point(class_scope:common_msgs.Twist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::Vector3WithCovariance* velocity_;
  ::common_msgs::Vector3WithCovariance* angular_velocity_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsTwistImpl();
};
// -------------------------------------------------------------------

class LLH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.LLH) */ {
 public:
  LLH();
  virtual ~LLH();

  LLH(const LLH& from);

  inline LLH& operator=(const LLH& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LLH(LLH&& from) noexcept
    : LLH() {
    *this = ::std::move(from);
  }

  inline LLH& operator=(LLH&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LLH& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LLH* internal_default_instance() {
    return reinterpret_cast<const LLH*>(
               &_LLH_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(LLH* other);
  friend void swap(LLH& a, LLH& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LLH* New() const PROTOBUF_FINAL { return New(NULL); }

  LLH* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LLH& from);
  void MergeFrom(const LLH& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LLH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsureVar lat = 1;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 1;
  const ::common_msgs::UnsureVar& lat() const;
  ::common_msgs::UnsureVar* release_lat();
  ::common_msgs::UnsureVar* mutable_lat();
  void set_allocated_lat(::common_msgs::UnsureVar* lat);

  // .common_msgs.UnsureVar lon = 2;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 2;
  const ::common_msgs::UnsureVar& lon() const;
  ::common_msgs::UnsureVar* release_lon();
  ::common_msgs::UnsureVar* mutable_lon();
  void set_allocated_lon(::common_msgs::UnsureVar* lon);

  // .common_msgs.UnsureVar height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  const ::common_msgs::UnsureVar& height() const;
  ::common_msgs::UnsureVar* release_height();
  ::common_msgs::UnsureVar* mutable_height();
  void set_allocated_height(::common_msgs::UnsureVar* height);

  // @@protoc_insertion_point(class_scope:common_msgs.LLH)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsureVar* lat_;
  ::common_msgs::UnsureVar* lon_;
  ::common_msgs::UnsureVar* height_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsLLHImpl();
};
// -------------------------------------------------------------------

class NavStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.NavStatus) */ {
 public:
  NavStatus();
  virtual ~NavStatus();

  NavStatus(const NavStatus& from);

  inline NavStatus& operator=(const NavStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NavStatus(NavStatus&& from) noexcept
    : NavStatus() {
    *this = ::std::move(from);
  }

  inline NavStatus& operator=(NavStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NavStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NavStatus* internal_default_instance() {
    return reinterpret_cast<const NavStatus*>(
               &_NavStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(NavStatus* other);
  friend void swap(NavStatus& a, NavStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NavStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  NavStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NavStatus& from);
  void MergeFrom(const NavStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NavStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double utc_time = 1;
  void clear_utc_time();
  static const int kUtcTimeFieldNumber = 1;
  double utc_time() const;
  void set_utc_time(double value);

  // int32 gps_status = 2;
  void clear_gps_status();
  static const int kGpsStatusFieldNumber = 2;
  ::google::protobuf::int32 gps_status() const;
  void set_gps_status(::google::protobuf::int32 value);

  // int32 pos_status = 3;
  void clear_pos_status();
  static const int kPosStatusFieldNumber = 3;
  ::google::protobuf::int32 pos_status() const;
  void set_pos_status(::google::protobuf::int32 value);

  // int32 att_status = 4;
  void clear_att_status();
  static const int kAttStatusFieldNumber = 4;
  ::google::protobuf::int32 att_status() const;
  void set_att_status(::google::protobuf::int32 value);

  // int32 init_status = 5;
  void clear_init_status();
  static const int kInitStatusFieldNumber = 5;
  ::google::protobuf::int32 init_status() const;
  void set_init_status(::google::protobuf::int32 value);

  // int32 sate_num = 6;
  void clear_sate_num();
  static const int kSateNumFieldNumber = 6;
  ::google::protobuf::int32 sate_num() const;
  void set_sate_num(::google::protobuf::int32 value);

  // float hdop = 7;
  void clear_hdop();
  static const int kHdopFieldNumber = 7;
  float hdop() const;
  void set_hdop(float value);

  // float pdop = 8;
  void clear_pdop();
  static const int kPdopFieldNumber = 8;
  float pdop() const;
  void set_pdop(float value);

  // float diff_age = 9;
  void clear_diff_age();
  static const int kDiffAgeFieldNumber = 9;
  float diff_age() const;
  void set_diff_age(float value);

  // @@protoc_insertion_point(class_scope:common_msgs.NavStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double utc_time_;
  ::google::protobuf::int32 gps_status_;
  ::google::protobuf::int32 pos_status_;
  ::google::protobuf::int32 att_status_;
  ::google::protobuf::int32 init_status_;
  ::google::protobuf::int32 sate_num_;
  float hdop_;
  float pdop_;
  float diff_age_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsNavStatusImpl();
};
// -------------------------------------------------------------------

class Point2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Point2D) */ {
 public:
  Point2D();
  virtual ~Point2D();

  Point2D(const Point2D& from);

  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2D(Point2D&& from) noexcept
    : Point2D() {
    *this = ::std::move(from);
  }

  inline Point2D& operator=(Point2D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point2D* internal_default_instance() {
    return reinterpret_cast<const Point2D*>(
               &_Point2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Point2D* other);
  friend void swap(Point2D& a, Point2D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point2D& from);
  void MergeFrom(const Point2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.Point2D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint2DImpl();
};
// -------------------------------------------------------------------

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3D(Point3D&& from) noexcept
    : Point3D() {
    *this = ::std::move(from);
  }

  inline Point3D& operator=(Point3D&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Point3D* internal_default_instance() {
    return reinterpret_cast<const Point3D*>(
               &_Point3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(Point3D* other);
  friend void swap(Point3D& a, Point3D& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3D* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.Point3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoint3DImpl();
};
// -------------------------------------------------------------------

class PointENU : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.PointENU) */ {
 public:
  PointENU();
  virtual ~PointENU();

  PointENU(const PointENU& from);

  inline PointENU& operator=(const PointENU& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointENU(PointENU&& from) noexcept
    : PointENU() {
    *this = ::std::move(from);
  }

  inline PointENU& operator=(PointENU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointENU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointENU* internal_default_instance() {
    return reinterpret_cast<const PointENU*>(
               &_PointENU_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PointENU* other);
  friend void swap(PointENU& a, PointENU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointENU* New() const PROTOBUF_FINAL { return New(NULL); }

  PointENU* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PointENU& from);
  void MergeFrom(const PointENU& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PointENU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:common_msgs.PointENU)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPointENUImpl();
};
// -------------------------------------------------------------------

class PoseQuaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.PoseQuaternion) */ {
 public:
  PoseQuaternion();
  virtual ~PoseQuaternion();

  PoseQuaternion(const PoseQuaternion& from);

  inline PoseQuaternion& operator=(const PoseQuaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoseQuaternion(PoseQuaternion&& from) noexcept
    : PoseQuaternion() {
    *this = ::std::move(from);
  }

  inline PoseQuaternion& operator=(PoseQuaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PoseQuaternion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoseQuaternion* internal_default_instance() {
    return reinterpret_cast<const PoseQuaternion*>(
               &_PoseQuaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PoseQuaternion* other);
  friend void swap(PoseQuaternion& a, PoseQuaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoseQuaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  PoseQuaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoseQuaternion& from);
  void MergeFrom(const PoseQuaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoseQuaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.Vector3WithCovariance position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::common_msgs::Vector3WithCovariance& position() const;
  ::common_msgs::Vector3WithCovariance* release_position();
  ::common_msgs::Vector3WithCovariance* mutable_position();
  void set_allocated_position(::common_msgs::Vector3WithCovariance* position);

  // .common_msgs.Quaternion quaternion = 2;
  bool has_quaternion() const;
  void clear_quaternion();
  static const int kQuaternionFieldNumber = 2;
  const ::common_msgs::Quaternion& quaternion() const;
  ::common_msgs::Quaternion* release_quaternion();
  ::common_msgs::Quaternion* mutable_quaternion();
  void set_allocated_quaternion(::common_msgs::Quaternion* quaternion);

  // .common_msgs.Vector3 rpy_covariance = 3;
  bool has_rpy_covariance() const;
  void clear_rpy_covariance();
  static const int kRpyCovarianceFieldNumber = 3;
  const ::common_msgs::Vector3& rpy_covariance() const;
  ::common_msgs::Vector3* release_rpy_covariance();
  ::common_msgs::Vector3* mutable_rpy_covariance();
  void set_allocated_rpy_covariance(::common_msgs::Vector3* rpy_covariance);

  // @@protoc_insertion_point(class_scope:common_msgs.PoseQuaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::Vector3WithCovariance* position_;
  ::common_msgs::Quaternion* quaternion_;
  ::common_msgs::Vector3* rpy_covariance_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseQuaternionImpl();
};
// -------------------------------------------------------------------

class Pose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.Pose) */ {
 public:
  Pose();
  virtual ~Pose();

  Pose(const Pose& from);

  inline Pose& operator=(const Pose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Pose(Pose&& from) noexcept
    : Pose() {
    *this = ::std::move(from);
  }

  inline Pose& operator=(Pose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Pose* internal_default_instance() {
    return reinterpret_cast<const Pose*>(
               &_Pose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(Pose* other);
  friend void swap(Pose& a, Pose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Pose* New() const PROTOBUF_FINAL { return New(NULL); }

  Pose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Pose& from);
  void MergeFrom(const Pose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.PoseEuler pose_euler = 1;
  bool has_pose_euler() const;
  void clear_pose_euler();
  static const int kPoseEulerFieldNumber = 1;
  const ::common_msgs::PoseEuler& pose_euler() const;
  ::common_msgs::PoseEuler* release_pose_euler();
  ::common_msgs::PoseEuler* mutable_pose_euler();
  void set_allocated_pose_euler(::common_msgs::PoseEuler* pose_euler);

  // .common_msgs.PoseQuaternion pose_quaternion = 2;
  bool has_pose_quaternion() const;
  void clear_pose_quaternion();
  static const int kPoseQuaternionFieldNumber = 2;
  const ::common_msgs::PoseQuaternion& pose_quaternion() const;
  ::common_msgs::PoseQuaternion* release_pose_quaternion();
  ::common_msgs::PoseQuaternion* mutable_pose_quaternion();
  void set_allocated_pose_quaternion(::common_msgs::PoseQuaternion* pose_quaternion);

  // int32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msgs.Pose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::PoseEuler* pose_euler_;
  ::common_msgs::PoseQuaternion* pose_quaternion_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsPoseImpl();
};
// -------------------------------------------------------------------

class WheelSpeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msgs.WheelSpeed) */ {
 public:
  WheelSpeed();
  virtual ~WheelSpeed();

  WheelSpeed(const WheelSpeed& from);

  inline WheelSpeed& operator=(const WheelSpeed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WheelSpeed(WheelSpeed&& from) noexcept
    : WheelSpeed() {
    *this = ::std::move(from);
  }

  inline WheelSpeed& operator=(WheelSpeed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WheelSpeed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WheelSpeed* internal_default_instance() {
    return reinterpret_cast<const WheelSpeed*>(
               &_WheelSpeed_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(WheelSpeed* other);
  friend void swap(WheelSpeed& a, WheelSpeed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WheelSpeed* New() const PROTOBUF_FINAL { return New(NULL); }

  WheelSpeed* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WheelSpeed& from);
  void MergeFrom(const WheelSpeed& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WheelSpeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .common_msgs.UnsurePoint front_left = 1;
  bool has_front_left() const;
  void clear_front_left();
  static const int kFrontLeftFieldNumber = 1;
  const ::common_msgs::UnsurePoint& front_left() const;
  ::common_msgs::UnsurePoint* release_front_left();
  ::common_msgs::UnsurePoint* mutable_front_left();
  void set_allocated_front_left(::common_msgs::UnsurePoint* front_left);

  // .common_msgs.UnsurePoint front_right = 2;
  bool has_front_right() const;
  void clear_front_right();
  static const int kFrontRightFieldNumber = 2;
  const ::common_msgs::UnsurePoint& front_right() const;
  ::common_msgs::UnsurePoint* release_front_right();
  ::common_msgs::UnsurePoint* mutable_front_right();
  void set_allocated_front_right(::common_msgs::UnsurePoint* front_right);

  // .common_msgs.UnsurePoint rear_left = 3;
  bool has_rear_left() const;
  void clear_rear_left();
  static const int kRearLeftFieldNumber = 3;
  const ::common_msgs::UnsurePoint& rear_left() const;
  ::common_msgs::UnsurePoint* release_rear_left();
  ::common_msgs::UnsurePoint* mutable_rear_left();
  void set_allocated_rear_left(::common_msgs::UnsurePoint* rear_left);

  // .common_msgs.UnsurePoint rear_right = 4;
  bool has_rear_right() const;
  void clear_rear_right();
  static const int kRearRightFieldNumber = 4;
  const ::common_msgs::UnsurePoint& rear_right() const;
  ::common_msgs::UnsurePoint* release_rear_right();
  ::common_msgs::UnsurePoint* mutable_rear_right();
  void set_allocated_rear_right(::common_msgs::UnsurePoint* rear_right);

  // @@protoc_insertion_point(class_scope:common_msgs.WheelSpeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::common_msgs::UnsurePoint* front_left_;
  ::common_msgs::UnsurePoint* front_right_;
  ::common_msgs::UnsurePoint* rear_left_;
  ::common_msgs::UnsurePoint* rear_right_;
  mutable int _cached_size_;
  friend struct ::protobuf_common_5fmsgs_2eproto::TableStruct;
  friend void ::protobuf_common_5fmsgs_2eproto::InitDefaultsWheelSpeedImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TimeStatus

// double dtime = 1;
inline void TimeStatus::clear_dtime() {
  dtime_ = 0;
}
inline double TimeStatus::dtime() const {
  // @@protoc_insertion_point(field_get:common_msgs.TimeStatus.dtime)
  return dtime_;
}
inline void TimeStatus::set_dtime(double value) {
  
  dtime_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.TimeStatus.dtime)
}

// string source_node_name = 2;
inline void TimeStatus::clear_source_node_name() {
  source_node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TimeStatus::source_node_name() const {
  // @@protoc_insertion_point(field_get:common_msgs.TimeStatus.source_node_name)
  return source_node_name_.GetNoArena();
}
inline void TimeStatus::set_source_node_name(const ::std::string& value) {
  
  source_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.TimeStatus.source_node_name)
}
#if LANG_CXX11
inline void TimeStatus::set_source_node_name(::std::string&& value) {
  
  source_node_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.TimeStatus.source_node_name)
}
#endif
inline void TimeStatus::set_source_node_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.TimeStatus.source_node_name)
}
inline void TimeStatus::set_source_node_name(const char* value, size_t size) {
  
  source_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.TimeStatus.source_node_name)
}
inline ::std::string* TimeStatus::mutable_source_node_name() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.TimeStatus.source_node_name)
  return source_node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimeStatus::release_source_node_name() {
  // @@protoc_insertion_point(field_release:common_msgs.TimeStatus.source_node_name)
  
  return source_node_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimeStatus::set_allocated_source_node_name(::std::string* source_node_name) {
  if (source_node_name != NULL) {
    
  } else {
    
  }
  source_node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_node_name);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.TimeStatus.source_node_name)
}

// string destination_node_name = 3;
inline void TimeStatus::clear_destination_node_name() {
  destination_node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TimeStatus::destination_node_name() const {
  // @@protoc_insertion_point(field_get:common_msgs.TimeStatus.destination_node_name)
  return destination_node_name_.GetNoArena();
}
inline void TimeStatus::set_destination_node_name(const ::std::string& value) {
  
  destination_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.TimeStatus.destination_node_name)
}
#if LANG_CXX11
inline void TimeStatus::set_destination_node_name(::std::string&& value) {
  
  destination_node_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.TimeStatus.destination_node_name)
}
#endif
inline void TimeStatus::set_destination_node_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  destination_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.TimeStatus.destination_node_name)
}
inline void TimeStatus::set_destination_node_name(const char* value, size_t size) {
  
  destination_node_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.TimeStatus.destination_node_name)
}
inline ::std::string* TimeStatus::mutable_destination_node_name() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.TimeStatus.destination_node_name)
  return destination_node_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimeStatus::release_destination_node_name() {
  // @@protoc_insertion_point(field_release:common_msgs.TimeStatus.destination_node_name)
  
  return destination_node_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimeStatus::set_allocated_destination_node_name(::std::string* destination_node_name) {
  if (destination_node_name != NULL) {
    
  } else {
    
  }
  destination_node_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_node_name);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.TimeStatus.destination_node_name)
}

// -------------------------------------------------------------------

// TimeStatistics

// repeated .common_msgs.TimeStatus dev_time_status_msg = 1;
inline int TimeStatistics::dev_time_status_msg_size() const {
  return dev_time_status_msg_.size();
}
inline void TimeStatistics::clear_dev_time_status_msg() {
  dev_time_status_msg_.Clear();
}
inline const ::common_msgs::TimeStatus& TimeStatistics::dev_time_status_msg(int index) const {
  // @@protoc_insertion_point(field_get:common_msgs.TimeStatistics.dev_time_status_msg)
  return dev_time_status_msg_.Get(index);
}
inline ::common_msgs::TimeStatus* TimeStatistics::mutable_dev_time_status_msg(int index) {
  // @@protoc_insertion_point(field_mutable:common_msgs.TimeStatistics.dev_time_status_msg)
  return dev_time_status_msg_.Mutable(index);
}
inline ::common_msgs::TimeStatus* TimeStatistics::add_dev_time_status_msg() {
  // @@protoc_insertion_point(field_add:common_msgs.TimeStatistics.dev_time_status_msg)
  return dev_time_status_msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common_msgs::TimeStatus >*
TimeStatistics::mutable_dev_time_status_msg() {
  // @@protoc_insertion_point(field_mutable_list:common_msgs.TimeStatistics.dev_time_status_msg)
  return &dev_time_status_msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common_msgs::TimeStatus >&
TimeStatistics::dev_time_status_msg() const {
  // @@protoc_insertion_point(field_list:common_msgs.TimeStatistics.dev_time_status_msg)
  return dev_time_status_msg_;
}

// double sending_timestamp = 2;
inline void TimeStatistics::clear_sending_timestamp() {
  sending_timestamp_ = 0;
}
inline double TimeStatistics::sending_timestamp() const {
  // @@protoc_insertion_point(field_get:common_msgs.TimeStatistics.sending_timestamp)
  return sending_timestamp_;
}
inline void TimeStatistics::set_sending_timestamp(double value) {
  
  sending_timestamp_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.TimeStatistics.sending_timestamp)
}

// -------------------------------------------------------------------

// FaultInfo

// double timestamp_sec = 1;
inline void FaultInfo::clear_timestamp_sec() {
  timestamp_sec_ = 0;
}
inline double FaultInfo::timestamp_sec() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.timestamp_sec)
  return timestamp_sec_;
}
inline void FaultInfo::set_timestamp_sec(double value) {
  
  timestamp_sec_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.timestamp_sec)
}

// string module_name = 2;
inline void FaultInfo::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaultInfo::module_name() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.module_name)
  return module_name_.GetNoArena();
}
inline void FaultInfo::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.module_name)
}
#if LANG_CXX11
inline void FaultInfo::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.FaultInfo.module_name)
}
#endif
inline void FaultInfo::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.FaultInfo.module_name)
}
inline void FaultInfo::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.FaultInfo.module_name)
}
inline ::std::string* FaultInfo::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.FaultInfo.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaultInfo::release_module_name() {
  // @@protoc_insertion_point(field_release:common_msgs.FaultInfo.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaultInfo::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.FaultInfo.module_name)
}

// string version = 3;
inline void FaultInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaultInfo::version() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.version)
  return version_.GetNoArena();
}
inline void FaultInfo::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.version)
}
#if LANG_CXX11
inline void FaultInfo::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.FaultInfo.version)
}
#endif
inline void FaultInfo::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.FaultInfo.version)
}
inline void FaultInfo::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.FaultInfo.version)
}
inline ::std::string* FaultInfo::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.FaultInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaultInfo::release_version() {
  // @@protoc_insertion_point(field_release:common_msgs.FaultInfo.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaultInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.FaultInfo.version)
}

// int32 error_code = 4;
inline void FaultInfo::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::error_code() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.error_code)
  return error_code_;
}
inline void FaultInfo::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.error_code)
}

// string msg = 5;
inline void FaultInfo::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FaultInfo::msg() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.msg)
  return msg_.GetNoArena();
}
inline void FaultInfo::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.msg)
}
#if LANG_CXX11
inline void FaultInfo::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.FaultInfo.msg)
}
#endif
inline void FaultInfo::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.FaultInfo.msg)
}
inline void FaultInfo::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.FaultInfo.msg)
}
inline ::std::string* FaultInfo::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.FaultInfo.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FaultInfo::release_msg() {
  // @@protoc_insertion_point(field_release:common_msgs.FaultInfo.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FaultInfo::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.FaultInfo.msg)
}

// int32 fault_level = 6;
inline void FaultInfo::clear_fault_level() {
  fault_level_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::fault_level() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.fault_level)
  return fault_level_;
}
inline void FaultInfo::set_fault_level(::google::protobuf::int32 value) {
  
  fault_level_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.fault_level)
}

// int32 fault_type = 7;
inline void FaultInfo::clear_fault_type() {
  fault_type_ = 0;
}
inline ::google::protobuf::int32 FaultInfo::fault_type() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultInfo.fault_type)
  return fault_type_;
}
inline void FaultInfo::set_fault_type(::google::protobuf::int32 value) {
  
  fault_type_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.FaultInfo.fault_type)
}

// -------------------------------------------------------------------

// FaultVec

// repeated .common_msgs.FaultInfo info_vec = 1;
inline int FaultVec::info_vec_size() const {
  return info_vec_.size();
}
inline void FaultVec::clear_info_vec() {
  info_vec_.Clear();
}
inline const ::common_msgs::FaultInfo& FaultVec::info_vec(int index) const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultVec.info_vec)
  return info_vec_.Get(index);
}
inline ::common_msgs::FaultInfo* FaultVec::mutable_info_vec(int index) {
  // @@protoc_insertion_point(field_mutable:common_msgs.FaultVec.info_vec)
  return info_vec_.Mutable(index);
}
inline ::common_msgs::FaultInfo* FaultVec::add_info_vec() {
  // @@protoc_insertion_point(field_add:common_msgs.FaultVec.info_vec)
  return info_vec_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common_msgs::FaultInfo >*
FaultVec::mutable_info_vec() {
  // @@protoc_insertion_point(field_mutable_list:common_msgs.FaultVec.info_vec)
  return &info_vec_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common_msgs::FaultInfo >&
FaultVec::info_vec() const {
  // @@protoc_insertion_point(field_list:common_msgs.FaultVec.info_vec)
  return info_vec_;
}

// int32 module_fault_level = 2;
inline void FaultVec::clear_module_fault_level() {
  module_fault_level_ = 0;
}
inline ::google::protobuf::int32 FaultVec::module_fault_level() const {
  // @@protoc_insertion_point(field_get:common_msgs.FaultVec.module_fault_level)
  return module_fault_level_;
}
inline void FaultVec::set_module_fault_level(::google::protobuf::int32 value) {
  
  module_fault_level_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.FaultVec.module_fault_level)
}

// -------------------------------------------------------------------

// Header

// int32 sequence_num = 1;
inline void Header::clear_sequence_num() {
  sequence_num_ = 0;
}
inline ::google::protobuf::int32 Header::sequence_num() const {
  // @@protoc_insertion_point(field_get:common_msgs.Header.sequence_num)
  return sequence_num_;
}
inline void Header::set_sequence_num(::google::protobuf::int32 value) {
  
  sequence_num_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Header.sequence_num)
}

// double time_stamp = 2;
inline void Header::clear_time_stamp() {
  time_stamp_ = 0;
}
inline double Header::time_stamp() const {
  // @@protoc_insertion_point(field_get:common_msgs.Header.time_stamp)
  return time_stamp_;
}
inline void Header::set_time_stamp(double value) {
  
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Header.time_stamp)
}

// string module_name = 3;
inline void Header::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::module_name() const {
  // @@protoc_insertion_point(field_get:common_msgs.Header.module_name)
  return module_name_.GetNoArena();
}
inline void Header::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.Header.module_name)
}
#if LANG_CXX11
inline void Header::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.Header.module_name)
}
#endif
inline void Header::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.Header.module_name)
}
inline void Header::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.Header.module_name)
}
inline ::std::string* Header::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.Header.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_module_name() {
  // @@protoc_insertion_point(field_release:common_msgs.Header.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Header.module_name)
}

// string version = 4;
inline void Header::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Header::version() const {
  // @@protoc_insertion_point(field_get:common_msgs.Header.version)
  return version_.GetNoArena();
}
inline void Header::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msgs.Header.version)
}
#if LANG_CXX11
inline void Header::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msgs.Header.version)
}
#endif
inline void Header::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msgs.Header.version)
}
inline void Header::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msgs.Header.version)
}
inline ::std::string* Header::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:common_msgs.Header.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Header::release_version() {
  // @@protoc_insertion_point(field_release:common_msgs.Header.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Header::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Header.version)
}

// .common_msgs.FaultVec fault_vec = 5;
inline bool Header::has_fault_vec() const {
  return this != internal_default_instance() && fault_vec_ != NULL;
}
inline void Header::clear_fault_vec() {
  if (GetArenaNoVirtual() == NULL && fault_vec_ != NULL) {
    delete fault_vec_;
  }
  fault_vec_ = NULL;
}
inline const ::common_msgs::FaultVec& Header::fault_vec() const {
  const ::common_msgs::FaultVec* p = fault_vec_;
  // @@protoc_insertion_point(field_get:common_msgs.Header.fault_vec)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::FaultVec*>(
      &::common_msgs::_FaultVec_default_instance_);
}
inline ::common_msgs::FaultVec* Header::release_fault_vec() {
  // @@protoc_insertion_point(field_release:common_msgs.Header.fault_vec)
  
  ::common_msgs::FaultVec* temp = fault_vec_;
  fault_vec_ = NULL;
  return temp;
}
inline ::common_msgs::FaultVec* Header::mutable_fault_vec() {
  
  if (fault_vec_ == NULL) {
    fault_vec_ = new ::common_msgs::FaultVec;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Header.fault_vec)
  return fault_vec_;
}
inline void Header::set_allocated_fault_vec(::common_msgs::FaultVec* fault_vec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fault_vec_;
  }
  if (fault_vec) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fault_vec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fault_vec, submessage_arena);
    }
    
  } else {
    
  }
  fault_vec_ = fault_vec;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Header.fault_vec)
}

// .common_msgs.TimeStatistics time_statistics = 6;
inline bool Header::has_time_statistics() const {
  return this != internal_default_instance() && time_statistics_ != NULL;
}
inline void Header::clear_time_statistics() {
  if (GetArenaNoVirtual() == NULL && time_statistics_ != NULL) {
    delete time_statistics_;
  }
  time_statistics_ = NULL;
}
inline const ::common_msgs::TimeStatistics& Header::time_statistics() const {
  const ::common_msgs::TimeStatistics* p = time_statistics_;
  // @@protoc_insertion_point(field_get:common_msgs.Header.time_statistics)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::TimeStatistics*>(
      &::common_msgs::_TimeStatistics_default_instance_);
}
inline ::common_msgs::TimeStatistics* Header::release_time_statistics() {
  // @@protoc_insertion_point(field_release:common_msgs.Header.time_statistics)
  
  ::common_msgs::TimeStatistics* temp = time_statistics_;
  time_statistics_ = NULL;
  return temp;
}
inline ::common_msgs::TimeStatistics* Header::mutable_time_statistics() {
  
  if (time_statistics_ == NULL) {
    time_statistics_ = new ::common_msgs::TimeStatistics;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Header.time_statistics)
  return time_statistics_;
}
inline void Header::set_allocated_time_statistics(::common_msgs::TimeStatistics* time_statistics) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_statistics_;
  }
  if (time_statistics) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_statistics = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_statistics, submessage_arena);
    }
    
  } else {
    
  }
  time_statistics_ = time_statistics;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Header.time_statistics)
}

// -------------------------------------------------------------------

// AvosClock

// int32 day = 1;
inline void AvosClock::clear_day() {
  day_ = 0;
}
inline ::google::protobuf::int32 AvosClock::day() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosClock.day)
  return day_;
}
inline void AvosClock::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosClock.day)
}

// int32 hour = 2;
inline void AvosClock::clear_hour() {
  hour_ = 0;
}
inline ::google::protobuf::int32 AvosClock::hour() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosClock.hour)
  return hour_;
}
inline void AvosClock::set_hour(::google::protobuf::int32 value) {
  
  hour_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosClock.hour)
}

// int32 minute = 3;
inline void AvosClock::clear_minute() {
  minute_ = 0;
}
inline ::google::protobuf::int32 AvosClock::minute() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosClock.minute)
  return minute_;
}
inline void AvosClock::set_minute(::google::protobuf::int32 value) {
  
  minute_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosClock.minute)
}

// int32 second = 4;
inline void AvosClock::clear_second() {
  second_ = 0;
}
inline ::google::protobuf::int32 AvosClock::second() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosClock.second)
  return second_;
}
inline void AvosClock::set_second(::google::protobuf::int32 value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosClock.second)
}

// -------------------------------------------------------------------

// AvosTime

// bool time_enable = 1;
inline void AvosTime::clear_time_enable() {
  time_enable_ = false;
}
inline bool AvosTime::time_enable() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosTime.time_enable)
  return time_enable_;
}
inline void AvosTime::set_time_enable(bool value) {
  
  time_enable_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosTime.time_enable)
}

// int32 relative_time = 2;
inline void AvosTime::clear_relative_time() {
  relative_time_ = 0;
}
inline ::google::protobuf::int32 AvosTime::relative_time() const {
  // @@protoc_insertion_point(field_get:common_msgs.AvosTime.relative_time)
  return relative_time_;
}
inline void AvosTime::set_relative_time(::google::protobuf::int32 value) {
  
  relative_time_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.AvosTime.relative_time)
}

// .common_msgs.AvosClock absolute_time = 3;
inline bool AvosTime::has_absolute_time() const {
  return this != internal_default_instance() && absolute_time_ != NULL;
}
inline void AvosTime::clear_absolute_time() {
  if (GetArenaNoVirtual() == NULL && absolute_time_ != NULL) {
    delete absolute_time_;
  }
  absolute_time_ = NULL;
}
inline const ::common_msgs::AvosClock& AvosTime::absolute_time() const {
  const ::common_msgs::AvosClock* p = absolute_time_;
  // @@protoc_insertion_point(field_get:common_msgs.AvosTime.absolute_time)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::AvosClock*>(
      &::common_msgs::_AvosClock_default_instance_);
}
inline ::common_msgs::AvosClock* AvosTime::release_absolute_time() {
  // @@protoc_insertion_point(field_release:common_msgs.AvosTime.absolute_time)
  
  ::common_msgs::AvosClock* temp = absolute_time_;
  absolute_time_ = NULL;
  return temp;
}
inline ::common_msgs::AvosClock* AvosTime::mutable_absolute_time() {
  
  if (absolute_time_ == NULL) {
    absolute_time_ = new ::common_msgs::AvosClock;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.AvosTime.absolute_time)
  return absolute_time_;
}
inline void AvosTime::set_allocated_absolute_time(::common_msgs::AvosClock* absolute_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete absolute_time_;
  }
  if (absolute_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      absolute_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, absolute_time, submessage_arena);
    }
    
  } else {
    
  }
  absolute_time_ = absolute_time;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.AvosTime.absolute_time)
}

// -------------------------------------------------------------------

// UnsureVar

// double variable = 1;
inline void UnsureVar::clear_variable() {
  variable_ = 0;
}
inline double UnsureVar::variable() const {
  // @@protoc_insertion_point(field_get:common_msgs.UnsureVar.variable)
  return variable_;
}
inline void UnsureVar::set_variable(double value) {
  
  variable_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.UnsureVar.variable)
}

// double var_std = 2;
inline void UnsureVar::clear_var_std() {
  var_std_ = 0;
}
inline double UnsureVar::var_std() const {
  // @@protoc_insertion_point(field_get:common_msgs.UnsureVar.var_std)
  return var_std_;
}
inline void UnsureVar::set_var_std(double value) {
  
  var_std_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.UnsureVar.var_std)
}

// -------------------------------------------------------------------

// Vector3WithCovariance

// .common_msgs.UnsureVar x = 1;
inline bool Vector3WithCovariance::has_x() const {
  return this != internal_default_instance() && x_ != NULL;
}
inline void Vector3WithCovariance::clear_x() {
  if (GetArenaNoVirtual() == NULL && x_ != NULL) {
    delete x_;
  }
  x_ = NULL;
}
inline const ::common_msgs::UnsureVar& Vector3WithCovariance::x() const {
  const ::common_msgs::UnsureVar* p = x_;
  // @@protoc_insertion_point(field_get:common_msgs.Vector3WithCovariance.x)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::release_x() {
  // @@protoc_insertion_point(field_release:common_msgs.Vector3WithCovariance.x)
  
  ::common_msgs::UnsureVar* temp = x_;
  x_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::mutable_x() {
  
  if (x_ == NULL) {
    x_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Vector3WithCovariance.x)
  return x_;
}
inline void Vector3WithCovariance::set_allocated_x(::common_msgs::UnsureVar* x) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete x_;
  }
  if (x) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      x = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, x, submessage_arena);
    }
    
  } else {
    
  }
  x_ = x;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Vector3WithCovariance.x)
}

// .common_msgs.UnsureVar y = 2;
inline bool Vector3WithCovariance::has_y() const {
  return this != internal_default_instance() && y_ != NULL;
}
inline void Vector3WithCovariance::clear_y() {
  if (GetArenaNoVirtual() == NULL && y_ != NULL) {
    delete y_;
  }
  y_ = NULL;
}
inline const ::common_msgs::UnsureVar& Vector3WithCovariance::y() const {
  const ::common_msgs::UnsureVar* p = y_;
  // @@protoc_insertion_point(field_get:common_msgs.Vector3WithCovariance.y)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::release_y() {
  // @@protoc_insertion_point(field_release:common_msgs.Vector3WithCovariance.y)
  
  ::common_msgs::UnsureVar* temp = y_;
  y_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::mutable_y() {
  
  if (y_ == NULL) {
    y_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Vector3WithCovariance.y)
  return y_;
}
inline void Vector3WithCovariance::set_allocated_y(::common_msgs::UnsureVar* y) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete y_;
  }
  if (y) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      y = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, y, submessage_arena);
    }
    
  } else {
    
  }
  y_ = y;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Vector3WithCovariance.y)
}

// .common_msgs.UnsureVar z = 3;
inline bool Vector3WithCovariance::has_z() const {
  return this != internal_default_instance() && z_ != NULL;
}
inline void Vector3WithCovariance::clear_z() {
  if (GetArenaNoVirtual() == NULL && z_ != NULL) {
    delete z_;
  }
  z_ = NULL;
}
inline const ::common_msgs::UnsureVar& Vector3WithCovariance::z() const {
  const ::common_msgs::UnsureVar* p = z_;
  // @@protoc_insertion_point(field_get:common_msgs.Vector3WithCovariance.z)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::release_z() {
  // @@protoc_insertion_point(field_release:common_msgs.Vector3WithCovariance.z)
  
  ::common_msgs::UnsureVar* temp = z_;
  z_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* Vector3WithCovariance::mutable_z() {
  
  if (z_ == NULL) {
    z_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Vector3WithCovariance.z)
  return z_;
}
inline void Vector3WithCovariance::set_allocated_z(::common_msgs::UnsureVar* z) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete z_;
  }
  if (z) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      z = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, z, submessage_arena);
    }
    
  } else {
    
  }
  z_ = z;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Vector3WithCovariance.z)
}

// -------------------------------------------------------------------

// Quaternion

// double x = 1;
inline void Quaternion::clear_x() {
  x_ = 0;
}
inline double Quaternion::x() const {
  // @@protoc_insertion_point(field_get:common_msgs.Quaternion.x)
  return x_;
}
inline void Quaternion::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Quaternion.x)
}

// double y = 2;
inline void Quaternion::clear_y() {
  y_ = 0;
}
inline double Quaternion::y() const {
  // @@protoc_insertion_point(field_get:common_msgs.Quaternion.y)
  return y_;
}
inline void Quaternion::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Quaternion.y)
}

// double z = 3;
inline void Quaternion::clear_z() {
  z_ = 0;
}
inline double Quaternion::z() const {
  // @@protoc_insertion_point(field_get:common_msgs.Quaternion.z)
  return z_;
}
inline void Quaternion::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Quaternion.z)
}

// double w = 4;
inline void Quaternion::clear_w() {
  w_ = 0;
}
inline double Quaternion::w() const {
  // @@protoc_insertion_point(field_get:common_msgs.Quaternion.w)
  return w_;
}
inline void Quaternion::set_w(double value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Quaternion.w)
}

// -------------------------------------------------------------------

// Vector3

// double x = 1;
inline void Vector3::clear_x() {
  x_ = 0;
}
inline double Vector3::x() const {
  // @@protoc_insertion_point(field_get:common_msgs.Vector3.x)
  return x_;
}
inline void Vector3::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Vector3.x)
}

// double y = 2;
inline void Vector3::clear_y() {
  y_ = 0;
}
inline double Vector3::y() const {
  // @@protoc_insertion_point(field_get:common_msgs.Vector3.y)
  return y_;
}
inline void Vector3::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Vector3.y)
}

// double z = 3;
inline void Vector3::clear_z() {
  z_ = 0;
}
inline double Vector3::z() const {
  // @@protoc_insertion_point(field_get:common_msgs.Vector3.z)
  return z_;
}
inline void Vector3::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Vector3.z)
}

// -------------------------------------------------------------------

// UnsurePoint

// .common_msgs.UnsureVar x = 1;
inline bool UnsurePoint::has_x() const {
  return this != internal_default_instance() && x_ != NULL;
}
inline void UnsurePoint::clear_x() {
  if (GetArenaNoVirtual() == NULL && x_ != NULL) {
    delete x_;
  }
  x_ = NULL;
}
inline const ::common_msgs::UnsureVar& UnsurePoint::x() const {
  const ::common_msgs::UnsureVar* p = x_;
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePoint.x)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* UnsurePoint::release_x() {
  // @@protoc_insertion_point(field_release:common_msgs.UnsurePoint.x)
  
  ::common_msgs::UnsureVar* temp = x_;
  x_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* UnsurePoint::mutable_x() {
  
  if (x_ == NULL) {
    x_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.UnsurePoint.x)
  return x_;
}
inline void UnsurePoint::set_allocated_x(::common_msgs::UnsureVar* x) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete x_;
  }
  if (x) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      x = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, x, submessage_arena);
    }
    
  } else {
    
  }
  x_ = x;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.UnsurePoint.x)
}

// .common_msgs.UnsureVar y = 2;
inline bool UnsurePoint::has_y() const {
  return this != internal_default_instance() && y_ != NULL;
}
inline void UnsurePoint::clear_y() {
  if (GetArenaNoVirtual() == NULL && y_ != NULL) {
    delete y_;
  }
  y_ = NULL;
}
inline const ::common_msgs::UnsureVar& UnsurePoint::y() const {
  const ::common_msgs::UnsureVar* p = y_;
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePoint.y)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* UnsurePoint::release_y() {
  // @@protoc_insertion_point(field_release:common_msgs.UnsurePoint.y)
  
  ::common_msgs::UnsureVar* temp = y_;
  y_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* UnsurePoint::mutable_y() {
  
  if (y_ == NULL) {
    y_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.UnsurePoint.y)
  return y_;
}
inline void UnsurePoint::set_allocated_y(::common_msgs::UnsureVar* y) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete y_;
  }
  if (y) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      y = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, y, submessage_arena);
    }
    
  } else {
    
  }
  y_ = y;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.UnsurePoint.y)
}

// .common_msgs.UnsureVar heading = 3;
inline bool UnsurePoint::has_heading() const {
  return this != internal_default_instance() && heading_ != NULL;
}
inline void UnsurePoint::clear_heading() {
  if (GetArenaNoVirtual() == NULL && heading_ != NULL) {
    delete heading_;
  }
  heading_ = NULL;
}
inline const ::common_msgs::UnsureVar& UnsurePoint::heading() const {
  const ::common_msgs::UnsureVar* p = heading_;
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePoint.heading)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* UnsurePoint::release_heading() {
  // @@protoc_insertion_point(field_release:common_msgs.UnsurePoint.heading)
  
  ::common_msgs::UnsureVar* temp = heading_;
  heading_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* UnsurePoint::mutable_heading() {
  
  if (heading_ == NULL) {
    heading_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.UnsurePoint.heading)
  return heading_;
}
inline void UnsurePoint::set_allocated_heading(::common_msgs::UnsureVar* heading) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete heading_;
  }
  if (heading) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      heading = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heading, submessage_arena);
    }
    
  } else {
    
  }
  heading_ = heading;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.UnsurePoint.heading)
}

// double rho = 4;
inline void UnsurePoint::clear_rho() {
  rho_ = 0;
}
inline double UnsurePoint::rho() const {
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePoint.rho)
  return rho_;
}
inline void UnsurePoint::set_rho(double value) {
  
  rho_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.UnsurePoint.rho)
}

// -------------------------------------------------------------------

// UnsurePosition

// int32 parking_id = 1;
inline void UnsurePosition::clear_parking_id() {
  parking_id_ = 0;
}
inline ::google::protobuf::int32 UnsurePosition::parking_id() const {
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePosition.parking_id)
  return parking_id_;
}
inline void UnsurePosition::set_parking_id(::google::protobuf::int32 value) {
  
  parking_id_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.UnsurePosition.parking_id)
}

// .common_msgs.UnsurePoint point = 2;
inline bool UnsurePosition::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
inline void UnsurePosition::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
}
inline const ::common_msgs::UnsurePoint& UnsurePosition::point() const {
  const ::common_msgs::UnsurePoint* p = point_;
  // @@protoc_insertion_point(field_get:common_msgs.UnsurePosition.point)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsurePoint*>(
      &::common_msgs::_UnsurePoint_default_instance_);
}
inline ::common_msgs::UnsurePoint* UnsurePosition::release_point() {
  // @@protoc_insertion_point(field_release:common_msgs.UnsurePosition.point)
  
  ::common_msgs::UnsurePoint* temp = point_;
  point_ = NULL;
  return temp;
}
inline ::common_msgs::UnsurePoint* UnsurePosition::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::common_msgs::UnsurePoint;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.UnsurePosition.point)
  return point_;
}
inline void UnsurePosition::set_allocated_point(::common_msgs::UnsurePoint* point) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete point_;
  }
  if (point) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      point = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, point, submessage_arena);
    }
    
  } else {
    
  }
  point_ = point;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.UnsurePosition.point)
}

// -------------------------------------------------------------------

// EulerWithCovariance

// .common_msgs.UnsureVar roll = 1;
inline bool EulerWithCovariance::has_roll() const {
  return this != internal_default_instance() && roll_ != NULL;
}
inline void EulerWithCovariance::clear_roll() {
  if (GetArenaNoVirtual() == NULL && roll_ != NULL) {
    delete roll_;
  }
  roll_ = NULL;
}
inline const ::common_msgs::UnsureVar& EulerWithCovariance::roll() const {
  const ::common_msgs::UnsureVar* p = roll_;
  // @@protoc_insertion_point(field_get:common_msgs.EulerWithCovariance.roll)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::release_roll() {
  // @@protoc_insertion_point(field_release:common_msgs.EulerWithCovariance.roll)
  
  ::common_msgs::UnsureVar* temp = roll_;
  roll_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::mutable_roll() {
  
  if (roll_ == NULL) {
    roll_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.EulerWithCovariance.roll)
  return roll_;
}
inline void EulerWithCovariance::set_allocated_roll(::common_msgs::UnsureVar* roll) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete roll_;
  }
  if (roll) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      roll = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, roll, submessage_arena);
    }
    
  } else {
    
  }
  roll_ = roll;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.EulerWithCovariance.roll)
}

// .common_msgs.UnsureVar pitch = 2;
inline bool EulerWithCovariance::has_pitch() const {
  return this != internal_default_instance() && pitch_ != NULL;
}
inline void EulerWithCovariance::clear_pitch() {
  if (GetArenaNoVirtual() == NULL && pitch_ != NULL) {
    delete pitch_;
  }
  pitch_ = NULL;
}
inline const ::common_msgs::UnsureVar& EulerWithCovariance::pitch() const {
  const ::common_msgs::UnsureVar* p = pitch_;
  // @@protoc_insertion_point(field_get:common_msgs.EulerWithCovariance.pitch)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::release_pitch() {
  // @@protoc_insertion_point(field_release:common_msgs.EulerWithCovariance.pitch)
  
  ::common_msgs::UnsureVar* temp = pitch_;
  pitch_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::mutable_pitch() {
  
  if (pitch_ == NULL) {
    pitch_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.EulerWithCovariance.pitch)
  return pitch_;
}
inline void EulerWithCovariance::set_allocated_pitch(::common_msgs::UnsureVar* pitch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pitch_;
  }
  if (pitch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pitch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pitch, submessage_arena);
    }
    
  } else {
    
  }
  pitch_ = pitch;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.EulerWithCovariance.pitch)
}

// .common_msgs.UnsureVar yaw = 3;
inline bool EulerWithCovariance::has_yaw() const {
  return this != internal_default_instance() && yaw_ != NULL;
}
inline void EulerWithCovariance::clear_yaw() {
  if (GetArenaNoVirtual() == NULL && yaw_ != NULL) {
    delete yaw_;
  }
  yaw_ = NULL;
}
inline const ::common_msgs::UnsureVar& EulerWithCovariance::yaw() const {
  const ::common_msgs::UnsureVar* p = yaw_;
  // @@protoc_insertion_point(field_get:common_msgs.EulerWithCovariance.yaw)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::release_yaw() {
  // @@protoc_insertion_point(field_release:common_msgs.EulerWithCovariance.yaw)
  
  ::common_msgs::UnsureVar* temp = yaw_;
  yaw_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* EulerWithCovariance::mutable_yaw() {
  
  if (yaw_ == NULL) {
    yaw_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.EulerWithCovariance.yaw)
  return yaw_;
}
inline void EulerWithCovariance::set_allocated_yaw(::common_msgs::UnsureVar* yaw) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete yaw_;
  }
  if (yaw) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      yaw = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, yaw, submessage_arena);
    }
    
  } else {
    
  }
  yaw_ = yaw;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.EulerWithCovariance.yaw)
}

// -------------------------------------------------------------------

// PoseEuler

// .common_msgs.Vector3WithCovariance position = 1;
inline bool PoseEuler::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void PoseEuler::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::common_msgs::Vector3WithCovariance& PoseEuler::position() const {
  const ::common_msgs::Vector3WithCovariance* p = position_;
  // @@protoc_insertion_point(field_get:common_msgs.PoseEuler.position)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Vector3WithCovariance*>(
      &::common_msgs::_Vector3WithCovariance_default_instance_);
}
inline ::common_msgs::Vector3WithCovariance* PoseEuler::release_position() {
  // @@protoc_insertion_point(field_release:common_msgs.PoseEuler.position)
  
  ::common_msgs::Vector3WithCovariance* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::common_msgs::Vector3WithCovariance* PoseEuler::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::common_msgs::Vector3WithCovariance;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.PoseEuler.position)
  return position_;
}
inline void PoseEuler::set_allocated_position(::common_msgs::Vector3WithCovariance* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.PoseEuler.position)
}

// .common_msgs.EulerWithCovariance rotation = 2;
inline bool PoseEuler::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline void PoseEuler::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
}
inline const ::common_msgs::EulerWithCovariance& PoseEuler::rotation() const {
  const ::common_msgs::EulerWithCovariance* p = rotation_;
  // @@protoc_insertion_point(field_get:common_msgs.PoseEuler.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::EulerWithCovariance*>(
      &::common_msgs::_EulerWithCovariance_default_instance_);
}
inline ::common_msgs::EulerWithCovariance* PoseEuler::release_rotation() {
  // @@protoc_insertion_point(field_release:common_msgs.PoseEuler.rotation)
  
  ::common_msgs::EulerWithCovariance* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline ::common_msgs::EulerWithCovariance* PoseEuler::mutable_rotation() {
  
  if (rotation_ == NULL) {
    rotation_ = new ::common_msgs::EulerWithCovariance;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.PoseEuler.rotation)
  return rotation_;
}
inline void PoseEuler::set_allocated_rotation(::common_msgs::EulerWithCovariance* rotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rotation_;
  }
  if (rotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.PoseEuler.rotation)
}

// -------------------------------------------------------------------

// DRPoseWithTime

// int32 week = 1;
inline void DRPoseWithTime::clear_week() {
  week_ = 0;
}
inline ::google::protobuf::int32 DRPoseWithTime::week() const {
  // @@protoc_insertion_point(field_get:common_msgs.DRPoseWithTime.week)
  return week_;
}
inline void DRPoseWithTime::set_week(::google::protobuf::int32 value) {
  
  week_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.DRPoseWithTime.week)
}

// double utctime = 2;
inline void DRPoseWithTime::clear_utctime() {
  utctime_ = 0;
}
inline double DRPoseWithTime::utctime() const {
  // @@protoc_insertion_point(field_get:common_msgs.DRPoseWithTime.utctime)
  return utctime_;
}
inline void DRPoseWithTime::set_utctime(double value) {
  
  utctime_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.DRPoseWithTime.utctime)
}

// double dr_time = 3;
inline void DRPoseWithTime::clear_dr_time() {
  dr_time_ = 0;
}
inline double DRPoseWithTime::dr_time() const {
  // @@protoc_insertion_point(field_get:common_msgs.DRPoseWithTime.dr_time)
  return dr_time_;
}
inline void DRPoseWithTime::set_dr_time(double value) {
  
  dr_time_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.DRPoseWithTime.dr_time)
}

// .common_msgs.PoseEuler pose_euler = 4;
inline bool DRPoseWithTime::has_pose_euler() const {
  return this != internal_default_instance() && pose_euler_ != NULL;
}
inline void DRPoseWithTime::clear_pose_euler() {
  if (GetArenaNoVirtual() == NULL && pose_euler_ != NULL) {
    delete pose_euler_;
  }
  pose_euler_ = NULL;
}
inline const ::common_msgs::PoseEuler& DRPoseWithTime::pose_euler() const {
  const ::common_msgs::PoseEuler* p = pose_euler_;
  // @@protoc_insertion_point(field_get:common_msgs.DRPoseWithTime.pose_euler)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::PoseEuler*>(
      &::common_msgs::_PoseEuler_default_instance_);
}
inline ::common_msgs::PoseEuler* DRPoseWithTime::release_pose_euler() {
  // @@protoc_insertion_point(field_release:common_msgs.DRPoseWithTime.pose_euler)
  
  ::common_msgs::PoseEuler* temp = pose_euler_;
  pose_euler_ = NULL;
  return temp;
}
inline ::common_msgs::PoseEuler* DRPoseWithTime::mutable_pose_euler() {
  
  if (pose_euler_ == NULL) {
    pose_euler_ = new ::common_msgs::PoseEuler;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.DRPoseWithTime.pose_euler)
  return pose_euler_;
}
inline void DRPoseWithTime::set_allocated_pose_euler(::common_msgs::PoseEuler* pose_euler) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_euler_;
  }
  if (pose_euler) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose_euler = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose_euler, submessage_arena);
    }
    
  } else {
    
  }
  pose_euler_ = pose_euler;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.DRPoseWithTime.pose_euler)
}

// -------------------------------------------------------------------

// Twist

// .common_msgs.Vector3WithCovariance velocity = 1;
inline bool Twist::has_velocity() const {
  return this != internal_default_instance() && velocity_ != NULL;
}
inline void Twist::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
}
inline const ::common_msgs::Vector3WithCovariance& Twist::velocity() const {
  const ::common_msgs::Vector3WithCovariance* p = velocity_;
  // @@protoc_insertion_point(field_get:common_msgs.Twist.velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Vector3WithCovariance*>(
      &::common_msgs::_Vector3WithCovariance_default_instance_);
}
inline ::common_msgs::Vector3WithCovariance* Twist::release_velocity() {
  // @@protoc_insertion_point(field_release:common_msgs.Twist.velocity)
  
  ::common_msgs::Vector3WithCovariance* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline ::common_msgs::Vector3WithCovariance* Twist::mutable_velocity() {
  
  if (velocity_ == NULL) {
    velocity_ = new ::common_msgs::Vector3WithCovariance;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Twist.velocity)
  return velocity_;
}
inline void Twist::set_allocated_velocity(::common_msgs::Vector3WithCovariance* velocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete velocity_;
  }
  if (velocity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      velocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, velocity, submessage_arena);
    }
    
  } else {
    
  }
  velocity_ = velocity;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Twist.velocity)
}

// .common_msgs.Vector3WithCovariance angular_velocity = 2;
inline bool Twist::has_angular_velocity() const {
  return this != internal_default_instance() && angular_velocity_ != NULL;
}
inline void Twist::clear_angular_velocity() {
  if (GetArenaNoVirtual() == NULL && angular_velocity_ != NULL) {
    delete angular_velocity_;
  }
  angular_velocity_ = NULL;
}
inline const ::common_msgs::Vector3WithCovariance& Twist::angular_velocity() const {
  const ::common_msgs::Vector3WithCovariance* p = angular_velocity_;
  // @@protoc_insertion_point(field_get:common_msgs.Twist.angular_velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Vector3WithCovariance*>(
      &::common_msgs::_Vector3WithCovariance_default_instance_);
}
inline ::common_msgs::Vector3WithCovariance* Twist::release_angular_velocity() {
  // @@protoc_insertion_point(field_release:common_msgs.Twist.angular_velocity)
  
  ::common_msgs::Vector3WithCovariance* temp = angular_velocity_;
  angular_velocity_ = NULL;
  return temp;
}
inline ::common_msgs::Vector3WithCovariance* Twist::mutable_angular_velocity() {
  
  if (angular_velocity_ == NULL) {
    angular_velocity_ = new ::common_msgs::Vector3WithCovariance;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Twist.angular_velocity)
  return angular_velocity_;
}
inline void Twist::set_allocated_angular_velocity(::common_msgs::Vector3WithCovariance* angular_velocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete angular_velocity_;
  }
  if (angular_velocity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      angular_velocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angular_velocity, submessage_arena);
    }
    
  } else {
    
  }
  angular_velocity_ = angular_velocity;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Twist.angular_velocity)
}

// -------------------------------------------------------------------

// LLH

// .common_msgs.UnsureVar lat = 1;
inline bool LLH::has_lat() const {
  return this != internal_default_instance() && lat_ != NULL;
}
inline void LLH::clear_lat() {
  if (GetArenaNoVirtual() == NULL && lat_ != NULL) {
    delete lat_;
  }
  lat_ = NULL;
}
inline const ::common_msgs::UnsureVar& LLH::lat() const {
  const ::common_msgs::UnsureVar* p = lat_;
  // @@protoc_insertion_point(field_get:common_msgs.LLH.lat)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* LLH::release_lat() {
  // @@protoc_insertion_point(field_release:common_msgs.LLH.lat)
  
  ::common_msgs::UnsureVar* temp = lat_;
  lat_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* LLH::mutable_lat() {
  
  if (lat_ == NULL) {
    lat_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.LLH.lat)
  return lat_;
}
inline void LLH::set_allocated_lat(::common_msgs::UnsureVar* lat) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lat_;
  }
  if (lat) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lat = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lat, submessage_arena);
    }
    
  } else {
    
  }
  lat_ = lat;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.LLH.lat)
}

// .common_msgs.UnsureVar lon = 2;
inline bool LLH::has_lon() const {
  return this != internal_default_instance() && lon_ != NULL;
}
inline void LLH::clear_lon() {
  if (GetArenaNoVirtual() == NULL && lon_ != NULL) {
    delete lon_;
  }
  lon_ = NULL;
}
inline const ::common_msgs::UnsureVar& LLH::lon() const {
  const ::common_msgs::UnsureVar* p = lon_;
  // @@protoc_insertion_point(field_get:common_msgs.LLH.lon)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* LLH::release_lon() {
  // @@protoc_insertion_point(field_release:common_msgs.LLH.lon)
  
  ::common_msgs::UnsureVar* temp = lon_;
  lon_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* LLH::mutable_lon() {
  
  if (lon_ == NULL) {
    lon_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.LLH.lon)
  return lon_;
}
inline void LLH::set_allocated_lon(::common_msgs::UnsureVar* lon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete lon_;
  }
  if (lon) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lon, submessage_arena);
    }
    
  } else {
    
  }
  lon_ = lon;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.LLH.lon)
}

// .common_msgs.UnsureVar height = 3;
inline bool LLH::has_height() const {
  return this != internal_default_instance() && height_ != NULL;
}
inline void LLH::clear_height() {
  if (GetArenaNoVirtual() == NULL && height_ != NULL) {
    delete height_;
  }
  height_ = NULL;
}
inline const ::common_msgs::UnsureVar& LLH::height() const {
  const ::common_msgs::UnsureVar* p = height_;
  // @@protoc_insertion_point(field_get:common_msgs.LLH.height)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsureVar*>(
      &::common_msgs::_UnsureVar_default_instance_);
}
inline ::common_msgs::UnsureVar* LLH::release_height() {
  // @@protoc_insertion_point(field_release:common_msgs.LLH.height)
  
  ::common_msgs::UnsureVar* temp = height_;
  height_ = NULL;
  return temp;
}
inline ::common_msgs::UnsureVar* LLH::mutable_height() {
  
  if (height_ == NULL) {
    height_ = new ::common_msgs::UnsureVar;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.LLH.height)
  return height_;
}
inline void LLH::set_allocated_height(::common_msgs::UnsureVar* height) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete height_;
  }
  if (height) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      height = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, height, submessage_arena);
    }
    
  } else {
    
  }
  height_ = height;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.LLH.height)
}

// -------------------------------------------------------------------

// NavStatus

// double utc_time = 1;
inline void NavStatus::clear_utc_time() {
  utc_time_ = 0;
}
inline double NavStatus::utc_time() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.utc_time)
  return utc_time_;
}
inline void NavStatus::set_utc_time(double value) {
  
  utc_time_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.utc_time)
}

// int32 gps_status = 2;
inline void NavStatus::clear_gps_status() {
  gps_status_ = 0;
}
inline ::google::protobuf::int32 NavStatus::gps_status() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.gps_status)
  return gps_status_;
}
inline void NavStatus::set_gps_status(::google::protobuf::int32 value) {
  
  gps_status_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.gps_status)
}

// int32 pos_status = 3;
inline void NavStatus::clear_pos_status() {
  pos_status_ = 0;
}
inline ::google::protobuf::int32 NavStatus::pos_status() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.pos_status)
  return pos_status_;
}
inline void NavStatus::set_pos_status(::google::protobuf::int32 value) {
  
  pos_status_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.pos_status)
}

// int32 att_status = 4;
inline void NavStatus::clear_att_status() {
  att_status_ = 0;
}
inline ::google::protobuf::int32 NavStatus::att_status() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.att_status)
  return att_status_;
}
inline void NavStatus::set_att_status(::google::protobuf::int32 value) {
  
  att_status_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.att_status)
}

// int32 init_status = 5;
inline void NavStatus::clear_init_status() {
  init_status_ = 0;
}
inline ::google::protobuf::int32 NavStatus::init_status() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.init_status)
  return init_status_;
}
inline void NavStatus::set_init_status(::google::protobuf::int32 value) {
  
  init_status_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.init_status)
}

// int32 sate_num = 6;
inline void NavStatus::clear_sate_num() {
  sate_num_ = 0;
}
inline ::google::protobuf::int32 NavStatus::sate_num() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.sate_num)
  return sate_num_;
}
inline void NavStatus::set_sate_num(::google::protobuf::int32 value) {
  
  sate_num_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.sate_num)
}

// float hdop = 7;
inline void NavStatus::clear_hdop() {
  hdop_ = 0;
}
inline float NavStatus::hdop() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.hdop)
  return hdop_;
}
inline void NavStatus::set_hdop(float value) {
  
  hdop_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.hdop)
}

// float pdop = 8;
inline void NavStatus::clear_pdop() {
  pdop_ = 0;
}
inline float NavStatus::pdop() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.pdop)
  return pdop_;
}
inline void NavStatus::set_pdop(float value) {
  
  pdop_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.pdop)
}

// float diff_age = 9;
inline void NavStatus::clear_diff_age() {
  diff_age_ = 0;
}
inline float NavStatus::diff_age() const {
  // @@protoc_insertion_point(field_get:common_msgs.NavStatus.diff_age)
  return diff_age_;
}
inline void NavStatus::set_diff_age(float value) {
  
  diff_age_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.NavStatus.diff_age)
}

// -------------------------------------------------------------------

// Point2D

// double x = 1;
inline void Point2D::clear_x() {
  x_ = 0;
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:common_msgs.Point2D.x)
  return x_;
}
inline void Point2D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Point2D.x)
}

// double y = 2;
inline void Point2D::clear_y() {
  y_ = 0;
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:common_msgs.Point2D.y)
  return y_;
}
inline void Point2D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Point2D.y)
}

// -------------------------------------------------------------------

// Point3D

// double x = 1;
inline void Point3D::clear_x() {
  x_ = 0;
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:common_msgs.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Point3D.x)
}

// double y = 2;
inline void Point3D::clear_y() {
  y_ = 0;
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:common_msgs.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Point3D.y)
}

// double z = 3;
inline void Point3D::clear_z() {
  z_ = 0;
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:common_msgs.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Point3D.z)
}

// -------------------------------------------------------------------

// PointENU

// double x = 1;
inline void PointENU::clear_x() {
  x_ = 0;
}
inline double PointENU::x() const {
  // @@protoc_insertion_point(field_get:common_msgs.PointENU.x)
  return x_;
}
inline void PointENU::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.PointENU.x)
}

// double y = 2;
inline void PointENU::clear_y() {
  y_ = 0;
}
inline double PointENU::y() const {
  // @@protoc_insertion_point(field_get:common_msgs.PointENU.y)
  return y_;
}
inline void PointENU::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.PointENU.y)
}

// double z = 3;
inline void PointENU::clear_z() {
  z_ = 0;
}
inline double PointENU::z() const {
  // @@protoc_insertion_point(field_get:common_msgs.PointENU.z)
  return z_;
}
inline void PointENU::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.PointENU.z)
}

// -------------------------------------------------------------------

// PoseQuaternion

// .common_msgs.Vector3WithCovariance position = 1;
inline bool PoseQuaternion::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void PoseQuaternion::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::common_msgs::Vector3WithCovariance& PoseQuaternion::position() const {
  const ::common_msgs::Vector3WithCovariance* p = position_;
  // @@protoc_insertion_point(field_get:common_msgs.PoseQuaternion.position)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Vector3WithCovariance*>(
      &::common_msgs::_Vector3WithCovariance_default_instance_);
}
inline ::common_msgs::Vector3WithCovariance* PoseQuaternion::release_position() {
  // @@protoc_insertion_point(field_release:common_msgs.PoseQuaternion.position)
  
  ::common_msgs::Vector3WithCovariance* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::common_msgs::Vector3WithCovariance* PoseQuaternion::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::common_msgs::Vector3WithCovariance;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.PoseQuaternion.position)
  return position_;
}
inline void PoseQuaternion::set_allocated_position(::common_msgs::Vector3WithCovariance* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.PoseQuaternion.position)
}

// .common_msgs.Quaternion quaternion = 2;
inline bool PoseQuaternion::has_quaternion() const {
  return this != internal_default_instance() && quaternion_ != NULL;
}
inline void PoseQuaternion::clear_quaternion() {
  if (GetArenaNoVirtual() == NULL && quaternion_ != NULL) {
    delete quaternion_;
  }
  quaternion_ = NULL;
}
inline const ::common_msgs::Quaternion& PoseQuaternion::quaternion() const {
  const ::common_msgs::Quaternion* p = quaternion_;
  // @@protoc_insertion_point(field_get:common_msgs.PoseQuaternion.quaternion)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Quaternion*>(
      &::common_msgs::_Quaternion_default_instance_);
}
inline ::common_msgs::Quaternion* PoseQuaternion::release_quaternion() {
  // @@protoc_insertion_point(field_release:common_msgs.PoseQuaternion.quaternion)
  
  ::common_msgs::Quaternion* temp = quaternion_;
  quaternion_ = NULL;
  return temp;
}
inline ::common_msgs::Quaternion* PoseQuaternion::mutable_quaternion() {
  
  if (quaternion_ == NULL) {
    quaternion_ = new ::common_msgs::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.PoseQuaternion.quaternion)
  return quaternion_;
}
inline void PoseQuaternion::set_allocated_quaternion(::common_msgs::Quaternion* quaternion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete quaternion_;
  }
  if (quaternion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quaternion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quaternion, submessage_arena);
    }
    
  } else {
    
  }
  quaternion_ = quaternion;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.PoseQuaternion.quaternion)
}

// .common_msgs.Vector3 rpy_covariance = 3;
inline bool PoseQuaternion::has_rpy_covariance() const {
  return this != internal_default_instance() && rpy_covariance_ != NULL;
}
inline void PoseQuaternion::clear_rpy_covariance() {
  if (GetArenaNoVirtual() == NULL && rpy_covariance_ != NULL) {
    delete rpy_covariance_;
  }
  rpy_covariance_ = NULL;
}
inline const ::common_msgs::Vector3& PoseQuaternion::rpy_covariance() const {
  const ::common_msgs::Vector3* p = rpy_covariance_;
  // @@protoc_insertion_point(field_get:common_msgs.PoseQuaternion.rpy_covariance)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::Vector3*>(
      &::common_msgs::_Vector3_default_instance_);
}
inline ::common_msgs::Vector3* PoseQuaternion::release_rpy_covariance() {
  // @@protoc_insertion_point(field_release:common_msgs.PoseQuaternion.rpy_covariance)
  
  ::common_msgs::Vector3* temp = rpy_covariance_;
  rpy_covariance_ = NULL;
  return temp;
}
inline ::common_msgs::Vector3* PoseQuaternion::mutable_rpy_covariance() {
  
  if (rpy_covariance_ == NULL) {
    rpy_covariance_ = new ::common_msgs::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.PoseQuaternion.rpy_covariance)
  return rpy_covariance_;
}
inline void PoseQuaternion::set_allocated_rpy_covariance(::common_msgs::Vector3* rpy_covariance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rpy_covariance_;
  }
  if (rpy_covariance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rpy_covariance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rpy_covariance, submessage_arena);
    }
    
  } else {
    
  }
  rpy_covariance_ = rpy_covariance;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.PoseQuaternion.rpy_covariance)
}

// -------------------------------------------------------------------

// Pose

// .common_msgs.PoseEuler pose_euler = 1;
inline bool Pose::has_pose_euler() const {
  return this != internal_default_instance() && pose_euler_ != NULL;
}
inline void Pose::clear_pose_euler() {
  if (GetArenaNoVirtual() == NULL && pose_euler_ != NULL) {
    delete pose_euler_;
  }
  pose_euler_ = NULL;
}
inline const ::common_msgs::PoseEuler& Pose::pose_euler() const {
  const ::common_msgs::PoseEuler* p = pose_euler_;
  // @@protoc_insertion_point(field_get:common_msgs.Pose.pose_euler)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::PoseEuler*>(
      &::common_msgs::_PoseEuler_default_instance_);
}
inline ::common_msgs::PoseEuler* Pose::release_pose_euler() {
  // @@protoc_insertion_point(field_release:common_msgs.Pose.pose_euler)
  
  ::common_msgs::PoseEuler* temp = pose_euler_;
  pose_euler_ = NULL;
  return temp;
}
inline ::common_msgs::PoseEuler* Pose::mutable_pose_euler() {
  
  if (pose_euler_ == NULL) {
    pose_euler_ = new ::common_msgs::PoseEuler;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Pose.pose_euler)
  return pose_euler_;
}
inline void Pose::set_allocated_pose_euler(::common_msgs::PoseEuler* pose_euler) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_euler_;
  }
  if (pose_euler) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose_euler = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose_euler, submessage_arena);
    }
    
  } else {
    
  }
  pose_euler_ = pose_euler;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Pose.pose_euler)
}

// .common_msgs.PoseQuaternion pose_quaternion = 2;
inline bool Pose::has_pose_quaternion() const {
  return this != internal_default_instance() && pose_quaternion_ != NULL;
}
inline void Pose::clear_pose_quaternion() {
  if (GetArenaNoVirtual() == NULL && pose_quaternion_ != NULL) {
    delete pose_quaternion_;
  }
  pose_quaternion_ = NULL;
}
inline const ::common_msgs::PoseQuaternion& Pose::pose_quaternion() const {
  const ::common_msgs::PoseQuaternion* p = pose_quaternion_;
  // @@protoc_insertion_point(field_get:common_msgs.Pose.pose_quaternion)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::PoseQuaternion*>(
      &::common_msgs::_PoseQuaternion_default_instance_);
}
inline ::common_msgs::PoseQuaternion* Pose::release_pose_quaternion() {
  // @@protoc_insertion_point(field_release:common_msgs.Pose.pose_quaternion)
  
  ::common_msgs::PoseQuaternion* temp = pose_quaternion_;
  pose_quaternion_ = NULL;
  return temp;
}
inline ::common_msgs::PoseQuaternion* Pose::mutable_pose_quaternion() {
  
  if (pose_quaternion_ == NULL) {
    pose_quaternion_ = new ::common_msgs::PoseQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.Pose.pose_quaternion)
  return pose_quaternion_;
}
inline void Pose::set_allocated_pose_quaternion(::common_msgs::PoseQuaternion* pose_quaternion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pose_quaternion_;
  }
  if (pose_quaternion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose_quaternion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose_quaternion, submessage_arena);
    }
    
  } else {
    
  }
  pose_quaternion_ = pose_quaternion;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.Pose.pose_quaternion)
}

// int32 status = 3;
inline void Pose::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 Pose::status() const {
  // @@protoc_insertion_point(field_get:common_msgs.Pose.status)
  return status_;
}
inline void Pose::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:common_msgs.Pose.status)
}

// -------------------------------------------------------------------

// WheelSpeed

// .common_msgs.UnsurePoint front_left = 1;
inline bool WheelSpeed::has_front_left() const {
  return this != internal_default_instance() && front_left_ != NULL;
}
inline void WheelSpeed::clear_front_left() {
  if (GetArenaNoVirtual() == NULL && front_left_ != NULL) {
    delete front_left_;
  }
  front_left_ = NULL;
}
inline const ::common_msgs::UnsurePoint& WheelSpeed::front_left() const {
  const ::common_msgs::UnsurePoint* p = front_left_;
  // @@protoc_insertion_point(field_get:common_msgs.WheelSpeed.front_left)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsurePoint*>(
      &::common_msgs::_UnsurePoint_default_instance_);
}
inline ::common_msgs::UnsurePoint* WheelSpeed::release_front_left() {
  // @@protoc_insertion_point(field_release:common_msgs.WheelSpeed.front_left)
  
  ::common_msgs::UnsurePoint* temp = front_left_;
  front_left_ = NULL;
  return temp;
}
inline ::common_msgs::UnsurePoint* WheelSpeed::mutable_front_left() {
  
  if (front_left_ == NULL) {
    front_left_ = new ::common_msgs::UnsurePoint;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.WheelSpeed.front_left)
  return front_left_;
}
inline void WheelSpeed::set_allocated_front_left(::common_msgs::UnsurePoint* front_left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete front_left_;
  }
  if (front_left) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      front_left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, front_left, submessage_arena);
    }
    
  } else {
    
  }
  front_left_ = front_left;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.WheelSpeed.front_left)
}

// .common_msgs.UnsurePoint front_right = 2;
inline bool WheelSpeed::has_front_right() const {
  return this != internal_default_instance() && front_right_ != NULL;
}
inline void WheelSpeed::clear_front_right() {
  if (GetArenaNoVirtual() == NULL && front_right_ != NULL) {
    delete front_right_;
  }
  front_right_ = NULL;
}
inline const ::common_msgs::UnsurePoint& WheelSpeed::front_right() const {
  const ::common_msgs::UnsurePoint* p = front_right_;
  // @@protoc_insertion_point(field_get:common_msgs.WheelSpeed.front_right)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsurePoint*>(
      &::common_msgs::_UnsurePoint_default_instance_);
}
inline ::common_msgs::UnsurePoint* WheelSpeed::release_front_right() {
  // @@protoc_insertion_point(field_release:common_msgs.WheelSpeed.front_right)
  
  ::common_msgs::UnsurePoint* temp = front_right_;
  front_right_ = NULL;
  return temp;
}
inline ::common_msgs::UnsurePoint* WheelSpeed::mutable_front_right() {
  
  if (front_right_ == NULL) {
    front_right_ = new ::common_msgs::UnsurePoint;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.WheelSpeed.front_right)
  return front_right_;
}
inline void WheelSpeed::set_allocated_front_right(::common_msgs::UnsurePoint* front_right) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete front_right_;
  }
  if (front_right) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      front_right = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, front_right, submessage_arena);
    }
    
  } else {
    
  }
  front_right_ = front_right;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.WheelSpeed.front_right)
}

// .common_msgs.UnsurePoint rear_left = 3;
inline bool WheelSpeed::has_rear_left() const {
  return this != internal_default_instance() && rear_left_ != NULL;
}
inline void WheelSpeed::clear_rear_left() {
  if (GetArenaNoVirtual() == NULL && rear_left_ != NULL) {
    delete rear_left_;
  }
  rear_left_ = NULL;
}
inline const ::common_msgs::UnsurePoint& WheelSpeed::rear_left() const {
  const ::common_msgs::UnsurePoint* p = rear_left_;
  // @@protoc_insertion_point(field_get:common_msgs.WheelSpeed.rear_left)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsurePoint*>(
      &::common_msgs::_UnsurePoint_default_instance_);
}
inline ::common_msgs::UnsurePoint* WheelSpeed::release_rear_left() {
  // @@protoc_insertion_point(field_release:common_msgs.WheelSpeed.rear_left)
  
  ::common_msgs::UnsurePoint* temp = rear_left_;
  rear_left_ = NULL;
  return temp;
}
inline ::common_msgs::UnsurePoint* WheelSpeed::mutable_rear_left() {
  
  if (rear_left_ == NULL) {
    rear_left_ = new ::common_msgs::UnsurePoint;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.WheelSpeed.rear_left)
  return rear_left_;
}
inline void WheelSpeed::set_allocated_rear_left(::common_msgs::UnsurePoint* rear_left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rear_left_;
  }
  if (rear_left) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rear_left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rear_left, submessage_arena);
    }
    
  } else {
    
  }
  rear_left_ = rear_left;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.WheelSpeed.rear_left)
}

// .common_msgs.UnsurePoint rear_right = 4;
inline bool WheelSpeed::has_rear_right() const {
  return this != internal_default_instance() && rear_right_ != NULL;
}
inline void WheelSpeed::clear_rear_right() {
  if (GetArenaNoVirtual() == NULL && rear_right_ != NULL) {
    delete rear_right_;
  }
  rear_right_ = NULL;
}
inline const ::common_msgs::UnsurePoint& WheelSpeed::rear_right() const {
  const ::common_msgs::UnsurePoint* p = rear_right_;
  // @@protoc_insertion_point(field_get:common_msgs.WheelSpeed.rear_right)
  return p != NULL ? *p : *reinterpret_cast<const ::common_msgs::UnsurePoint*>(
      &::common_msgs::_UnsurePoint_default_instance_);
}
inline ::common_msgs::UnsurePoint* WheelSpeed::release_rear_right() {
  // @@protoc_insertion_point(field_release:common_msgs.WheelSpeed.rear_right)
  
  ::common_msgs::UnsurePoint* temp = rear_right_;
  rear_right_ = NULL;
  return temp;
}
inline ::common_msgs::UnsurePoint* WheelSpeed::mutable_rear_right() {
  
  if (rear_right_ == NULL) {
    rear_right_ = new ::common_msgs::UnsurePoint;
  }
  // @@protoc_insertion_point(field_mutable:common_msgs.WheelSpeed.rear_right)
  return rear_right_;
}
inline void WheelSpeed::set_allocated_rear_right(::common_msgs::UnsurePoint* rear_right) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rear_right_;
  }
  if (rear_right) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rear_right = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rear_right, submessage_arena);
    }
    
  } else {
    
  }
  rear_right_ = rear_right;
  // @@protoc_insertion_point(field_set_allocated:common_msgs.WheelSpeed.rear_right)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_5fmsgs_2eproto__INCLUDED
