// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor_table_config.proto

#ifndef PROTOBUF_monitor_5ftable_5fconfig_2eproto__INCLUDED
#define PROTOBUF_monitor_5ftable_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_monitor_5ftable_5fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMonitorFaultItemImpl();
void InitDefaultsMonitorFaultItem();
void InitDefaultsMonitorFaultErrorTableImpl();
void InitDefaultsMonitorFaultErrorTable();
void InitDefaultsMonitorTableConfImpl();
void InitDefaultsMonitorTableConf();
inline void InitDefaults() {
  InitDefaultsMonitorFaultItem();
  InitDefaultsMonitorFaultErrorTable();
  InitDefaultsMonitorTableConf();
}
}  // namespace protobuf_monitor_5ftable_5fconfig_2eproto
namespace acu {
namespace common {
class MonitorFaultErrorTable;
class MonitorFaultErrorTableDefaultTypeInternal;
extern MonitorFaultErrorTableDefaultTypeInternal _MonitorFaultErrorTable_default_instance_;
class MonitorFaultItem;
class MonitorFaultItemDefaultTypeInternal;
extern MonitorFaultItemDefaultTypeInternal _MonitorFaultItem_default_instance_;
class MonitorTableConf;
class MonitorTableConfDefaultTypeInternal;
extern MonitorTableConfDefaultTypeInternal _MonitorTableConf_default_instance_;
}  // namespace common
}  // namespace acu
namespace acu {
namespace common {

// ===================================================================

class MonitorFaultItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.MonitorFaultItem) */ {
 public:
  MonitorFaultItem();
  virtual ~MonitorFaultItem();

  MonitorFaultItem(const MonitorFaultItem& from);

  inline MonitorFaultItem& operator=(const MonitorFaultItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorFaultItem(MonitorFaultItem&& from) noexcept
    : MonitorFaultItem() {
    *this = ::std::move(from);
  }

  inline MonitorFaultItem& operator=(MonitorFaultItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorFaultItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonitorFaultItem* internal_default_instance() {
    return reinterpret_cast<const MonitorFaultItem*>(
               &_MonitorFaultItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MonitorFaultItem* other);
  friend void swap(MonitorFaultItem& a, MonitorFaultItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorFaultItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorFaultItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorFaultItem& from);
  void MergeFrom(const MonitorFaultItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorFaultItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 error_code() const;
  void set_error_code(::google::protobuf::uint32 value);

  // required int32 fault_level = 2;
  bool has_fault_level() const;
  void clear_fault_level();
  static const int kFaultLevelFieldNumber = 2;
  ::google::protobuf::int32 fault_level() const;
  void set_fault_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:acu.common.MonitorFaultItem)
 private:
  void set_has_error_code();
  void clear_has_error_code();
  void set_has_fault_level();
  void clear_has_fault_level();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 error_code_;
  ::google::protobuf::int32 fault_level_;
  friend struct ::protobuf_monitor_5ftable_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultItemImpl();
};
// -------------------------------------------------------------------

class MonitorFaultErrorTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.MonitorFaultErrorTable) */ {
 public:
  MonitorFaultErrorTable();
  virtual ~MonitorFaultErrorTable();

  MonitorFaultErrorTable(const MonitorFaultErrorTable& from);

  inline MonitorFaultErrorTable& operator=(const MonitorFaultErrorTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorFaultErrorTable(MonitorFaultErrorTable&& from) noexcept
    : MonitorFaultErrorTable() {
    *this = ::std::move(from);
  }

  inline MonitorFaultErrorTable& operator=(MonitorFaultErrorTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorFaultErrorTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonitorFaultErrorTable* internal_default_instance() {
    return reinterpret_cast<const MonitorFaultErrorTable*>(
               &_MonitorFaultErrorTable_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MonitorFaultErrorTable* other);
  friend void swap(MonitorFaultErrorTable& a, MonitorFaultErrorTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorFaultErrorTable* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorFaultErrorTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorFaultErrorTable& from);
  void MergeFrom(const MonitorFaultErrorTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorFaultErrorTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acu.common.MonitorFaultItem fault_info = 2;
  int fault_info_size() const;
  void clear_fault_info();
  static const int kFaultInfoFieldNumber = 2;
  const ::acu::common::MonitorFaultItem& fault_info(int index) const;
  ::acu::common::MonitorFaultItem* mutable_fault_info(int index);
  ::acu::common::MonitorFaultItem* add_fault_info();
  ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultItem >*
      mutable_fault_info();
  const ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultItem >&
      fault_info() const;

  // required string table_name = 1;
  bool has_table_name() const;
  void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& table_name() const;
  void set_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_table_name(::std::string&& value);
  #endif
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  ::std::string* mutable_table_name();
  ::std::string* release_table_name();
  void set_allocated_table_name(::std::string* table_name);

  // @@protoc_insertion_point(class_scope:acu.common.MonitorFaultErrorTable)
 private:
  void set_has_table_name();
  void clear_has_table_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultItem > fault_info_;
  ::google::protobuf::internal::ArenaStringPtr table_name_;
  friend struct ::protobuf_monitor_5ftable_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultErrorTableImpl();
};
// -------------------------------------------------------------------

class MonitorTableConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.MonitorTableConf) */ {
 public:
  MonitorTableConf();
  virtual ~MonitorTableConf();

  MonitorTableConf(const MonitorTableConf& from);

  inline MonitorTableConf& operator=(const MonitorTableConf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonitorTableConf(MonitorTableConf&& from) noexcept
    : MonitorTableConf() {
    *this = ::std::move(from);
  }

  inline MonitorTableConf& operator=(MonitorTableConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MonitorTableConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonitorTableConf* internal_default_instance() {
    return reinterpret_cast<const MonitorTableConf*>(
               &_MonitorTableConf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MonitorTableConf* other);
  friend void swap(MonitorTableConf& a, MonitorTableConf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonitorTableConf* New() const PROTOBUF_FINAL { return New(NULL); }

  MonitorTableConf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonitorTableConf& from);
  void MergeFrom(const MonitorTableConf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonitorTableConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acu.common.MonitorFaultErrorTable table = 1;
  int table_size() const;
  void clear_table();
  static const int kTableFieldNumber = 1;
  const ::acu::common::MonitorFaultErrorTable& table(int index) const;
  ::acu::common::MonitorFaultErrorTable* mutable_table(int index);
  ::acu::common::MonitorFaultErrorTable* add_table();
  ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultErrorTable >*
      mutable_table();
  const ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultErrorTable >&
      table() const;

  // @@protoc_insertion_point(class_scope:acu.common.MonitorTableConf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultErrorTable > table_;
  friend struct ::protobuf_monitor_5ftable_5fconfig_2eproto::TableStruct;
  friend void ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorTableConfImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MonitorFaultItem

// required uint32 error_code = 1;
inline bool MonitorFaultItem::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonitorFaultItem::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonitorFaultItem::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonitorFaultItem::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 MonitorFaultItem::error_code() const {
  // @@protoc_insertion_point(field_get:acu.common.MonitorFaultItem.error_code)
  return error_code_;
}
inline void MonitorFaultItem::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:acu.common.MonitorFaultItem.error_code)
}

// required int32 fault_level = 2;
inline bool MonitorFaultItem::has_fault_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonitorFaultItem::set_has_fault_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonitorFaultItem::clear_has_fault_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonitorFaultItem::clear_fault_level() {
  fault_level_ = 0;
  clear_has_fault_level();
}
inline ::google::protobuf::int32 MonitorFaultItem::fault_level() const {
  // @@protoc_insertion_point(field_get:acu.common.MonitorFaultItem.fault_level)
  return fault_level_;
}
inline void MonitorFaultItem::set_fault_level(::google::protobuf::int32 value) {
  set_has_fault_level();
  fault_level_ = value;
  // @@protoc_insertion_point(field_set:acu.common.MonitorFaultItem.fault_level)
}

// -------------------------------------------------------------------

// MonitorFaultErrorTable

// required string table_name = 1;
inline bool MonitorFaultErrorTable::has_table_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonitorFaultErrorTable::set_has_table_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonitorFaultErrorTable::clear_has_table_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonitorFaultErrorTable::clear_table_name() {
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_table_name();
}
inline const ::std::string& MonitorFaultErrorTable::table_name() const {
  // @@protoc_insertion_point(field_get:acu.common.MonitorFaultErrorTable.table_name)
  return table_name_.GetNoArena();
}
inline void MonitorFaultErrorTable::set_table_name(const ::std::string& value) {
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:acu.common.MonitorFaultErrorTable.table_name)
}
#if LANG_CXX11
inline void MonitorFaultErrorTable::set_table_name(::std::string&& value) {
  set_has_table_name();
  table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:acu.common.MonitorFaultErrorTable.table_name)
}
#endif
inline void MonitorFaultErrorTable::set_table_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:acu.common.MonitorFaultErrorTable.table_name)
}
inline void MonitorFaultErrorTable::set_table_name(const char* value, size_t size) {
  set_has_table_name();
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:acu.common.MonitorFaultErrorTable.table_name)
}
inline ::std::string* MonitorFaultErrorTable::mutable_table_name() {
  set_has_table_name();
  // @@protoc_insertion_point(field_mutable:acu.common.MonitorFaultErrorTable.table_name)
  return table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MonitorFaultErrorTable::release_table_name() {
  // @@protoc_insertion_point(field_release:acu.common.MonitorFaultErrorTable.table_name)
  clear_has_table_name();
  return table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MonitorFaultErrorTable::set_allocated_table_name(::std::string* table_name) {
  if (table_name != NULL) {
    set_has_table_name();
  } else {
    clear_has_table_name();
  }
  table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_name);
  // @@protoc_insertion_point(field_set_allocated:acu.common.MonitorFaultErrorTable.table_name)
}

// repeated .acu.common.MonitorFaultItem fault_info = 2;
inline int MonitorFaultErrorTable::fault_info_size() const {
  return fault_info_.size();
}
inline void MonitorFaultErrorTable::clear_fault_info() {
  fault_info_.Clear();
}
inline const ::acu::common::MonitorFaultItem& MonitorFaultErrorTable::fault_info(int index) const {
  // @@protoc_insertion_point(field_get:acu.common.MonitorFaultErrorTable.fault_info)
  return fault_info_.Get(index);
}
inline ::acu::common::MonitorFaultItem* MonitorFaultErrorTable::mutable_fault_info(int index) {
  // @@protoc_insertion_point(field_mutable:acu.common.MonitorFaultErrorTable.fault_info)
  return fault_info_.Mutable(index);
}
inline ::acu::common::MonitorFaultItem* MonitorFaultErrorTable::add_fault_info() {
  // @@protoc_insertion_point(field_add:acu.common.MonitorFaultErrorTable.fault_info)
  return fault_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultItem >*
MonitorFaultErrorTable::mutable_fault_info() {
  // @@protoc_insertion_point(field_mutable_list:acu.common.MonitorFaultErrorTable.fault_info)
  return &fault_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultItem >&
MonitorFaultErrorTable::fault_info() const {
  // @@protoc_insertion_point(field_list:acu.common.MonitorFaultErrorTable.fault_info)
  return fault_info_;
}

// -------------------------------------------------------------------

// MonitorTableConf

// repeated .acu.common.MonitorFaultErrorTable table = 1;
inline int MonitorTableConf::table_size() const {
  return table_.size();
}
inline void MonitorTableConf::clear_table() {
  table_.Clear();
}
inline const ::acu::common::MonitorFaultErrorTable& MonitorTableConf::table(int index) const {
  // @@protoc_insertion_point(field_get:acu.common.MonitorTableConf.table)
  return table_.Get(index);
}
inline ::acu::common::MonitorFaultErrorTable* MonitorTableConf::mutable_table(int index) {
  // @@protoc_insertion_point(field_mutable:acu.common.MonitorTableConf.table)
  return table_.Mutable(index);
}
inline ::acu::common::MonitorFaultErrorTable* MonitorTableConf::add_table() {
  // @@protoc_insertion_point(field_add:acu.common.MonitorTableConf.table)
  return table_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultErrorTable >*
MonitorTableConf::mutable_table() {
  // @@protoc_insertion_point(field_mutable_list:acu.common.MonitorTableConf.table)
  return &table_;
}
inline const ::google::protobuf::RepeatedPtrField< ::acu::common::MonitorFaultErrorTable >&
MonitorTableConf::table() const {
  // @@protoc_insertion_point(field_list:acu.common.MonitorTableConf.table)
  return table_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace acu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_monitor_5ftable_5fconfig_2eproto__INCLUDED
