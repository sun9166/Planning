// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error_code.proto

#include "error_code.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace acu {
namespace common {
class StatusPbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusPb>
      _instance;
} _StatusPb_default_instance_;
class FaultInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaultInfo>
      _instance;
} _FaultInfo_default_instance_;
}  // namespace common
}  // namespace acu
namespace protobuf_error_5fcode_2eproto {
void InitDefaultsStatusPbImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::common::_StatusPb_default_instance_;
    new (ptr) ::acu::common::StatusPb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::common::StatusPb::InitAsDefaultInstance();
}

void InitDefaultsStatusPb() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusPbImpl);
}

void InitDefaultsFaultInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::common::_FaultInfo_default_instance_;
    new (ptr) ::acu::common::FaultInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::common::FaultInfo::InitAsDefaultInstance();
}

void InitDefaultsFaultInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFaultInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::StatusPb, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::StatusPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::StatusPb, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::StatusPb, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, timestamp_sec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, fault_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::FaultInfo, fault_type_),
  3,
  0,
  1,
  4,
  5,
  2,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::acu::common::StatusPb)},
  { 9, 21, sizeof(::acu::common::FaultInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::common::_StatusPb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::common::_FaultInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "error_code.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020error_code.proto\022\nacu.common\"F\n\010Status"
      "Pb\022-\n\nerror_code\030\001 \001(\0162\025.acu.common.Erro"
      "rCode:\002OK\022\013\n\003msg\030\002 \001(\t\"\255\001\n\tFaultInfo\022\025\n\r"
      "timestamp_sec\030\001 \001(\001\022\023\n\013module_name\030\002 \001(\t"
      "\022\017\n\007version\030\003 \001(\t\022-\n\nerror_code\030\004 \001(\0162\025."
      "acu.common.ErrorCode:\002OK\022\023\n\013fault_level\030"
      "\005 \001(\005\022\013\n\003msg\030\006 \001(\t\022\022\n\nfault_type\030\007 \001(\005*\346"
      "\034\n\tErrorCode\022\006\n\002OK\020\000\022%\n!LOCALIZATION_IMU"
      "_HARDWARE_0_ERROR\020\020\022%\n!LOCALIZATION_IMU_"
      "HARDWARE_1_ERROR\020\021\022%\n!LOCALIZATION_IMU_H"
      "ARDWARE_2_ERROR\020\022\022!\n\034LOCALIZATION_LOCPOS"
      "E_0_ERROR\020\200\002\022\025\n\020HDMAP_DATA_ERROR\020\200\004\022&\n!P"
      "ERCEPTION_LIDAR_HARDWARE_0_ERROR\020\200 \022&\n!P"
      "ERCEPTION_LIDAR_HARDWARE_1_ERROR\020\201 \022&\n!P"
      "ERCEPTION_LIDAR_HARDWARE_2_ERROR\020\202 \022&\n!P"
      "ERCEPTION_LIDAR_HARDWARE_3_ERROR\020\203 \022&\n!P"
      "ERCEPTION_LIDAR_SOFTWARE_0_ERROR\020\220 \022&\n!P"
      "ERCEPTION_LIDAR_SOFTWARE_1_ERROR\020\221 \022&\n!P"
      "ERCEPTION_LIDAR_SOFTWARE_2_ERROR\020\222 \022&\n!P"
      "ERCEPTION_LIDAR_SOFTWARE_3_ERROR\020\223 \022&\n!P"
      "ERCEPTION_ARS_0_SOFTWARE_0_ERROR\020\240 \022&\n!P"
      "ERCEPTION_ARS_1_SOFTWARE_1_ERROR\020\241 \022\'\n\"P"
      "ERCEPTION_VISION_HARDWARE_0_ERROR\020\200\"\022\'\n\""
      "PERCEPTION_VISION_HARDWARE_1_ERROR\020\201\"\022\'\n"
      "\"PERCEPTION_VISION_HARDWARE_2_ERROR\020\202\"\022\'"
      "\n\"PERCEPTION_VISION_SOFTWARE_0_ERROR\020\220\"\022"
      "+\n&PERCEPTION_ULTRASONIC_HARDWARE_0_ERRO"
      "R\020\200$\022+\n&PERCEPTION_ULTRASONIC_HARDWARE_1"
      "_ERROR\020\201$\022+\n&PERCEPTION_ULTRASONIC_HARDW"
      "ARE_2_ERROR\020\202$\022+\n&PERCEPTION_ULTRASONIC_"
      "HARDWARE_3_ERROR\020\203$\022+\n&PERCEPTION_ULTRAS"
      "ONIC_HARDWARE_4_ERROR\020\204$\022+\n&PERCEPTION_U"
      "LTRASONIC_HARDWARE_5_ERROR\020\205$\022+\n&PERCEPT"
      "ION_ULTRASONIC_HARDWARE_6_ERROR\020\206$\022+\n&PE"
      "RCEPTION_ULTRASONIC_HARDWARE_7_ERROR\020\207$\022"
      "+\n&PERCEPTION_ULTRASONIC_HARDWARE_8_ERRO"
      "R\020\210$\022+\n&PERCEPTION_ULTRASONIC_HARDWARE_9"
      "_ERROR\020\211$\022,\n\'PERCEPTION_ULTRASONIC_HARDW"
      "ARE_10_ERROR\020\212$\022,\n\'PERCEPTION_ULTRASONIC"
      "_HARDWARE_11_ERROR\020\213$\022+\n&PERCEPTION_ULTR"
      "ASONIC_SOFTWARE_0_ERROR\020\220&\022&\n!PERCEPTION"
      "_RADAR_HARDWARE_0_ERROR\020\200(\022&\n!PERCEPTION"
      "_RADAR_HARDWARE_1_ERROR\020\201(\022&\n!PERCEPTION"
      "_RADAR_SOFTWARE_0_ERROR\020\220(\022)\n$PERCEPTION"
      "_MOBILEYE_HARDWARE_0_ERROR\020\200*\022)\n$PERCEPT"
      "ION_MOBILEYE_SOFTWARE_0_ERROR\020\201*\022$\n\037PERC"
      "EPTION_OBJECTFUSION_0_ERROR\020\200,\022*\n%PLANNI"
      "NG_MISSIONPLAN_SOFTWARE_0_ERROR\020\200@\022*\n%PL"
      "ANNING_MISSIONPLAN_SOFTWARE_1_ERROR\020\201@\022+"
      "\n&PLANNING_BEHAVIORPLAN_SOFTWARE_0_ERROR"
      "\020\200B\022\'\n\"PLANNING_PATHPLAN_SOFTWARE_0_ERRO"
      "R\020\200D\022(\n#PLANNING_SPEEDPLAN_SOFTWARE_0_ER"
      "ROR\020\200F\022\025\n\020PREDICTION_ERROR\020\200H\022\034\n\027PCICAN_"
      "HARDWARE_0_ERROR\020\200`\022\034\n\027PCICAN_SOFTWARE_0"
      "_ERROR\020\220`\022\"\n\034CONTROL_LON_SOFTWARE_0_ERRO"
      "R\020\220\200\001\022\"\n\034CONTROL_LAT_SOFTWARE_0_ERROR\020\220\202"
      "\001\022 \n\032MONITOR_APP_CPU_HGIH_ERROR\020\200\240\001\022)\n#M"
      "ONITOR_CLOUDSERVICE_CPU_HGIH_ERROR\020\201\240\001\022)"
      "\n#MONITOR_OBJECTFUSION_CPU_HGIH_ERROR\020\202\240"
      "\001\022&\n MONITOR_LOCFUSION_CPU_HGIH_ERROR\020\203\240"
      "\001\022!\n\033MONITOR_PLAN_CPU_HGIH_ERROR\020\204\240\001\022$\n\036"
      "MONITOR_CONTROL_CPU_HGIH_ERROR\020\205\240\001\022#\n\035MO"
      "NITOR_PCICAN_CPU_HGIH_ERROR\020\206\240\001\022 \n\032MONIT"
      "OR_APP_MEM_HGIH_ERROR\020\200\242\001\022)\n#MONITOR_CLO"
      "UDSERVICE_MEM_HGIH_ERROR\020\201\242\001\022)\n#MONITOR_"
      "OBJECTFUSION_MEM_HGIH_ERROR\020\202\242\001\022&\n MONIT"
      "OR_LOCFUSION_MEM_HGIH_ERROR\020\203\242\001\022!\n\033MONIT"
      "OR_PLAN_MEM_HGIH_ERROR\020\204\242\001\022$\n\036MONITOR_CO"
      "NTROL_MEM_HGIH_ERROR\020\205\242\001\022#\n\035MONITOR_PCIC"
      "AN_MEM_HGIH_ERROR\020\206\242\001\022\036\n\030MONITOR_APP_TIM"
      "E_0_ERROR\020\200\244\001\022\'\n!MONITOR_CLOUDSERVICE_TI"
      "ME_0_ERROR\020\201\244\001\022\'\n!MONITOR_OBJECTFUSION_T"
      "IME_0_ERROR\020\202\244\001\022$\n\036MONITOR_LOCFUSION_TIM"
      "E_0_ERROR\020\203\244\001\022\037\n\031MONITOR_PLAN_TIME_0_ERR"
      "OR\020\204\244\001\022\"\n\034MONITOR_CONTROL_TIME_0_ERROR\020\205"
      "\244\001\022!\n\033MONITOR_PCICAN_TIME_0_ERROR\020\206\244\001\022\036\n"
      "\030MONITOR_APP_TIME_1_ERROR\020\320\244\001\022\'\n!MONITOR"
      "_CLOUDSERVICE_TIME_1_ERROR\020\321\244\001\022\'\n!MONITO"
      "R_OBJECTFUSION_TIME_1_ERROR\020\322\244\001\022$\n\036MONIT"
      "OR_LOCFUSION_TIME_1_ERROR\020\323\244\001\022\037\n\031MONITOR"
      "_PLAN_TIME_1_ERROR\020\324\244\001\022\"\n\034MONITOR_CONTRO"
      "L_TIME_1_ERROR\020\325\244\001\022!\n\033MONITOR_PCICAN_TIM"
      "E_1_ERROR\020\326\244\001\022!\n\033MONITOR_APP_NODE_LOST_E"
      "RROR\020\200\246\001\022*\n$MONITOR_CLOUDSERVICE_NODE_LO"
      "ST_ERROR\020\201\246\001\022*\n$MONITOR_OBJECTFUSION_NOD"
      "E_LOST_ERROR\020\202\246\001\022\'\n!MONITOR_LOCFUSION_NO"
      "DE_LOST_ERROR\020\203\246\001\022\"\n\034MONITOR_PLAN_NODE_L"
      "OST_ERROR\020\204\246\001\022%\n\037MONITOR_CONTROL_NODE_LO"
      "ST_ERROR\020\205\246\001\022$\n\036MONITOR_PCICAN_NODE_LOST"
      "_ERROR\020\206\246\001\022\036\n\030MONITOR_SOFTWARE_0_ERROR\020\200"
      "\250\001\022\031\n\023VEHICLE_EPS_0_ERROR\020\200\300\001\022\031\n\023VEHICLE"
      "_EPS_1_ERROR\020\201\300\001\022\033\n\025VEHICLE_BRAKE_0_ERRO"
      "R\020\220\300\001\022\033\n\025VEHICLE_BRAKE_1_ERROR\020\221\300\001\022\033\n\025VE"
      "HICLE_DRIVE_0_ERROR\020\240\300\001\022\031\n\023VEHICLE_EPB_0"
      "_ERROR\020\260\300\001\022\031\n\023VEHICLE_EPB_1_ERROR\020\261\300\001\022\033\n"
      "\025VEHICLE_POWER_0_ERROR\020\300\300\001\022\033\n\025VEHICLE_PO"
      "WER_1_ERROR\020\301\300\001\022\033\n\025VEHICLE_POWER_2_ERROR"
      "\020\302\300\001\022\033\n\025VEHICLE_POWER_3_ERROR\020\303\300\001\022\031\n\023VEH"
      "ICLE_CPU_0_ERROR\020\320\300\001\022\031\n\023VEHICLE_VCU_1_ER"
      "ROR\020\321\300\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "error_code.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_error_5fcode_2eproto
namespace acu {
namespace common {
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_error_5fcode_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_error_5fcode_2eproto::file_level_enum_descriptors[0];
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 16:
    case 17:
    case 18:
    case 256:
    case 512:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4128:
    case 4129:
    case 4352:
    case 4353:
    case 4354:
    case 4368:
    case 4608:
    case 4609:
    case 4610:
    case 4611:
    case 4612:
    case 4613:
    case 4614:
    case 4615:
    case 4616:
    case 4617:
    case 4618:
    case 4619:
    case 4880:
    case 5120:
    case 5121:
    case 5136:
    case 5376:
    case 5377:
    case 5632:
    case 8192:
    case 8193:
    case 8448:
    case 8704:
    case 8960:
    case 9216:
    case 12288:
    case 12304:
    case 16400:
    case 16656:
    case 20480:
    case 20481:
    case 20482:
    case 20483:
    case 20484:
    case 20485:
    case 20486:
    case 20736:
    case 20737:
    case 20738:
    case 20739:
    case 20740:
    case 20741:
    case 20742:
    case 20992:
    case 20993:
    case 20994:
    case 20995:
    case 20996:
    case 20997:
    case 20998:
    case 21072:
    case 21073:
    case 21074:
    case 21075:
    case 21076:
    case 21077:
    case 21078:
    case 21248:
    case 21249:
    case 21250:
    case 21251:
    case 21252:
    case 21253:
    case 21254:
    case 21504:
    case 24576:
    case 24577:
    case 24592:
    case 24593:
    case 24608:
    case 24624:
    case 24625:
    case 24640:
    case 24641:
    case 24642:
    case 24643:
    case 24656:
    case 24657:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StatusPb::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusPb::kErrorCodeFieldNumber;
const int StatusPb::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusPb::StatusPb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_error_5fcode_2eproto::InitDefaultsStatusPb();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.common.StatusPb)
}
StatusPb::StatusPb(const StatusPb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:acu.common.StatusPb)
}

void StatusPb::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

StatusPb::~StatusPb() {
  // @@protoc_insertion_point(destructor:acu.common.StatusPb)
  SharedDtor();
}

void StatusPb::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatusPb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusPb::descriptor() {
  ::protobuf_error_5fcode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_error_5fcode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusPb& StatusPb::default_instance() {
  ::protobuf_error_5fcode_2eproto::InitDefaultsStatusPb();
  return *internal_default_instance();
}

StatusPb* StatusPb::New(::google::protobuf::Arena* arena) const {
  StatusPb* n = new StatusPb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusPb::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.common.StatusPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_.UnsafeRawStringPointer())->clear();
  }
  error_code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StatusPb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.common.StatusPb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .acu.common.ErrorCode error_code = 1 [default = OK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::acu::common::ErrorCode_IsValid(value)) {
            set_error_code(static_cast< ::acu::common::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.common.StatusPb.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.common.StatusPb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.common.StatusPb)
  return false;
#undef DO_
}

void StatusPb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.common.StatusPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.common.ErrorCode error_code = 1 [default = OK];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.StatusPb.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.common.StatusPb)
}

::google::protobuf::uint8* StatusPb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.common.StatusPb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .acu.common.ErrorCode error_code = 1 [default = OK];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.StatusPb.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.common.StatusPb)
  return target;
}

size_t StatusPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.common.StatusPb)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional .acu.common.ErrorCode error_code = 1 [default = OK];
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusPb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.common.StatusPb)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusPb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusPb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.common.StatusPb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.common.StatusPb)
    MergeFrom(*source);
  }
}

void StatusPb::MergeFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.common.StatusPb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StatusPb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.common.StatusPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusPb::CopyFrom(const StatusPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.common.StatusPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusPb::IsInitialized() const {
  return true;
}

void StatusPb::Swap(StatusPb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusPb::InternalSwap(StatusPb* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(error_code_, other->error_code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusPb::GetMetadata() const {
  protobuf_error_5fcode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_error_5fcode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaultInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaultInfo::kTimestampSecFieldNumber;
const int FaultInfo::kModuleNameFieldNumber;
const int FaultInfo::kVersionFieldNumber;
const int FaultInfo::kErrorCodeFieldNumber;
const int FaultInfo::kFaultLevelFieldNumber;
const int FaultInfo::kMsgFieldNumber;
const int FaultInfo::kFaultTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaultInfo::FaultInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_error_5fcode_2eproto::InitDefaultsFaultInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.common.FaultInfo)
}
FaultInfo::FaultInfo(const FaultInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_name()) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&timestamp_sec_, &from.timestamp_sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&fault_type_) -
    reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
  // @@protoc_insertion_point(copy_constructor:acu.common.FaultInfo)
}

void FaultInfo::SharedCtor() {
  _cached_size_ = 0;
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fault_type_) -
      reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
}

FaultInfo::~FaultInfo() {
  // @@protoc_insertion_point(destructor:acu.common.FaultInfo)
  SharedDtor();
}

void FaultInfo::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaultInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FaultInfo::descriptor() {
  ::protobuf_error_5fcode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_error_5fcode_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaultInfo& FaultInfo::default_instance() {
  ::protobuf_error_5fcode_2eproto::InitDefaultsFaultInfo();
  return *internal_default_instance();
}

FaultInfo* FaultInfo::New(::google::protobuf::Arena* arena) const {
  FaultInfo* n = new FaultInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FaultInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.common.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!module_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*msg_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&timestamp_sec_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fault_type_) -
        reinterpret_cast<char*>(&timestamp_sec_)) + sizeof(fault_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaultInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.common.FaultInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double timestamp_sec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_timestamp_sec();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_sec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_name().data(), static_cast<int>(this->module_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.common.FaultInfo.module_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.common.FaultInfo.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .acu.common.ErrorCode error_code = 4 [default = OK];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::acu::common::ErrorCode_IsValid(value)) {
            set_error_code(static_cast< ::acu::common::ErrorCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                4, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fault_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_fault_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fault_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.common.FaultInfo.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fault_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_fault_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fault_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.common.FaultInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.common.FaultInfo)
  return false;
#undef DO_
}

void FaultInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.common.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp_sec = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->timestamp_sec(), output);
  }

  // optional string module_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->module_name(), output);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // optional .acu.common.ErrorCode error_code = 4 [default = OK];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->error_code(), output);
  }

  // optional int32 fault_level = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fault_level(), output);
  }

  // optional string msg = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // optional int32 fault_type = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fault_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.common.FaultInfo)
}

::google::protobuf::uint8* FaultInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.common.FaultInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double timestamp_sec = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->timestamp_sec(), target);
  }

  // optional string module_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), static_cast<int>(this->module_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->module_name(), target);
  }

  // optional string version = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // optional .acu.common.ErrorCode error_code = 4 [default = OK];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->error_code(), target);
  }

  // optional int32 fault_level = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fault_level(), target);
  }

  // optional string msg = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.FaultInfo.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // optional int32 fault_type = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fault_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.common.FaultInfo)
  return target;
}

size_t FaultInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.common.FaultInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string module_name = 2;
    if (has_module_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_name());
    }

    // optional string version = 3;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string msg = 6;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional double timestamp_sec = 1;
    if (has_timestamp_sec()) {
      total_size += 1 + 8;
    }

    // optional .acu.common.ErrorCode error_code = 4 [default = OK];
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
    }

    // optional int32 fault_level = 5;
    if (has_fault_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fault_level());
    }

    // optional int32 fault_type = 7;
    if (has_fault_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fault_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FaultInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.common.FaultInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FaultInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaultInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.common.FaultInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.common.FaultInfo)
    MergeFrom(*source);
  }
}

void FaultInfo::MergeFrom(const FaultInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.common.FaultInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_module_name();
      module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_sec_ = from.timestamp_sec_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_code_ = from.error_code_;
    }
    if (cached_has_bits & 0x00000020u) {
      fault_level_ = from.fault_level_;
    }
    if (cached_has_bits & 0x00000040u) {
      fault_type_ = from.fault_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FaultInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.common.FaultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaultInfo::CopyFrom(const FaultInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.common.FaultInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaultInfo::IsInitialized() const {
  return true;
}

void FaultInfo::Swap(FaultInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaultInfo::InternalSwap(FaultInfo* other) {
  using std::swap;
  module_name_.Swap(&other->module_name_);
  version_.Swap(&other->version_);
  msg_.Swap(&other->msg_);
  swap(timestamp_sec_, other->timestamp_sec_);
  swap(error_code_, other->error_code_);
  swap(fault_level_, other->fault_level_);
  swap(fault_type_, other->fault_type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FaultInfo::GetMetadata() const {
  protobuf_error_5fcode_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_error_5fcode_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace acu

// @@protoc_insertion_point(global_scope)
