// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: monitor_table_config.proto

#include "monitor_table_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace acu {
namespace common {
class MonitorFaultItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitorFaultItem>
      _instance;
} _MonitorFaultItem_default_instance_;
class MonitorFaultErrorTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitorFaultErrorTable>
      _instance;
} _MonitorFaultErrorTable_default_instance_;
class MonitorTableConfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonitorTableConf>
      _instance;
} _MonitorTableConf_default_instance_;
}  // namespace common
}  // namespace acu
namespace protobuf_monitor_5ftable_5fconfig_2eproto {
void InitDefaultsMonitorFaultItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::acu::common::_MonitorFaultItem_default_instance_;
    new (ptr) ::acu::common::MonitorFaultItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::common::MonitorFaultItem::InitAsDefaultInstance();
}

void InitDefaultsMonitorFaultItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMonitorFaultItemImpl);
}

void InitDefaultsMonitorFaultErrorTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultItem();
  {
    void* ptr = &::acu::common::_MonitorFaultErrorTable_default_instance_;
    new (ptr) ::acu::common::MonitorFaultErrorTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::common::MonitorFaultErrorTable::InitAsDefaultInstance();
}

void InitDefaultsMonitorFaultErrorTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMonitorFaultErrorTableImpl);
}

void InitDefaultsMonitorTableConfImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultErrorTable();
  {
    void* ptr = &::acu::common::_MonitorTableConf_default_instance_;
    new (ptr) ::acu::common::MonitorTableConf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::acu::common::MonitorTableConf::InitAsDefaultInstance();
}

void InitDefaultsMonitorTableConf() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMonitorTableConfImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultItem, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultItem, fault_level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultErrorTable, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultErrorTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultErrorTable, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorFaultErrorTable, fault_info_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorTableConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorTableConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::acu::common::MonitorTableConf, table_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::acu::common::MonitorFaultItem)},
  { 9, 16, sizeof(::acu::common::MonitorFaultErrorTable)},
  { 18, 24, sizeof(::acu::common::MonitorTableConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::common::_MonitorFaultItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::common::_MonitorFaultErrorTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::acu::common::_MonitorTableConf_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "monitor_table_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032monitor_table_config.proto\022\nacu.common"
      "\";\n\020MonitorFaultItem\022\022\n\nerror_code\030\001 \002(\r"
      "\022\023\n\013fault_level\030\002 \002(\005\"^\n\026MonitorFaultErr"
      "orTable\022\022\n\ntable_name\030\001 \002(\t\0220\n\nfault_inf"
      "o\030\002 \003(\0132\034.acu.common.MonitorFaultItem\"E\n"
      "\020MonitorTableConf\0221\n\005table\030\001 \003(\0132\".acu.c"
      "ommon.MonitorFaultErrorTable"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "monitor_table_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_monitor_5ftable_5fconfig_2eproto
namespace acu {
namespace common {

// ===================================================================

void MonitorFaultItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorFaultItem::kErrorCodeFieldNumber;
const int MonitorFaultItem::kFaultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorFaultItem::MonitorFaultItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.common.MonitorFaultItem)
}
MonitorFaultItem::MonitorFaultItem(const MonitorFaultItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&fault_level_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(fault_level_));
  // @@protoc_insertion_point(copy_constructor:acu.common.MonitorFaultItem)
}

void MonitorFaultItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fault_level_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(fault_level_));
}

MonitorFaultItem::~MonitorFaultItem() {
  // @@protoc_insertion_point(destructor:acu.common.MonitorFaultItem)
  SharedDtor();
}

void MonitorFaultItem::SharedDtor() {
}

void MonitorFaultItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorFaultItem::descriptor() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorFaultItem& MonitorFaultItem::default_instance() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultItem();
  return *internal_default_instance();
}

MonitorFaultItem* MonitorFaultItem::New(::google::protobuf::Arena* arena) const {
  MonitorFaultItem* n = new MonitorFaultItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorFaultItem::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.common.MonitorFaultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&error_code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fault_level_) -
        reinterpret_cast<char*>(&error_code_)) + sizeof(fault_level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorFaultItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.common.MonitorFaultItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 fault_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_fault_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fault_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.common.MonitorFaultItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.common.MonitorFaultItem)
  return false;
#undef DO_
}

void MonitorFaultItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.common.MonitorFaultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 error_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->error_code(), output);
  }

  // required int32 fault_level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fault_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.common.MonitorFaultItem)
}

::google::protobuf::uint8* MonitorFaultItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.common.MonitorFaultItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 error_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->error_code(), target);
  }

  // required int32 fault_level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fault_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.common.MonitorFaultItem)
  return target;
}

size_t MonitorFaultItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:acu.common.MonitorFaultItem)
  size_t total_size = 0;

  if (has_error_code()) {
    // required uint32 error_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  if (has_fault_level()) {
    // required int32 fault_level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fault_level());
  }

  return total_size;
}
size_t MonitorFaultItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.common.MonitorFaultItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 error_code = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());

    // required int32 fault_level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fault_level());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorFaultItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.common.MonitorFaultItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorFaultItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorFaultItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.common.MonitorFaultItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.common.MonitorFaultItem)
    MergeFrom(*source);
  }
}

void MonitorFaultItem::MergeFrom(const MonitorFaultItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.common.MonitorFaultItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      error_code_ = from.error_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      fault_level_ = from.fault_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MonitorFaultItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.common.MonitorFaultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorFaultItem::CopyFrom(const MonitorFaultItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.common.MonitorFaultItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorFaultItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void MonitorFaultItem::Swap(MonitorFaultItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorFaultItem::InternalSwap(MonitorFaultItem* other) {
  using std::swap;
  swap(error_code_, other->error_code_);
  swap(fault_level_, other->fault_level_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorFaultItem::GetMetadata() const {
  protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitorFaultErrorTable::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorFaultErrorTable::kTableNameFieldNumber;
const int MonitorFaultErrorTable::kFaultInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorFaultErrorTable::MonitorFaultErrorTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultErrorTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.common.MonitorFaultErrorTable)
}
MonitorFaultErrorTable::MonitorFaultErrorTable(const MonitorFaultErrorTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      fault_info_(from.fault_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_table_name()) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  // @@protoc_insertion_point(copy_constructor:acu.common.MonitorFaultErrorTable)
}

void MonitorFaultErrorTable::SharedCtor() {
  _cached_size_ = 0;
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MonitorFaultErrorTable::~MonitorFaultErrorTable() {
  // @@protoc_insertion_point(destructor:acu.common.MonitorFaultErrorTable)
  SharedDtor();
}

void MonitorFaultErrorTable::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonitorFaultErrorTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorFaultErrorTable::descriptor() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorFaultErrorTable& MonitorFaultErrorTable::default_instance() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorFaultErrorTable();
  return *internal_default_instance();
}

MonitorFaultErrorTable* MonitorFaultErrorTable::New(::google::protobuf::Arena* arena) const {
  MonitorFaultErrorTable* n = new MonitorFaultErrorTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorFaultErrorTable::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.common.MonitorFaultErrorTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fault_info_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!table_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*table_name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorFaultErrorTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.common.MonitorFaultErrorTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "acu.common.MonitorFaultErrorTable.table_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .acu.common.MonitorFaultItem fault_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fault_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.common.MonitorFaultErrorTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.common.MonitorFaultErrorTable)
  return false;
#undef DO_
}

void MonitorFaultErrorTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.common.MonitorFaultErrorTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.MonitorFaultErrorTable.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .acu.common.MonitorFaultItem fault_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fault_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fault_info(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.common.MonitorFaultErrorTable)
}

::google::protobuf::uint8* MonitorFaultErrorTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.common.MonitorFaultErrorTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string table_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "acu.common.MonitorFaultErrorTable.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .acu.common.MonitorFaultItem fault_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fault_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->fault_info(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.common.MonitorFaultErrorTable)
  return target;
}

size_t MonitorFaultErrorTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.common.MonitorFaultErrorTable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string table_name = 1;
  if (has_table_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }
  // repeated .acu.common.MonitorFaultItem fault_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fault_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fault_info(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorFaultErrorTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.common.MonitorFaultErrorTable)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorFaultErrorTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorFaultErrorTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.common.MonitorFaultErrorTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.common.MonitorFaultErrorTable)
    MergeFrom(*source);
  }
}

void MonitorFaultErrorTable::MergeFrom(const MonitorFaultErrorTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.common.MonitorFaultErrorTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fault_info_.MergeFrom(from.fault_info_);
  if (from.has_table_name()) {
    set_has_table_name();
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
}

void MonitorFaultErrorTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.common.MonitorFaultErrorTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorFaultErrorTable::CopyFrom(const MonitorFaultErrorTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.common.MonitorFaultErrorTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorFaultErrorTable::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fault_info())) return false;
  return true;
}

void MonitorFaultErrorTable::Swap(MonitorFaultErrorTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorFaultErrorTable::InternalSwap(MonitorFaultErrorTable* other) {
  using std::swap;
  fault_info_.InternalSwap(&other->fault_info_);
  table_name_.Swap(&other->table_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorFaultErrorTable::GetMetadata() const {
  protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonitorTableConf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonitorTableConf::kTableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonitorTableConf::MonitorTableConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorTableConf();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:acu.common.MonitorTableConf)
}
MonitorTableConf::MonitorTableConf(const MonitorTableConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      table_(from.table_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:acu.common.MonitorTableConf)
}

void MonitorTableConf::SharedCtor() {
  _cached_size_ = 0;
}

MonitorTableConf::~MonitorTableConf() {
  // @@protoc_insertion_point(destructor:acu.common.MonitorTableConf)
  SharedDtor();
}

void MonitorTableConf::SharedDtor() {
}

void MonitorTableConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonitorTableConf::descriptor() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonitorTableConf& MonitorTableConf::default_instance() {
  ::protobuf_monitor_5ftable_5fconfig_2eproto::InitDefaultsMonitorTableConf();
  return *internal_default_instance();
}

MonitorTableConf* MonitorTableConf::New(::google::protobuf::Arena* arena) const {
  MonitorTableConf* n = new MonitorTableConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonitorTableConf::Clear() {
// @@protoc_insertion_point(message_clear_start:acu.common.MonitorTableConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonitorTableConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:acu.common.MonitorTableConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .acu.common.MonitorFaultErrorTable table = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_table()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:acu.common.MonitorTableConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:acu.common.MonitorTableConf)
  return false;
#undef DO_
}

void MonitorTableConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:acu.common.MonitorTableConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.MonitorFaultErrorTable table = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->table(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:acu.common.MonitorTableConf)
}

::google::protobuf::uint8* MonitorTableConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:acu.common.MonitorTableConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .acu.common.MonitorFaultErrorTable table = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->table(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:acu.common.MonitorTableConf)
  return target;
}

size_t MonitorTableConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:acu.common.MonitorTableConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .acu.common.MonitorFaultErrorTable table = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->table_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonitorTableConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:acu.common.MonitorTableConf)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorTableConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonitorTableConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:acu.common.MonitorTableConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:acu.common.MonitorTableConf)
    MergeFrom(*source);
  }
}

void MonitorTableConf::MergeFrom(const MonitorTableConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:acu.common.MonitorTableConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_.MergeFrom(from.table_);
}

void MonitorTableConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:acu.common.MonitorTableConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorTableConf::CopyFrom(const MonitorTableConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:acu.common.MonitorTableConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorTableConf::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->table())) return false;
  return true;
}

void MonitorTableConf::Swap(MonitorTableConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonitorTableConf::InternalSwap(MonitorTableConf* other) {
  using std::swap;
  table_.InternalSwap(&other->table_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonitorTableConf::GetMetadata() const {
  protobuf_monitor_5ftable_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_monitor_5ftable_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace acu

// @@protoc_insertion_point(global_scope)
