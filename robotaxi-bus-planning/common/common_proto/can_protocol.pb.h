// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: can_protocol.proto

#ifndef PROTOBUF_can_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_can_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_can_5fprotocol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSignalsImpl();
void InitDefaultsSignals();
void InitDefaultsCanFrameImpl();
void InitDefaultsCanFrame();
void InitDefaultsCanProtocolImpl();
void InitDefaultsCanProtocol();
inline void InitDefaults() {
  InitDefaultsSignals();
  InitDefaultsCanFrame();
  InitDefaultsCanProtocol();
}
}  // namespace protobuf_can_5fprotocol_2eproto
namespace acu {
namespace common {
namespace util {
class CanFrame;
class CanFrameDefaultTypeInternal;
extern CanFrameDefaultTypeInternal _CanFrame_default_instance_;
class CanProtocol;
class CanProtocolDefaultTypeInternal;
extern CanProtocolDefaultTypeInternal _CanProtocol_default_instance_;
class Signals;
class SignalsDefaultTypeInternal;
extern SignalsDefaultTypeInternal _Signals_default_instance_;
}  // namespace util
}  // namespace common
}  // namespace acu
namespace acu {
namespace common {
namespace util {

// ===================================================================

class Signals : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.util.Signals) */ {
 public:
  Signals();
  virtual ~Signals();

  Signals(const Signals& from);

  inline Signals& operator=(const Signals& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Signals(Signals&& from) noexcept
    : Signals() {
    *this = ::std::move(from);
  }

  inline Signals& operator=(Signals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Signals* internal_default_instance() {
    return reinterpret_cast<const Signals*>(
               &_Signals_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Signals* other);
  friend void swap(Signals& a, Signals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Signals* New() const PROTOBUF_FINAL { return New(NULL); }

  Signals* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Signals& from);
  void MergeFrom(const Signals& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Signals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 start_bit = 2;
  bool has_start_bit() const;
  void clear_start_bit();
  static const int kStartBitFieldNumber = 2;
  ::google::protobuf::uint32 start_bit() const;
  void set_start_bit(::google::protobuf::uint32 value);

  // required uint32 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // optional float offset = 5 [default = 0];
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 5;
  float offset() const;
  void set_offset(float value);

  // optional int32 value = 6 [default = 0];
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 6;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional float factor = 4 [default = 1];
  bool has_factor() const;
  void clear_factor();
  static const int kFactorFieldNumber = 4;
  float factor() const;
  void set_factor(float value);

  // @@protoc_insertion_point(class_scope:acu.common.util.Signals)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_start_bit();
  void clear_has_start_bit();
  void set_has_length();
  void clear_has_length();
  void set_has_factor();
  void clear_has_factor();
  void set_has_offset();
  void clear_has_offset();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 start_bit_;
  ::google::protobuf::uint32 length_;
  float offset_;
  ::google::protobuf::int32 value_;
  float factor_;
  friend struct ::protobuf_can_5fprotocol_2eproto::TableStruct;
  friend void ::protobuf_can_5fprotocol_2eproto::InitDefaultsSignalsImpl();
};
// -------------------------------------------------------------------

class CanFrame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.util.CanFrame) */ {
 public:
  CanFrame();
  virtual ~CanFrame();

  CanFrame(const CanFrame& from);

  inline CanFrame& operator=(const CanFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CanFrame(CanFrame&& from) noexcept
    : CanFrame() {
    *this = ::std::move(from);
  }

  inline CanFrame& operator=(CanFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanFrame* internal_default_instance() {
    return reinterpret_cast<const CanFrame*>(
               &_CanFrame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CanFrame* other);
  friend void swap(CanFrame& a, CanFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CanFrame* New() const PROTOBUF_FINAL { return New(NULL); }

  CanFrame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CanFrame& from);
  void MergeFrom(const CanFrame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CanFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acu.common.util.Signals signal_params = 2;
  int signal_params_size() const;
  void clear_signal_params();
  static const int kSignalParamsFieldNumber = 2;
  const ::acu::common::util::Signals& signal_params(int index) const;
  ::acu::common::util::Signals* mutable_signal_params(int index);
  ::acu::common::util::Signals* add_signal_params();
  ::google::protobuf::RepeatedPtrField< ::acu::common::util::Signals >*
      mutable_signal_params();
  const ::google::protobuf::RepeatedPtrField< ::acu::common::util::Signals >&
      signal_params() const;

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:acu.common.util.CanFrame)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::acu::common::util::Signals > signal_params_;
  ::google::protobuf::uint32 id_;
  friend struct ::protobuf_can_5fprotocol_2eproto::TableStruct;
  friend void ::protobuf_can_5fprotocol_2eproto::InitDefaultsCanFrameImpl();
};
// -------------------------------------------------------------------

class CanProtocol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:acu.common.util.CanProtocol) */ {
 public:
  CanProtocol();
  virtual ~CanProtocol();

  CanProtocol(const CanProtocol& from);

  inline CanProtocol& operator=(const CanProtocol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CanProtocol(CanProtocol&& from) noexcept
    : CanProtocol() {
    *this = ::std::move(from);
  }

  inline CanProtocol& operator=(CanProtocol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanProtocol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanProtocol* internal_default_instance() {
    return reinterpret_cast<const CanProtocol*>(
               &_CanProtocol_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CanProtocol* other);
  friend void swap(CanProtocol& a, CanProtocol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CanProtocol* New() const PROTOBUF_FINAL { return New(NULL); }

  CanProtocol* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CanProtocol& from);
  void MergeFrom(const CanProtocol& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CanProtocol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .acu.common.util.CanFrame can_frame = 1;
  int can_frame_size() const;
  void clear_can_frame();
  static const int kCanFrameFieldNumber = 1;
  const ::acu::common::util::CanFrame& can_frame(int index) const;
  ::acu::common::util::CanFrame* mutable_can_frame(int index);
  ::acu::common::util::CanFrame* add_can_frame();
  ::google::protobuf::RepeatedPtrField< ::acu::common::util::CanFrame >*
      mutable_can_frame();
  const ::google::protobuf::RepeatedPtrField< ::acu::common::util::CanFrame >&
      can_frame() const;

  // @@protoc_insertion_point(class_scope:acu.common.util.CanProtocol)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::acu::common::util::CanFrame > can_frame_;
  friend struct ::protobuf_can_5fprotocol_2eproto::TableStruct;
  friend void ::protobuf_can_5fprotocol_2eproto::InitDefaultsCanProtocolImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Signals

// required string name = 1;
inline bool Signals::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Signals::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Signals::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Signals::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Signals::name() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.name)
  return name_.GetNoArena();
}
inline void Signals::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.name)
}
#if LANG_CXX11
inline void Signals::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:acu.common.util.Signals.name)
}
#endif
inline void Signals::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:acu.common.util.Signals.name)
}
inline void Signals::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:acu.common.util.Signals.name)
}
inline ::std::string* Signals::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:acu.common.util.Signals.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signals::release_name() {
  // @@protoc_insertion_point(field_release:acu.common.util.Signals.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signals::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:acu.common.util.Signals.name)
}

// required uint32 start_bit = 2;
inline bool Signals::has_start_bit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Signals::set_has_start_bit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Signals::clear_has_start_bit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Signals::clear_start_bit() {
  start_bit_ = 0u;
  clear_has_start_bit();
}
inline ::google::protobuf::uint32 Signals::start_bit() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.start_bit)
  return start_bit_;
}
inline void Signals::set_start_bit(::google::protobuf::uint32 value) {
  set_has_start_bit();
  start_bit_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.start_bit)
}

// required uint32 length = 3;
inline bool Signals::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Signals::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Signals::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Signals::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 Signals::length() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.length)
  return length_;
}
inline void Signals::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.length)
}

// optional float factor = 4 [default = 1];
inline bool Signals::has_factor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Signals::set_has_factor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Signals::clear_has_factor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Signals::clear_factor() {
  factor_ = 1;
  clear_has_factor();
}
inline float Signals::factor() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.factor)
  return factor_;
}
inline void Signals::set_factor(float value) {
  set_has_factor();
  factor_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.factor)
}

// optional float offset = 5 [default = 0];
inline bool Signals::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Signals::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Signals::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Signals::clear_offset() {
  offset_ = 0;
  clear_has_offset();
}
inline float Signals::offset() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.offset)
  return offset_;
}
inline void Signals::set_offset(float value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.offset)
}

// optional int32 value = 6 [default = 0];
inline bool Signals::has_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Signals::set_has_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Signals::clear_has_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Signals::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 Signals::value() const {
  // @@protoc_insertion_point(field_get:acu.common.util.Signals.value)
  return value_;
}
inline void Signals::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.Signals.value)
}

// -------------------------------------------------------------------

// CanFrame

// required uint32 id = 1;
inline bool CanFrame::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CanFrame::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CanFrame::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CanFrame::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CanFrame::id() const {
  // @@protoc_insertion_point(field_get:acu.common.util.CanFrame.id)
  return id_;
}
inline void CanFrame::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:acu.common.util.CanFrame.id)
}

// repeated .acu.common.util.Signals signal_params = 2;
inline int CanFrame::signal_params_size() const {
  return signal_params_.size();
}
inline void CanFrame::clear_signal_params() {
  signal_params_.Clear();
}
inline const ::acu::common::util::Signals& CanFrame::signal_params(int index) const {
  // @@protoc_insertion_point(field_get:acu.common.util.CanFrame.signal_params)
  return signal_params_.Get(index);
}
inline ::acu::common::util::Signals* CanFrame::mutable_signal_params(int index) {
  // @@protoc_insertion_point(field_mutable:acu.common.util.CanFrame.signal_params)
  return signal_params_.Mutable(index);
}
inline ::acu::common::util::Signals* CanFrame::add_signal_params() {
  // @@protoc_insertion_point(field_add:acu.common.util.CanFrame.signal_params)
  return signal_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::acu::common::util::Signals >*
CanFrame::mutable_signal_params() {
  // @@protoc_insertion_point(field_mutable_list:acu.common.util.CanFrame.signal_params)
  return &signal_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::acu::common::util::Signals >&
CanFrame::signal_params() const {
  // @@protoc_insertion_point(field_list:acu.common.util.CanFrame.signal_params)
  return signal_params_;
}

// -------------------------------------------------------------------

// CanProtocol

// repeated .acu.common.util.CanFrame can_frame = 1;
inline int CanProtocol::can_frame_size() const {
  return can_frame_.size();
}
inline void CanProtocol::clear_can_frame() {
  can_frame_.Clear();
}
inline const ::acu::common::util::CanFrame& CanProtocol::can_frame(int index) const {
  // @@protoc_insertion_point(field_get:acu.common.util.CanProtocol.can_frame)
  return can_frame_.Get(index);
}
inline ::acu::common::util::CanFrame* CanProtocol::mutable_can_frame(int index) {
  // @@protoc_insertion_point(field_mutable:acu.common.util.CanProtocol.can_frame)
  return can_frame_.Mutable(index);
}
inline ::acu::common::util::CanFrame* CanProtocol::add_can_frame() {
  // @@protoc_insertion_point(field_add:acu.common.util.CanProtocol.can_frame)
  return can_frame_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::acu::common::util::CanFrame >*
CanProtocol::mutable_can_frame() {
  // @@protoc_insertion_point(field_mutable_list:acu.common.util.CanProtocol.can_frame)
  return &can_frame_;
}
inline const ::google::protobuf::RepeatedPtrField< ::acu::common::util::CanFrame >&
CanProtocol::can_frame() const {
  // @@protoc_insertion_point(field_list:acu.common.util.CanProtocol.can_frame)
  return can_frame_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace util
}  // namespace common
}  // namespace acu

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_can_5fprotocol_2eproto__INCLUDED
